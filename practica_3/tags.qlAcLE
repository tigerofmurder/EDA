cimg_version	CImg.h	57;"	d
cimg_OS	CImg.h	99;"	d
cimg_OS	CImg.h	102;"	d
cimg_OS	CImg.h	104;"	d
cimg_date	CImg.h	111;"	d
cimg_time	CImg.h	114;"	d
_CRT_SECURE_NO_DEPRECATE	CImg.h	136;"	d
_CRT_SECURE_NO_WARNINGS	CImg.h	139;"	d
_CRT_NONSTDC_NO_DEPRECATE	CImg.h	142;"	d
cimg_sscanf	CImg.h	148;"	d
cimg_sprintf	CImg.h	149;"	d
cimg_snprintf	CImg.h	150;"	d
cimg_vsnprintf	CImg.h	151;"	d
cimg_sscanf	CImg.h	155;"	d
cimg_sprintf	CImg.h	156;"	d
cimg_snprintf	CImg.h	157;"	d
cimg_vsnprintf	CImg.h	158;"	d
cimg_sscanf	CImg.h	160;"	d
cimg_sprintf	CImg.h	161;"	d
cimg_snprintf	CImg.h	162;"	d
cimg_vsnprintf	CImg.h	163;"	d
NOMINMAX	CImg.h	177;"	d
WIN32_LEAN_AND_MEAN	CImg.h	180;"	d
_WIN32_IE	CImg.h	184;"	d
cimg_use_cpp11	CImg.h	194;"	d
cimg_use_cpp11	CImg.h	196;"	d
cimg_pragma	CImg.h	206;"	d
cimg_pragma	CImg.h	208;"	d
cimg_uint64	CImg.h	215;"	d
cimg_int64	CImg.h	216;"	d
cimg_ulong	CImg.h	217;"	d
cimg_long	CImg.h	218;"	d
cimg_fuint64	CImg.h	220;"	d
cimg_fint64	CImg.h	221;"	d
cimg_fuint64	CImg.h	223;"	d
cimg_fint64	CImg.h	224;"	d
cimg_uint64	CImg.h	230;"	d
cimg_int64	CImg.h	231;"	d
cimg_fuint64	CImg.h	232;"	d
cimg_fint64	CImg.h	233;"	d
cimg_uint64	CImg.h	235;"	d
cimg_int64	CImg.h	236;"	d
cimg_fuint64	CImg.h	237;"	d
cimg_fint64	CImg.h	238;"	d
cimg_ulong	CImg.h	242;"	d
cimg_long	CImg.h	243;"	d
cimg_ulong	CImg.h	245;"	d
cimg_long	CImg.h	246;"	d
cimg_file_separator	CImg.h	256;"	d
cimg_file_separator	CImg.h	258;"	d
cimg_verbosity	CImg.h	275;"	d
cimg_verbosity	CImg.h	277;"	d
cimg_display	CImg.h	291;"	d
cimg_display	CImg.h	293;"	d
cimg_display	CImg.h	295;"	d
_cimg_abort_init_omp	CImg.h	312;"	d
_cimg_abort_try_omp	CImg.h	315;"	d
_cimg_abort_catch_omp	CImg.h	318;"	d
_cimg_abort_try_omp2	CImg.h	322;"	d
_cimg_abort_catch_omp2	CImg.h	325;"	d
_cimg_abort_catch_fill_omp	CImg.h	328;"	d
_cimg_abort_init_omp	CImg.h	336;"	d
_cimg_abort_try_omp	CImg.h	339;"	d
_cimg_abort_catch_omp	CImg.h	342;"	d
_cimg_abort_try_omp2	CImg.h	345;"	d
_cimg_abort_catch_omp2	CImg.h	348;"	d
_cimg_abort_catch_fill_omp	CImg.h	351;"	d
cimg_abort_init	CImg.h	354;"	d
cimg_abort_test	CImg.h	357;"	d
cimg_abort_test2	CImg.h	360;"	d
cimg_appname	CImg.h	379;"	d
cimg_pragma_openmp	CImg.h	391;"	d
cimg_pragma_openmp	CImg.h	393;"	d
True	CImg.h	405;"	d
_cimg_redefine_True	CImg.h	406;"	d
False	CImg.h	409;"	d
_cimg_redefine_False	CImg.h	410;"	d
uint64	CImg.h	453;"	d
int64	CImg.h	454;"	d
uint64	CImg.h	456;"	d
int64	CImg.h	457;"	d
TINYEXR_IMPLEMENTATION	CImg.h	558;"	d
sgetrf_	CImg.h	/^  extern void sgetrf_(int*, int*, float*, int*, int*, int*);$/;"	p
sgetri_	CImg.h	/^  extern void sgetri_(int*, float*, int*, int*, float*, int*, int*);$/;"	p
sgetrs_	CImg.h	/^  extern void sgetrs_(char*, int*, int*, float*, int*, int*, float*, int*, int*);$/;"	p
sgesvd_	CImg.h	/^  extern void sgesvd_(char*, char*, int*, int*, float*, int*, float*, float*, int*, float*, int*, float*, int*, int*);$/;"	p
ssyev_	CImg.h	/^  extern void ssyev_(char*, char*, int*, float*, int*, float*, float*, int*, int*);$/;"	p
dgetrf_	CImg.h	/^  extern void dgetrf_(int*, int*, double*, int*, int*, int*);$/;"	p
dgetri_	CImg.h	/^  extern void dgetri_(int*, double*, int*, int*, double*, int*, int*);$/;"	p
dgetrs_	CImg.h	/^  extern void dgetrs_(char*, int*, int*, double*, int*, int*, double*, int*, int*);$/;"	p
dgesvd_	CImg.h	/^  extern void dgesvd_(char*, char*, int*, int*, double*, int*, double*, double*,$/;"	p
dsyev_	CImg.h	/^  extern void dsyev_(char*, char*, int*, double*, int*, double*, double*, int*, int*);$/;"	p
dgels_	CImg.h	/^  extern void dgels_(char*, int*,int*,int*,double*,int*,double*,int*,double*,int*,int*);$/;"	p
sgels_	CImg.h	/^  extern void sgels_(char*, int*,int*,int*,float*,int*,float*,int*,float*,int*,int*);$/;"	p
min	CImg.h	595;"	d
_cimg_redefine_min	CImg.h	596;"	d
max	CImg.h	599;"	d
_cimg_redefine_max	CImg.h	600;"	d
PI	CImg.h	603;"	d
_cimg_redefine_PI	CImg.h	604;"	d
__cimg_library_suffixed	CImg.h	612;"	d
_cimg_library_suffixed	CImg.h	613;"	d
cimg_library_suffixed	CImg.h	614;"	d
cimg_library_suffixed	CImg.h	616;"	d
cimg_usage	CImg.h	629;"	d
cimg_help	CImg.h	630;"	d
cimg_option	CImg.h	631;"	d
CImg_2x2	CImg.h	634;"	d
CImg_3x3	CImg.h	640;"	d
CImg_4x4	CImg.h	648;"	d
CImg_5x5	CImg.h	658;"	d
CImg_2x2x2	CImg.h	670;"	d
CImg_3x3x3	CImg.h	680;"	d
cimg_get2x2	CImg.h	700;"	d
cimg_get3x3	CImg.h	704;"	d
cimg_get4x4	CImg.h	709;"	d
cimg_get5x5	CImg.h	717;"	d
cimg_get6x6	CImg.h	728;"	d
cimg_get7x7	CImg.h	742;"	d
cimg_get8x8	CImg.h	761;"	d
cimg_get9x9	CImg.h	785;"	d
cimg_get2x2x2	CImg.h	814;"	d
cimg_get3x3x3	CImg.h	819;"	d
cimg_for	CImg.h	834;"	d
cimg_rof	CImg.h	836;"	d
cimg_foroff	CImg.h	837;"	d
cimg_for1	CImg.h	839;"	d
cimg_forX	CImg.h	840;"	d
cimg_forY	CImg.h	841;"	d
cimg_forZ	CImg.h	842;"	d
cimg_forC	CImg.h	843;"	d
cimg_forXY	CImg.h	844;"	d
cimg_forXZ	CImg.h	845;"	d
cimg_forYZ	CImg.h	846;"	d
cimg_forXC	CImg.h	847;"	d
cimg_forYC	CImg.h	848;"	d
cimg_forZC	CImg.h	849;"	d
cimg_forXYZ	CImg.h	850;"	d
cimg_forXYC	CImg.h	851;"	d
cimg_forXZC	CImg.h	852;"	d
cimg_forYZC	CImg.h	853;"	d
cimg_forXYZC	CImg.h	854;"	d
cimg_rof1	CImg.h	856;"	d
cimg_rofX	CImg.h	857;"	d
cimg_rofY	CImg.h	858;"	d
cimg_rofZ	CImg.h	859;"	d
cimg_rofC	CImg.h	860;"	d
cimg_rofXY	CImg.h	861;"	d
cimg_rofXZ	CImg.h	862;"	d
cimg_rofYZ	CImg.h	863;"	d
cimg_rofXC	CImg.h	864;"	d
cimg_rofYC	CImg.h	865;"	d
cimg_rofZC	CImg.h	866;"	d
cimg_rofXYZ	CImg.h	867;"	d
cimg_rofXYC	CImg.h	868;"	d
cimg_rofXZC	CImg.h	869;"	d
cimg_rofYZC	CImg.h	870;"	d
cimg_rofXYZC	CImg.h	871;"	d
cimg_for_in1	CImg.h	873;"	d
cimg_for_inX	CImg.h	875;"	d
cimg_for_inY	CImg.h	876;"	d
cimg_for_inZ	CImg.h	877;"	d
cimg_for_inC	CImg.h	878;"	d
cimg_for_inXY	CImg.h	879;"	d
cimg_for_inXZ	CImg.h	880;"	d
cimg_for_inXC	CImg.h	881;"	d
cimg_for_inYZ	CImg.h	882;"	d
cimg_for_inYC	CImg.h	883;"	d
cimg_for_inZC	CImg.h	884;"	d
cimg_for_inXYZ	CImg.h	885;"	d
cimg_for_inXYC	CImg.h	886;"	d
cimg_for_inXZC	CImg.h	887;"	d
cimg_for_inYZC	CImg.h	888;"	d
cimg_for_inXYZC	CImg.h	889;"	d
cimg_for_insideX	CImg.h	891;"	d
cimg_for_insideY	CImg.h	892;"	d
cimg_for_insideZ	CImg.h	893;"	d
cimg_for_insideC	CImg.h	894;"	d
cimg_for_insideXY	CImg.h	895;"	d
cimg_for_insideXYZ	CImg.h	896;"	d
cimg_for_insideXYZC	CImg.h	898;"	d
cimg_for_out1	CImg.h	901;"	d
cimg_for_out2	CImg.h	903;"	d
cimg_for_out3	CImg.h	907;"	d
cimg_for_out4	CImg.h	912;"	d
cimg_for_outX	CImg.h	918;"	d
cimg_for_outY	CImg.h	919;"	d
cimg_for_outZ	CImg.h	920;"	d
cimg_for_outC	CImg.h	921;"	d
cimg_for_outXY	CImg.h	922;"	d
cimg_for_outXZ	CImg.h	923;"	d
cimg_for_outXC	CImg.h	924;"	d
cimg_for_outYZ	CImg.h	925;"	d
cimg_for_outYC	CImg.h	926;"	d
cimg_for_outZC	CImg.h	927;"	d
cimg_for_outXYZ	CImg.h	928;"	d
cimg_for_outXYC	CImg.h	930;"	d
cimg_for_outXZC	CImg.h	932;"	d
cimg_for_outYZC	CImg.h	934;"	d
cimg_for_outXYZC	CImg.h	936;"	d
cimg_for_borderX	CImg.h	938;"	d
cimg_for_borderY	CImg.h	939;"	d
cimg_for_borderZ	CImg.h	940;"	d
cimg_for_borderC	CImg.h	941;"	d
cimg_for_borderXY	CImg.h	942;"	d
cimg_for_borderXYZ	CImg.h	943;"	d
cimg_for_borderXYZC	CImg.h	945;"	d
cimg_for_spiralXY	CImg.h	949;"	d
cimg_for_lineXY	CImg.h	954;"	d
cimg_for2	CImg.h	965;"	d
cimg_for2X	CImg.h	969;"	d
cimg_for2Y	CImg.h	970;"	d
cimg_for2Z	CImg.h	971;"	d
cimg_for2C	CImg.h	972;"	d
cimg_for2XY	CImg.h	973;"	d
cimg_for2XZ	CImg.h	974;"	d
cimg_for2XC	CImg.h	975;"	d
cimg_for2YZ	CImg.h	976;"	d
cimg_for2YC	CImg.h	977;"	d
cimg_for2ZC	CImg.h	978;"	d
cimg_for2XYZ	CImg.h	979;"	d
cimg_for2XZC	CImg.h	980;"	d
cimg_for2YZC	CImg.h	981;"	d
cimg_for2XYZC	CImg.h	982;"	d
cimg_for_in2	CImg.h	984;"	d
cimg_for_in2X	CImg.h	989;"	d
cimg_for_in2Y	CImg.h	990;"	d
cimg_for_in2Z	CImg.h	991;"	d
cimg_for_in2C	CImg.h	992;"	d
cimg_for_in2XY	CImg.h	993;"	d
cimg_for_in2XZ	CImg.h	994;"	d
cimg_for_in2XC	CImg.h	995;"	d
cimg_for_in2YZ	CImg.h	996;"	d
cimg_for_in2YC	CImg.h	997;"	d
cimg_for_in2ZC	CImg.h	998;"	d
cimg_for_in2XYZ	CImg.h	999;"	d
cimg_for_in2XZC	CImg.h	1000;"	d
cimg_for_in2YZC	CImg.h	1001;"	d
cimg_for_in2XYZC	CImg.h	1002;"	d
cimg_for3	CImg.h	1005;"	d
cimg_for3X	CImg.h	1010;"	d
cimg_for3Y	CImg.h	1011;"	d
cimg_for3Z	CImg.h	1012;"	d
cimg_for3C	CImg.h	1013;"	d
cimg_for3XY	CImg.h	1014;"	d
cimg_for3XZ	CImg.h	1015;"	d
cimg_for3XC	CImg.h	1016;"	d
cimg_for3YZ	CImg.h	1017;"	d
cimg_for3YC	CImg.h	1018;"	d
cimg_for3ZC	CImg.h	1019;"	d
cimg_for3XYZ	CImg.h	1020;"	d
cimg_for3XZC	CImg.h	1021;"	d
cimg_for3YZC	CImg.h	1022;"	d
cimg_for3XYZC	CImg.h	1023;"	d
cimg_for_in3	CImg.h	1025;"	d
cimg_for_in3X	CImg.h	1031;"	d
cimg_for_in3Y	CImg.h	1032;"	d
cimg_for_in3Z	CImg.h	1033;"	d
cimg_for_in3C	CImg.h	1034;"	d
cimg_for_in3XY	CImg.h	1035;"	d
cimg_for_in3XZ	CImg.h	1036;"	d
cimg_for_in3XC	CImg.h	1037;"	d
cimg_for_in3YZ	CImg.h	1038;"	d
cimg_for_in3YC	CImg.h	1039;"	d
cimg_for_in3ZC	CImg.h	1040;"	d
cimg_for_in3XYZ	CImg.h	1041;"	d
cimg_for_in3XZC	CImg.h	1042;"	d
cimg_for_in3YZC	CImg.h	1043;"	d
cimg_for_in3XYZC	CImg.h	1044;"	d
cimg_for4	CImg.h	1047;"	d
cimg_for4X	CImg.h	1052;"	d
cimg_for4Y	CImg.h	1053;"	d
cimg_for4Z	CImg.h	1054;"	d
cimg_for4C	CImg.h	1055;"	d
cimg_for4XY	CImg.h	1056;"	d
cimg_for4XZ	CImg.h	1057;"	d
cimg_for4XC	CImg.h	1058;"	d
cimg_for4YZ	CImg.h	1059;"	d
cimg_for4YC	CImg.h	1060;"	d
cimg_for4ZC	CImg.h	1061;"	d
cimg_for4XYZ	CImg.h	1062;"	d
cimg_for4XZC	CImg.h	1063;"	d
cimg_for4YZC	CImg.h	1064;"	d
cimg_for4XYZC	CImg.h	1065;"	d
cimg_for_in4	CImg.h	1067;"	d
cimg_for_in4X	CImg.h	1074;"	d
cimg_for_in4Y	CImg.h	1075;"	d
cimg_for_in4Z	CImg.h	1076;"	d
cimg_for_in4C	CImg.h	1077;"	d
cimg_for_in4XY	CImg.h	1078;"	d
cimg_for_in4XZ	CImg.h	1079;"	d
cimg_for_in4XC	CImg.h	1080;"	d
cimg_for_in4YZ	CImg.h	1081;"	d
cimg_for_in4YC	CImg.h	1082;"	d
cimg_for_in4ZC	CImg.h	1083;"	d
cimg_for_in4XYZ	CImg.h	1084;"	d
cimg_for_in4XZC	CImg.h	1085;"	d
cimg_for_in4YZC	CImg.h	1086;"	d
cimg_for_in4XYZC	CImg.h	1087;"	d
cimg_for5	CImg.h	1090;"	d
cimg_for5X	CImg.h	1096;"	d
cimg_for5Y	CImg.h	1097;"	d
cimg_for5Z	CImg.h	1098;"	d
cimg_for5C	CImg.h	1099;"	d
cimg_for5XY	CImg.h	1100;"	d
cimg_for5XZ	CImg.h	1101;"	d
cimg_for5XC	CImg.h	1102;"	d
cimg_for5YZ	CImg.h	1103;"	d
cimg_for5YC	CImg.h	1104;"	d
cimg_for5ZC	CImg.h	1105;"	d
cimg_for5XYZ	CImg.h	1106;"	d
cimg_for5XZC	CImg.h	1107;"	d
cimg_for5YZC	CImg.h	1108;"	d
cimg_for5XYZC	CImg.h	1109;"	d
cimg_for_in5	CImg.h	1111;"	d
cimg_for_in5X	CImg.h	1119;"	d
cimg_for_in5Y	CImg.h	1120;"	d
cimg_for_in5Z	CImg.h	1121;"	d
cimg_for_in5C	CImg.h	1122;"	d
cimg_for_in5XY	CImg.h	1123;"	d
cimg_for_in5XZ	CImg.h	1124;"	d
cimg_for_in5XC	CImg.h	1125;"	d
cimg_for_in5YZ	CImg.h	1126;"	d
cimg_for_in5YC	CImg.h	1127;"	d
cimg_for_in5ZC	CImg.h	1128;"	d
cimg_for_in5XYZ	CImg.h	1129;"	d
cimg_for_in5XZC	CImg.h	1130;"	d
cimg_for_in5YZC	CImg.h	1131;"	d
cimg_for_in5XYZC	CImg.h	1132;"	d
cimg_for6	CImg.h	1135;"	d
cimg_for6X	CImg.h	1142;"	d
cimg_for6Y	CImg.h	1143;"	d
cimg_for6Z	CImg.h	1144;"	d
cimg_for6C	CImg.h	1145;"	d
cimg_for6XY	CImg.h	1146;"	d
cimg_for6XZ	CImg.h	1147;"	d
cimg_for6XC	CImg.h	1148;"	d
cimg_for6YZ	CImg.h	1149;"	d
cimg_for6YC	CImg.h	1150;"	d
cimg_for6ZC	CImg.h	1151;"	d
cimg_for6XYZ	CImg.h	1152;"	d
cimg_for6XZC	CImg.h	1153;"	d
cimg_for6YZC	CImg.h	1154;"	d
cimg_for6XYZC	CImg.h	1155;"	d
cimg_for_in6	CImg.h	1157;"	d
cimg_for_in6X	CImg.h	1167;"	d
cimg_for_in6Y	CImg.h	1168;"	d
cimg_for_in6Z	CImg.h	1169;"	d
cimg_for_in6C	CImg.h	1170;"	d
cimg_for_in6XY	CImg.h	1171;"	d
cimg_for_in6XZ	CImg.h	1172;"	d
cimg_for_in6XC	CImg.h	1173;"	d
cimg_for_in6YZ	CImg.h	1174;"	d
cimg_for_in6YC	CImg.h	1175;"	d
cimg_for_in6ZC	CImg.h	1176;"	d
cimg_for_in6XYZ	CImg.h	1177;"	d
cimg_for_in6XZC	CImg.h	1178;"	d
cimg_for_in6YZC	CImg.h	1179;"	d
cimg_for_in6XYZC	CImg.h	1180;"	d
cimg_for7	CImg.h	1183;"	d
cimg_for7X	CImg.h	1190;"	d
cimg_for7Y	CImg.h	1191;"	d
cimg_for7Z	CImg.h	1192;"	d
cimg_for7C	CImg.h	1193;"	d
cimg_for7XY	CImg.h	1194;"	d
cimg_for7XZ	CImg.h	1195;"	d
cimg_for7XC	CImg.h	1196;"	d
cimg_for7YZ	CImg.h	1197;"	d
cimg_for7YC	CImg.h	1198;"	d
cimg_for7ZC	CImg.h	1199;"	d
cimg_for7XYZ	CImg.h	1200;"	d
cimg_for7XZC	CImg.h	1201;"	d
cimg_for7YZC	CImg.h	1202;"	d
cimg_for7XYZC	CImg.h	1203;"	d
cimg_for_in7	CImg.h	1205;"	d
cimg_for_in7X	CImg.h	1216;"	d
cimg_for_in7Y	CImg.h	1217;"	d
cimg_for_in7Z	CImg.h	1218;"	d
cimg_for_in7C	CImg.h	1219;"	d
cimg_for_in7XY	CImg.h	1220;"	d
cimg_for_in7XZ	CImg.h	1221;"	d
cimg_for_in7XC	CImg.h	1222;"	d
cimg_for_in7YZ	CImg.h	1223;"	d
cimg_for_in7YC	CImg.h	1224;"	d
cimg_for_in7ZC	CImg.h	1225;"	d
cimg_for_in7XYZ	CImg.h	1226;"	d
cimg_for_in7XZC	CImg.h	1227;"	d
cimg_for_in7YZC	CImg.h	1228;"	d
cimg_for_in7XYZC	CImg.h	1229;"	d
cimg_for8	CImg.h	1232;"	d
cimg_for8X	CImg.h	1241;"	d
cimg_for8Y	CImg.h	1242;"	d
cimg_for8Z	CImg.h	1243;"	d
cimg_for8C	CImg.h	1244;"	d
cimg_for8XY	CImg.h	1245;"	d
cimg_for8XZ	CImg.h	1246;"	d
cimg_for8XC	CImg.h	1247;"	d
cimg_for8YZ	CImg.h	1248;"	d
cimg_for8YC	CImg.h	1249;"	d
cimg_for8ZC	CImg.h	1250;"	d
cimg_for8XYZ	CImg.h	1251;"	d
cimg_for8XZC	CImg.h	1252;"	d
cimg_for8YZC	CImg.h	1253;"	d
cimg_for8XYZC	CImg.h	1254;"	d
cimg_for_in8	CImg.h	1256;"	d
cimg_for_in8X	CImg.h	1268;"	d
cimg_for_in8Y	CImg.h	1269;"	d
cimg_for_in8Z	CImg.h	1270;"	d
cimg_for_in8C	CImg.h	1271;"	d
cimg_for_in8XY	CImg.h	1272;"	d
cimg_for_in8XZ	CImg.h	1273;"	d
cimg_for_in8XC	CImg.h	1274;"	d
cimg_for_in8YZ	CImg.h	1275;"	d
cimg_for_in8YC	CImg.h	1276;"	d
cimg_for_in8ZC	CImg.h	1277;"	d
cimg_for_in8XYZ	CImg.h	1278;"	d
cimg_for_in8XZC	CImg.h	1279;"	d
cimg_for_in8YZC	CImg.h	1280;"	d
cimg_for_in8XYZC	CImg.h	1281;"	d
cimg_for9	CImg.h	1284;"	d
cimg_for9X	CImg.h	1293;"	d
cimg_for9Y	CImg.h	1294;"	d
cimg_for9Z	CImg.h	1295;"	d
cimg_for9C	CImg.h	1296;"	d
cimg_for9XY	CImg.h	1297;"	d
cimg_for9XZ	CImg.h	1298;"	d
cimg_for9XC	CImg.h	1299;"	d
cimg_for9YZ	CImg.h	1300;"	d
cimg_for9YC	CImg.h	1301;"	d
cimg_for9ZC	CImg.h	1302;"	d
cimg_for9XYZ	CImg.h	1303;"	d
cimg_for9XZC	CImg.h	1304;"	d
cimg_for9YZC	CImg.h	1305;"	d
cimg_for9XYZC	CImg.h	1306;"	d
cimg_for_in9	CImg.h	1308;"	d
cimg_for_in9X	CImg.h	1321;"	d
cimg_for_in9Y	CImg.h	1322;"	d
cimg_for_in9Z	CImg.h	1323;"	d
cimg_for_in9C	CImg.h	1324;"	d
cimg_for_in9XY	CImg.h	1325;"	d
cimg_for_in9XZ	CImg.h	1326;"	d
cimg_for_in9XC	CImg.h	1327;"	d
cimg_for_in9YZ	CImg.h	1328;"	d
cimg_for_in9YC	CImg.h	1329;"	d
cimg_for_in9ZC	CImg.h	1330;"	d
cimg_for_in9XYZ	CImg.h	1331;"	d
cimg_for_in9XZC	CImg.h	1332;"	d
cimg_for_in9YZC	CImg.h	1333;"	d
cimg_for_in9XYZC	CImg.h	1334;"	d
cimg_for2x2	CImg.h	1337;"	d
cimg_for_in2x2	CImg.h	1351;"	d
cimg_for3x3	CImg.h	1365;"	d
cimg_for_in3x3	CImg.h	1383;"	d
cimg_for4x4	CImg.h	1404;"	d
cimg_for_in4x4	CImg.h	1430;"	d
cimg_for5x5	CImg.h	1460;"	d
cimg_for_in5x5	CImg.h	1490;"	d
cimg_for6x6	CImg.h	1531;"	d
cimg_for_in6x6	CImg.h	1572;"	d
cimg_for7x7	CImg.h	1626;"	d
cimg_for_in7x7	CImg.h	1672;"	d
cimg_for8x8	CImg.h	1741;"	d
cimg_for_in8x8	CImg.h	1801;"	d
cimg_for9x9	CImg.h	1887;"	d
cimg_for_in9x9	CImg.h	1955;"	d
cimg_for2x2x2	CImg.h	2062;"	d
cimg_for_in2x2x2	CImg.h	2079;"	d
cimg_for3x3x3	CImg.h	2096;"	d
cimg_for_in3x3x3	CImg.h	2126;"	d
cimglist_for	CImg.h	2165;"	d
cimglist_for_in	CImg.h	2166;"	d
cimglist_apply	CImg.h	2170;"	d
_cimgdisplay_instance	CImg.h	2174;"	d
cimgdisplay_instance	CImg.h	2175;"	d
_cimg_instance	CImg.h	2176;"	d
cimg_instance	CImg.h	2177;"	d
_cimglist_instance	CImg.h	2178;"	d
cimglist_instance	CImg.h	2179;"	d
cimg_library_suffixed	CImg.h	/^namespace cimg_library_suffixed {$/;"	n
CImg	CImg.h	/^  template<typename T=float> struct CImg;$/;"	x
CImgList	CImg.h	/^  template<typename T=float> struct CImgList;$/;"	x
CImgDisplay	CImg.h	/^  struct CImgDisplay;$/;"	x
CImgException	CImg.h	/^  struct CImgException;$/;"	x
cimg	CImg.h	/^  namespace cimg {$/;"	n	namespace:cimg_library_suffixed
t_normal	CImg.h	/^    static const char t_normal[] = { 0x1b, '[', '0', ';', '0', ';', '0', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
t_black	CImg.h	/^    static const char t_black[] = { 0x1b, '[', '0', ';', '3', '0', ';', '5', '9', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
t_red	CImg.h	/^    static const char t_red[] = { 0x1b, '[', '0', ';', '3', '1', ';', '5', '9', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
t_green	CImg.h	/^    static const char t_green[] = { 0x1b, '[', '0', ';', '3', '2', ';', '5', '9', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
t_yellow	CImg.h	/^    static const char t_yellow[] = { 0x1b, '[', '0', ';', '3', '3', ';', '5', '9', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
t_blue	CImg.h	/^    static const char t_blue[] = { 0x1b, '[', '0', ';', '3', '4', ';', '5', '9', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
t_magenta	CImg.h	/^    static const char t_magenta[] = { 0x1b, '[', '0', ';', '3', '5', ';', '5', '9', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
t_cyan	CImg.h	/^    static const char t_cyan[] = { 0x1b, '[', '0', ';', '3', '6', ';', '5', '9', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
t_white	CImg.h	/^    static const char t_white[] = { 0x1b, '[', '0', ';', '3', '7', ';', '5', '9', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
t_bold	CImg.h	/^    static const char t_bold[] = { 0x1b, '[', '1', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
t_underscore	CImg.h	/^    static const char t_underscore[] = { 0x1b, '[', '4', 'm', 0 };$/;"	m	namespace:cimg_library_suffixed::cimg
output	CImg.h	/^    inline std::FILE* output(std::FILE *file=0);$/;"	p	namespace:cimg_library_suffixed::cimg
info	CImg.h	/^    inline void info();$/;"	p	namespace:cimg_library_suffixed::cimg
unused	CImg.h	/^    inline void unused(const T&, ...) {}$/;"	f	namespace:cimg_library_suffixed::cimg
mutex	CImg.h	/^    inline int mutex(const unsigned int n, const int lock_mode=1);$/;"	p	namespace:cimg_library_suffixed::cimg
_exception_mode	CImg.h	/^    inline unsigned int& _exception_mode(const unsigned int value, const bool is_set) {$/;"	f	namespace:cimg_library_suffixed::cimg
_stdin	CImg.h	/^    inline FILE* _stdin(const bool throw_exception=true);$/;"	p	namespace:cimg_library_suffixed::cimg
_stdout	CImg.h	/^    inline FILE* _stdout(const bool throw_exception=true);$/;"	p	namespace:cimg_library_suffixed::cimg
_stderr	CImg.h	/^    inline FILE* _stderr(const bool throw_exception=true);$/;"	p	namespace:cimg_library_suffixed::cimg
_snprintf	CImg.h	/^    inline int _snprintf(char *const s, const size_t size, const char *const format, ...) {$/;"	f	namespace:cimg_library_suffixed::cimg
_vsnprintf	CImg.h	/^    inline int _vsnprintf(char *const s, const size_t size, const char *const format, va_list ap) {$/;"	f	namespace:cimg_library_suffixed::cimg
_sscanf	CImg.h	/^    inline int _sscanf(const char *const s, const char *const format, ...) {$/;"	f	namespace:cimg_library_suffixed::cimg
_sprintf	CImg.h	/^    inline int _sprintf(char *const s, const char *const format, ...) {$/;"	f	namespace:cimg_library_suffixed::cimg
_snprintf	CImg.h	/^    inline int _snprintf(char *const s, const size_t n, const char *const format, ...) {$/;"	f	namespace:cimg_library_suffixed::cimg
_vsnprintf	CImg.h	/^    inline int _vsnprintf(char *const s, const size_t size, const char* format, va_list ap) {$/;"	f	namespace:cimg_library_suffixed::cimg
exception_mode	CImg.h	/^    inline unsigned int& exception_mode(const unsigned int mode) {$/;"	f	namespace:cimg_library_suffixed::cimg
exception_mode	CImg.h	/^    inline unsigned int& exception_mode() {$/;"	f	namespace:cimg_library_suffixed::cimg
_openmp_mode	CImg.h	/^    inline unsigned int& _openmp_mode(const unsigned int value, const bool is_set) {$/;"	f	namespace:cimg_library_suffixed::cimg
openmp_mode	CImg.h	/^    inline unsigned int& openmp_mode(const unsigned int mode) {$/;"	f	namespace:cimg_library_suffixed::cimg
openmp_mode	CImg.h	/^    inline unsigned int& openmp_mode() {$/;"	f	namespace:cimg_library_suffixed::cimg
cimg_openmp_if	CImg.h	2370;"	d
dialog	CImg.h	/^    inline int dialog(const char *const title, const char *const msg, const char *const button1_label="OK",$/;"	p	namespace:cimg_library_suffixed::cimg
eval	CImg.h	/^    inline double eval(const char *const expression,$/;"	p	namespace:cimg_library_suffixed::cimg
CImgException	CImg.h	/^  struct CImgException : public std::exception {$/;"	s	namespace:cimg_library_suffixed
_cimg_exception_err	CImg.h	2455;"	d
_message	CImg.h	/^    char *_message;$/;"	m	struct:cimg_library_suffixed::CImgException
CImgException	CImg.h	/^    CImgException() { _message = new char[1]; *_message = 0; }$/;"	f	struct:cimg_library_suffixed::CImgException
CImgException	CImg.h	/^    CImgException(const char *const format, ...):_message(0) { _cimg_exception_err("CImgException",true); }$/;"	f	struct:cimg_library_suffixed::CImgException
CImgException	CImg.h	/^    CImgException(const CImgException& e):std::exception(e) {$/;"	f	struct:cimg_library_suffixed::CImgException
~CImgException	CImg.h	/^    ~CImgException() throw() { delete[] _message; }$/;"	f	struct:cimg_library_suffixed::CImgException
operator =	CImg.h	/^    CImgException& operator=(const CImgException& e) {$/;"	f	struct:cimg_library_suffixed::CImgException
what	CImg.h	/^    const char *what() const throw() { return _message; }$/;"	f	struct:cimg_library_suffixed::CImgException
CImgAbortException	CImg.h	/^  struct CImgAbortException : public std::exception {$/;"	s	namespace:cimg_library_suffixed
_message	CImg.h	/^    char *_message;$/;"	m	struct:cimg_library_suffixed::CImgAbortException
CImgAbortException	CImg.h	/^    CImgAbortException() { _message = new char[1]; *_message = 0; }$/;"	f	struct:cimg_library_suffixed::CImgAbortException
CImgAbortException	CImg.h	/^    CImgAbortException(const char *const format, ...):_message(0) { _cimg_exception_err("CImgAbortException",true); }$/;"	f	struct:cimg_library_suffixed::CImgAbortException
CImgAbortException	CImg.h	/^    CImgAbortException(const CImgAbortException& e):std::exception(e) {$/;"	f	struct:cimg_library_suffixed::CImgAbortException
~CImgAbortException	CImg.h	/^    ~CImgAbortException() throw() { delete[] _message; }$/;"	f	struct:cimg_library_suffixed::CImgAbortException
operator =	CImg.h	/^    CImgAbortException& operator=(const CImgAbortException& e) {$/;"	f	struct:cimg_library_suffixed::CImgAbortException
what	CImg.h	/^    const char *what() const throw() { return _message; }$/;"	f	struct:cimg_library_suffixed::CImgAbortException
CImgArgumentException	CImg.h	/^  struct CImgArgumentException : public CImgException {$/;"	s	namespace:cimg_library_suffixed
CImgArgumentException	CImg.h	/^    CImgArgumentException(const char *const format, ...) { _cimg_exception_err("CImgArgumentException",true); }$/;"	f	struct:cimg_library_suffixed::CImgArgumentException
CImgDisplayException	CImg.h	/^  struct CImgDisplayException : public CImgException {$/;"	s	namespace:cimg_library_suffixed
CImgDisplayException	CImg.h	/^    CImgDisplayException(const char *const format, ...) { _cimg_exception_err("CImgDisplayException",false); }$/;"	f	struct:cimg_library_suffixed::CImgDisplayException
CImgInstanceException	CImg.h	/^  struct CImgInstanceException : public CImgException {$/;"	s	namespace:cimg_library_suffixed
CImgInstanceException	CImg.h	/^    CImgInstanceException(const char *const format, ...) { _cimg_exception_err("CImgInstanceException",true); }$/;"	f	struct:cimg_library_suffixed::CImgInstanceException
CImgIOException	CImg.h	/^  struct CImgIOException : public CImgException {$/;"	s	namespace:cimg_library_suffixed
CImgIOException	CImg.h	/^    CImgIOException(const char *const format, ...) { _cimg_exception_err("CImgIOException",true); }$/;"	f	struct:cimg_library_suffixed::CImgIOException
CImgWarningException	CImg.h	/^  struct CImgWarningException : public CImgException {$/;"	s	namespace:cimg_library_suffixed
CImgWarningException	CImg.h	/^    CImgWarningException(const char *const format, ...) { _cimg_exception_err("CImgWarningException",false); }$/;"	f	struct:cimg_library_suffixed::CImgWarningException
cimg	CImg.h	/^  namespace cimg {$/;"	n	namespace:cimg_library_suffixed
type	CImg.h	/^    template<typename T> struct type {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() {$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const T) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const T) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static T min() { return ~max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static T max() { return (T)1<<(8*sizeof(T) - 1); }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static T inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static T cut(const double val) { return val<(double)min()?min():val>(double)max()?max():(T)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%s"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%s"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format(const T& val) { static const char *const s = "unknown"; cimg::unused(val); return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<bool> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "bool"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const bool) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const bool) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static bool min() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static bool max() { return true; }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static bool inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static bool cut(const double val) { return val<(double)min()?min():val>(double)max()?max():(bool)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%s"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%s"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format(const bool val) { static const char* s[] = { "false", "true" }; return s[val?1:0]; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<unsigned char> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "unsigned char"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const unsigned char) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const unsigned char) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static unsigned char min() { return 0; }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static unsigned char max() { return (unsigned char)-1; }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static unsigned char inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static unsigned char cut(const double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%u"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%u"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static unsigned int format(const unsigned char val) { return (unsigned int)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<char> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "char"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const char) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const char) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static char min() { return 0; }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static char max() { return (char)-1; }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static char inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static char cut(const double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%u"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%u"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static unsigned int format(const char val) { return (unsigned int)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<char> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "char"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const char) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const char) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static char min() { return ~max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static char max() { return (char)((unsigned char)-1>>1); }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static char inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static char cut(const double val) { return val<(double)min()?min():val>(double)max()?max():(char)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%d"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%d"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static int format(const char val) { return (int)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<signed char> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "signed char"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const signed char) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const signed char) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static signed char min() { return ~max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static signed char max() { return (signed char)((unsigned char)-1>>1); }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static signed char inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static signed char cut(const double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%d"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%d"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static int format(const signed char val) { return (int)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<unsigned short> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "unsigned short"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const unsigned short) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const unsigned short) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static unsigned short min() { return 0; }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static unsigned short max() { return (unsigned short)-1; }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static unsigned short inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static unsigned short cut(const double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%u"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%u"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static unsigned int format(const unsigned short val) { return (unsigned int)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<short> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "short"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const short) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const short) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static short min() { return ~max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static short max() { return (short)((unsigned short)-1>>1); }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static short inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static short cut(const double val) { return val<(double)min()?min():val>(double)max()?max():(short)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%d"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%d"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static int format(const short val) { return (int)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<unsigned int> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "unsigned int"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const unsigned int) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const unsigned int) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static unsigned int min() { return 0; }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static unsigned int max() { return (unsigned int)-1; }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static unsigned int inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static unsigned int cut(const double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%u"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%u"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static unsigned int format(const unsigned int val) { return val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<int> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "int"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const int) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const int) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static int min() { return ~max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static int max() { return (int)((unsigned int)-1>>1); }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static int inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static int cut(const double val) { return val<(double)min()?min():val>(double)max()?max():(int)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%d"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%d"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static int format(const int val) { return val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<cimg_uint64> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "unsigned int64"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const cimg_uint64) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const cimg_uint64) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static cimg_uint64 min() { return 0; }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static cimg_uint64 max() { return (cimg_uint64)-1; }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static cimg_uint64 inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static cimg_uint64 cut(const double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return cimg_fuint64; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return cimg_fuint64; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static unsigned long format(const cimg_uint64 val) { return (unsigned long)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<cimg_int64> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "int64"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const cimg_int64) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const cimg_int64) { return false; }$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static cimg_int64 min() { return ~max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static cimg_int64 max() { return (cimg_int64)((cimg_uint64)-1>>1); }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static cimg_int64 inf() { return max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static cimg_int64 cut(const double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return cimg_fint64; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return cimg_fint64; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static long format(const long val) { return (long)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<double> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "double"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return true; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const double val) { \/\/ Custom version that works with '-ffast-math'$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static double min() { return -DBL_MAX; }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static double max() { return DBL_MAX; }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static double inf() {$/;"	f	struct:cimg_library_suffixed::cimg::type
nan	CImg.h	/^      static double nan() {$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static double cut(const double val) { return val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%.17g"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%g"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static double format(const double val) { return val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<float> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "float"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return true; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const float val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const float val) { \/\/ Custom version that works with '-ffast-math'$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static float min() { return -FLT_MAX; }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static float max() { return FLT_MAX; }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static float inf() { return (float)cimg::type<double>::inf(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
nan	CImg.h	/^      static float nan() { return (float)cimg::type<double>::nan(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static float cut(const double val) { return (float)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static float cut(const float val) { return (float)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%.9g"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%g"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static double format(const float val) { return (double)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<long double> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "long double"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return true; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const long double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const long double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static long double min() { return -LDBL_MAX; }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static long double max() { return LDBL_MAX; }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static long double inf() { return max()*max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
nan	CImg.h	/^      static long double nan() { const long double val_nan = -std::sqrt(-1.0L); return val_nan; }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static long double cut(const long double val) { return val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%.17g"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%g"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static double format(const long double val) { return (double)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
type	CImg.h	/^    template<> struct type<half> {$/;"	s	namespace:cimg_library_suffixed::cimg
string	CImg.h	/^      static const char* string() { static const char *const s = "half"; return s; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_float	CImg.h	/^      static bool is_float() { return true; }$/;"	f	struct:cimg_library_suffixed::cimg::type
is_inf	CImg.h	/^      static bool is_inf(const long double val) {$/;"	f	struct:cimg_library_suffixed::cimg::type
is_nan	CImg.h	/^      static bool is_nan(const half val) { \/\/ Custom version that works with '-ffast-math'$/;"	f	struct:cimg_library_suffixed::cimg::type
min	CImg.h	/^      static half min() { return (half)-65504; }$/;"	f	struct:cimg_library_suffixed::cimg::type
max	CImg.h	/^      static half max() { return (half)65504; }$/;"	f	struct:cimg_library_suffixed::cimg::type
inf	CImg.h	/^      static half inf() { return max()*max(); }$/;"	f	struct:cimg_library_suffixed::cimg::type
nan	CImg.h	/^      static half nan() { const half val_nan = (half)-std::sqrt(-1.0); return val_nan; }$/;"	f	struct:cimg_library_suffixed::cimg::type
cut	CImg.h	/^      static half cut(const double val) { return (half)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static const char* format() { return "%.9g"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format_s	CImg.h	/^      static const char* format_s() { return "%g"; }$/;"	f	struct:cimg_library_suffixed::cimg::type
format	CImg.h	/^      static double format(const half val) { return (double)val; }$/;"	f	struct:cimg_library_suffixed::cimg::type
superset	CImg.h	/^    template<typename T, typename t> struct superset { typedef T type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<typename T, typename t> struct superset { typedef T type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,unsigned char> { typedef unsigned char type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,unsigned char> { typedef unsigned char type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,char> { typedef char type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,char> { typedef char type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,signed char> { typedef signed char type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,signed char> { typedef signed char type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,unsigned short> { typedef unsigned short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,unsigned short> { typedef unsigned short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,short> { typedef short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,short> { typedef short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,unsigned int> { typedef unsigned int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,unsigned int> { typedef unsigned int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,int> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,int> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,cimg_uint64> { typedef cimg_uint64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,cimg_uint64> { typedef cimg_uint64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,cimg_int64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,cimg_int64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,float> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,float> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<bool,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<bool,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned char,char> { typedef short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned char,char> { typedef short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned char,signed char> { typedef short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned char,signed char> { typedef short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned char,unsigned short> { typedef unsigned short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned char,unsigned short> { typedef unsigned short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned char,short> { typedef short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned char,short> { typedef short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned char,unsigned int> { typedef unsigned int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned char,unsigned int> { typedef unsigned int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned char,int> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned char,int> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned char,cimg_uint64> { typedef cimg_uint64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned char,cimg_uint64> { typedef cimg_uint64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned char,cimg_int64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned char,cimg_int64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned char,float> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned char,float> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned char,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned char,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<signed char,unsigned char> { typedef short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<signed char,unsigned char> { typedef short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<signed char,char> { typedef short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<signed char,char> { typedef short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<signed char,unsigned short> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<signed char,unsigned short> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<signed char,short> { typedef short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<signed char,short> { typedef short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<signed char,unsigned int> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<signed char,unsigned int> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<signed char,int> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<signed char,int> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<signed char,cimg_uint64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<signed char,cimg_uint64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<signed char,cimg_int64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<signed char,cimg_int64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<signed char,float> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<signed char,float> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<signed char,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<signed char,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<char,unsigned char> { typedef short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<char,unsigned char> { typedef short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<char,signed char> { typedef short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<char,signed char> { typedef short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<char,unsigned short> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<char,unsigned short> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<char,short> { typedef short type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<char,short> { typedef short type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<char,unsigned int> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<char,unsigned int> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<char,int> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<char,int> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<char,cimg_uint64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<char,cimg_uint64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<char,cimg_int64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<char,cimg_int64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<char,float> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<char,float> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<char,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<char,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned short,char> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned short,char> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned short,signed char> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned short,signed char> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned short,short> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned short,short> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned short,unsigned int> { typedef unsigned int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned short,unsigned int> { typedef unsigned int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned short,int> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned short,int> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned short,cimg_uint64> { typedef cimg_uint64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned short,cimg_uint64> { typedef cimg_uint64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned short,cimg_int64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned short,cimg_int64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned short,float> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned short,float> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned short,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned short,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<short,unsigned short> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<short,unsigned short> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<short,unsigned int> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<short,unsigned int> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<short,int> { typedef int type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<short,int> { typedef int type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<short,cimg_uint64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<short,cimg_uint64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<short,cimg_int64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<short,cimg_int64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<short,float> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<short,float> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<short,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<short,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned int,char> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned int,char> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned int,signed char> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned int,signed char> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned int,short> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned int,short> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned int,int> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned int,int> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned int,cimg_uint64> { typedef cimg_uint64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned int,cimg_uint64> { typedef cimg_uint64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned int,cimg_int64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned int,cimg_int64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned int,float> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned int,float> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<unsigned int,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<unsigned int,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<int,unsigned int> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<int,unsigned int> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<int,cimg_uint64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<int,cimg_uint64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<int,cimg_int64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<int,cimg_int64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<int,float> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<int,float> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<int,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<int,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<cimg_uint64,char> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<cimg_uint64,char> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<cimg_uint64,signed char> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<cimg_uint64,signed char> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<cimg_uint64,short> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<cimg_uint64,short> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<cimg_uint64,int> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<cimg_uint64,int> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<cimg_uint64,cimg_int64> { typedef cimg_int64 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<cimg_uint64,cimg_int64> { typedef cimg_int64 type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<cimg_uint64,float> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<cimg_uint64,float> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<cimg_uint64,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<cimg_uint64,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<cimg_int64,float> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<cimg_int64,float> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<cimg_int64,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<cimg_int64,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<float,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<float,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<half,unsigned short> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<half,unsigned short> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<half,short> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<half,short> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<half,unsigned int> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<half,unsigned int> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<half,int> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<half,int> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<half,cimg_uint64> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<half,cimg_uint64> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<half,cimg_int64> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<half,cimg_int64> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<half,float> { typedef float type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<half,float> { typedef float type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset	CImg.h	/^    template<> struct superset<half,double> { typedef double type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<> struct superset<half,double> { typedef double type; };$/;"	t	struct:cimg_library_suffixed::cimg::superset
superset2	CImg.h	/^    template<typename t1, typename t2, typename t3> struct superset2 {$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^      typedef typename superset<t1, typename superset<t2,t3>::type>::type type;$/;"	t	struct:cimg_library_suffixed::cimg::superset2
superset3	CImg.h	/^    template<typename t1, typename t2, typename t3, typename t4> struct superset3 {$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^      typedef typename superset<t1, typename superset2<t2,t3,t4>::type>::type type;$/;"	t	struct:cimg_library_suffixed::cimg::superset3
last	CImg.h	/^    template<typename t1, typename t2> struct last { typedef t2 type; };$/;"	s	namespace:cimg_library_suffixed::cimg
type	CImg.h	/^    template<typename t1, typename t2> struct last { typedef t2 type; };$/;"	t	struct:cimg_library_suffixed::cimg::last
_cimg_Tt	CImg.h	2986;"	d
_cimg_Tfloat	CImg.h	2987;"	d
_cimg_Ttfloat	CImg.h	2988;"	d
_cimg_Ttdouble	CImg.h	2989;"	d
X11_info	CImg.h	/^    struct X11_info {$/;"	s	namespace:cimg_library_suffixed::cimg
nb_wins	CImg.h	/^      unsigned int nb_wins;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
events_thread	CImg.h	/^      pthread_t *events_thread;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
wait_event	CImg.h	/^      pthread_cond_t wait_event;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
wait_event_mutex	CImg.h	/^      pthread_mutex_t wait_event_mutex;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
wins	CImg.h	/^      CImgDisplay **wins;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
display	CImg.h	/^      Display *display;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
nb_bits	CImg.h	/^      unsigned int nb_bits;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
is_blue_first	CImg.h	/^      bool is_blue_first;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
is_shm_enabled	CImg.h	/^      bool is_shm_enabled;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
byte_order	CImg.h	/^      bool byte_order;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
resolutions	CImg.h	/^      XRRScreenSize *resolutions;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
curr_rotation	CImg.h	/^      Rotation curr_rotation;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
curr_resolution	CImg.h	/^      unsigned int curr_resolution;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
nb_resolutions	CImg.h	/^      unsigned int nb_resolutions;$/;"	m	struct:cimg_library_suffixed::cimg::X11_info
X11_info	CImg.h	/^      X11_info():nb_wins(0),events_thread(0),display(0),$/;"	f	struct:cimg_library_suffixed::cimg::X11_info
~X11_info	CImg.h	/^      ~X11_info() {$/;"	f	struct:cimg_library_suffixed::cimg::X11_info
X11_attr	CImg.h	/^    X11_info& X11_attr();$/;"	p	namespace:cimg_library_suffixed::cimg
X11_attr	CImg.h	/^    X11_info& X11_attr() { static X11_info val; return val; }$/;"	f	namespace:cimg_library_suffixed::cimg
X11_attr	CImg.h	/^    inline X11_info& X11_attr() { static X11_info val; return val; }$/;"	f	namespace:cimg_library_suffixed::cimg
cimg_lock_display	CImg.h	3046;"	d
cimg_unlock_display	CImg.h	3047;"	d
Win32_info	CImg.h	/^    struct Win32_info {$/;"	s	namespace:cimg_library_suffixed::cimg
wait_event	CImg.h	/^      HANDLE wait_event;$/;"	m	struct:cimg_library_suffixed::cimg::Win32_info
Win32_info	CImg.h	/^      Win32_info() { wait_event = CreateEvent(0,FALSE,FALSE,0); }$/;"	f	struct:cimg_library_suffixed::cimg::Win32_info
Win32_attr	CImg.h	/^    Win32_info& Win32_attr();$/;"	p	namespace:cimg_library_suffixed::cimg
Win32_attr	CImg.h	/^    Win32_info& Win32_attr() { static Win32_info val; return val; }$/;"	f	namespace:cimg_library_suffixed::cimg
Win32_attr	CImg.h	/^    inline Win32_info& Win32_attr() { static Win32_info val; return val; }$/;"	f	namespace:cimg_library_suffixed::cimg
Mutex_info	CImg.h	/^    struct Mutex_info {$/;"	s	namespace:cimg_library_suffixed::cimg
mutex	CImg.h	/^      HANDLE mutex[32];$/;"	m	struct:cimg_library_suffixed::cimg::Mutex_info
Mutex_info	CImg.h	/^      Mutex_info() { for (unsigned int i = 0; i<32; ++i) mutex[i] = CreateMutex(0,FALSE,0); }$/;"	f	struct:cimg_library_suffixed::cimg::Mutex_info
lock	CImg.h	/^      void lock(const unsigned int n) { WaitForSingleObject(mutex[n],INFINITE); }$/;"	f	struct:cimg_library_suffixed::cimg::Mutex_info
unlock	CImg.h	/^      void unlock(const unsigned int n) { ReleaseMutex(mutex[n]); }$/;"	f	struct:cimg_library_suffixed::cimg::Mutex_info
trylock	CImg.h	/^      int trylock(const unsigned int) { return 0; }$/;"	f	struct:cimg_library_suffixed::cimg::Mutex_info
Mutex_attr	CImg.h	/^    Mutex_info& Mutex_attr();$/;"	p	namespace:cimg_library_suffixed::cimg
Mutex_attr	CImg.h	/^    Mutex_info& Mutex_attr() { static Mutex_info val; return val; }$/;"	f	namespace:cimg_library_suffixed::cimg
Mutex_attr	CImg.h	/^    inline Mutex_info& Mutex_attr() { static Mutex_info val; return val; }$/;"	f	namespace:cimg_library_suffixed::cimg
Magick_info	CImg.h	/^    static struct Magick_info {$/;"	s	namespace:cimg_library_suffixed::cimg
Magick_info	CImg.h	/^      Magick_info() {$/;"	f	struct:cimg_library_suffixed::cimg::Magick_info
_Magick_info	CImg.h	/^    } _Magick_info;$/;"	m	namespace:cimg_library_suffixed::cimg	typeref:struct:cimg_library_suffixed::cimg::Magick_info
keyESC	CImg.h	/^    const unsigned int keyESC        = XK_Escape;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF1	CImg.h	/^    const unsigned int keyF1         = XK_F1;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF2	CImg.h	/^    const unsigned int keyF2         = XK_F2;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF3	CImg.h	/^    const unsigned int keyF3         = XK_F3;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF4	CImg.h	/^    const unsigned int keyF4         = XK_F4;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF5	CImg.h	/^    const unsigned int keyF5         = XK_F5;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF6	CImg.h	/^    const unsigned int keyF6         = XK_F6;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF7	CImg.h	/^    const unsigned int keyF7         = XK_F7;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF8	CImg.h	/^    const unsigned int keyF8         = XK_F8;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF9	CImg.h	/^    const unsigned int keyF9         = XK_F9;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF10	CImg.h	/^    const unsigned int keyF10        = XK_F10;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF11	CImg.h	/^    const unsigned int keyF11        = XK_F11;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF12	CImg.h	/^    const unsigned int keyF12        = XK_F12;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAUSE	CImg.h	/^    const unsigned int keyPAUSE      = XK_Pause;$/;"	m	namespace:cimg_library_suffixed::cimg
key1	CImg.h	/^    const unsigned int key1          = XK_1;$/;"	m	namespace:cimg_library_suffixed::cimg
key2	CImg.h	/^    const unsigned int key2          = XK_2;$/;"	m	namespace:cimg_library_suffixed::cimg
key3	CImg.h	/^    const unsigned int key3          = XK_3;$/;"	m	namespace:cimg_library_suffixed::cimg
key4	CImg.h	/^    const unsigned int key4          = XK_4;$/;"	m	namespace:cimg_library_suffixed::cimg
key5	CImg.h	/^    const unsigned int key5          = XK_5;$/;"	m	namespace:cimg_library_suffixed::cimg
key6	CImg.h	/^    const unsigned int key6          = XK_6;$/;"	m	namespace:cimg_library_suffixed::cimg
key7	CImg.h	/^    const unsigned int key7          = XK_7;$/;"	m	namespace:cimg_library_suffixed::cimg
key8	CImg.h	/^    const unsigned int key8          = XK_8;$/;"	m	namespace:cimg_library_suffixed::cimg
key9	CImg.h	/^    const unsigned int key9          = XK_9;$/;"	m	namespace:cimg_library_suffixed::cimg
key0	CImg.h	/^    const unsigned int key0          = XK_0;$/;"	m	namespace:cimg_library_suffixed::cimg
keyBACKSPACE	CImg.h	/^    const unsigned int keyBACKSPACE  = XK_BackSpace;$/;"	m	namespace:cimg_library_suffixed::cimg
keyINSERT	CImg.h	/^    const unsigned int keyINSERT     = XK_Insert;$/;"	m	namespace:cimg_library_suffixed::cimg
keyHOME	CImg.h	/^    const unsigned int keyHOME       = XK_Home;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAGEUP	CImg.h	/^    const unsigned int keyPAGEUP     = XK_Page_Up;$/;"	m	namespace:cimg_library_suffixed::cimg
keyTAB	CImg.h	/^    const unsigned int keyTAB        = XK_Tab;$/;"	m	namespace:cimg_library_suffixed::cimg
keyQ	CImg.h	/^    const unsigned int keyQ          = XK_q;$/;"	m	namespace:cimg_library_suffixed::cimg
keyW	CImg.h	/^    const unsigned int keyW          = XK_w;$/;"	m	namespace:cimg_library_suffixed::cimg
keyE	CImg.h	/^    const unsigned int keyE          = XK_e;$/;"	m	namespace:cimg_library_suffixed::cimg
keyR	CImg.h	/^    const unsigned int keyR          = XK_r;$/;"	m	namespace:cimg_library_suffixed::cimg
keyT	CImg.h	/^    const unsigned int keyT          = XK_t;$/;"	m	namespace:cimg_library_suffixed::cimg
keyY	CImg.h	/^    const unsigned int keyY          = XK_y;$/;"	m	namespace:cimg_library_suffixed::cimg
keyU	CImg.h	/^    const unsigned int keyU          = XK_u;$/;"	m	namespace:cimg_library_suffixed::cimg
keyI	CImg.h	/^    const unsigned int keyI          = XK_i;$/;"	m	namespace:cimg_library_suffixed::cimg
keyO	CImg.h	/^    const unsigned int keyO          = XK_o;$/;"	m	namespace:cimg_library_suffixed::cimg
keyP	CImg.h	/^    const unsigned int keyP          = XK_p;$/;"	m	namespace:cimg_library_suffixed::cimg
keyDELETE	CImg.h	/^    const unsigned int keyDELETE     = XK_Delete;$/;"	m	namespace:cimg_library_suffixed::cimg
keyEND	CImg.h	/^    const unsigned int keyEND        = XK_End;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAGEDOWN	CImg.h	/^    const unsigned int keyPAGEDOWN   = XK_Page_Down;$/;"	m	namespace:cimg_library_suffixed::cimg
keyCAPSLOCK	CImg.h	/^    const unsigned int keyCAPSLOCK   = XK_Caps_Lock;$/;"	m	namespace:cimg_library_suffixed::cimg
keyA	CImg.h	/^    const unsigned int keyA          = XK_a;$/;"	m	namespace:cimg_library_suffixed::cimg
keyS	CImg.h	/^    const unsigned int keyS          = XK_s;$/;"	m	namespace:cimg_library_suffixed::cimg
keyD	CImg.h	/^    const unsigned int keyD          = XK_d;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF	CImg.h	/^    const unsigned int keyF          = XK_f;$/;"	m	namespace:cimg_library_suffixed::cimg
keyG	CImg.h	/^    const unsigned int keyG          = XK_g;$/;"	m	namespace:cimg_library_suffixed::cimg
keyH	CImg.h	/^    const unsigned int keyH          = XK_h;$/;"	m	namespace:cimg_library_suffixed::cimg
keyJ	CImg.h	/^    const unsigned int keyJ          = XK_j;$/;"	m	namespace:cimg_library_suffixed::cimg
keyK	CImg.h	/^    const unsigned int keyK          = XK_k;$/;"	m	namespace:cimg_library_suffixed::cimg
keyL	CImg.h	/^    const unsigned int keyL          = XK_l;$/;"	m	namespace:cimg_library_suffixed::cimg
keyENTER	CImg.h	/^    const unsigned int keyENTER      = XK_Return;$/;"	m	namespace:cimg_library_suffixed::cimg
keySHIFTLEFT	CImg.h	/^    const unsigned int keySHIFTLEFT  = XK_Shift_L;$/;"	m	namespace:cimg_library_suffixed::cimg
keyZ	CImg.h	/^    const unsigned int keyZ          = XK_z;$/;"	m	namespace:cimg_library_suffixed::cimg
keyX	CImg.h	/^    const unsigned int keyX          = XK_x;$/;"	m	namespace:cimg_library_suffixed::cimg
keyC	CImg.h	/^    const unsigned int keyC          = XK_c;$/;"	m	namespace:cimg_library_suffixed::cimg
keyV	CImg.h	/^    const unsigned int keyV          = XK_v;$/;"	m	namespace:cimg_library_suffixed::cimg
keyB	CImg.h	/^    const unsigned int keyB          = XK_b;$/;"	m	namespace:cimg_library_suffixed::cimg
keyN	CImg.h	/^    const unsigned int keyN          = XK_n;$/;"	m	namespace:cimg_library_suffixed::cimg
keyM	CImg.h	/^    const unsigned int keyM          = XK_m;$/;"	m	namespace:cimg_library_suffixed::cimg
keySHIFTRIGHT	CImg.h	/^    const unsigned int keySHIFTRIGHT = XK_Shift_R;$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWUP	CImg.h	/^    const unsigned int keyARROWUP    = XK_Up;$/;"	m	namespace:cimg_library_suffixed::cimg
keyCTRLLEFT	CImg.h	/^    const unsigned int keyCTRLLEFT   = XK_Control_L;$/;"	m	namespace:cimg_library_suffixed::cimg
keyAPPLEFT	CImg.h	/^    const unsigned int keyAPPLEFT    = XK_Super_L;$/;"	m	namespace:cimg_library_suffixed::cimg
keyALT	CImg.h	/^    const unsigned int keyALT        = XK_Alt_L;$/;"	m	namespace:cimg_library_suffixed::cimg
keySPACE	CImg.h	/^    const unsigned int keySPACE      = XK_space;$/;"	m	namespace:cimg_library_suffixed::cimg
keyALTGR	CImg.h	/^    const unsigned int keyALTGR      = XK_Alt_R;$/;"	m	namespace:cimg_library_suffixed::cimg
keyAPPRIGHT	CImg.h	/^    const unsigned int keyAPPRIGHT   = XK_Super_R;$/;"	m	namespace:cimg_library_suffixed::cimg
keyMENU	CImg.h	/^    const unsigned int keyMENU       = XK_Menu;$/;"	m	namespace:cimg_library_suffixed::cimg
keyCTRLRIGHT	CImg.h	/^    const unsigned int keyCTRLRIGHT  = XK_Control_R;$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWLEFT	CImg.h	/^    const unsigned int keyARROWLEFT  = XK_Left;$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWDOWN	CImg.h	/^    const unsigned int keyARROWDOWN  = XK_Down;$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWRIGHT	CImg.h	/^    const unsigned int keyARROWRIGHT = XK_Right;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD0	CImg.h	/^    const unsigned int keyPAD0       = XK_KP_0;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD1	CImg.h	/^    const unsigned int keyPAD1       = XK_KP_1;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD2	CImg.h	/^    const unsigned int keyPAD2       = XK_KP_2;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD3	CImg.h	/^    const unsigned int keyPAD3       = XK_KP_3;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD4	CImg.h	/^    const unsigned int keyPAD4       = XK_KP_4;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD5	CImg.h	/^    const unsigned int keyPAD5       = XK_KP_5;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD6	CImg.h	/^    const unsigned int keyPAD6       = XK_KP_6;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD7	CImg.h	/^    const unsigned int keyPAD7       = XK_KP_7;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD8	CImg.h	/^    const unsigned int keyPAD8       = XK_KP_8;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD9	CImg.h	/^    const unsigned int keyPAD9       = XK_KP_9;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADADD	CImg.h	/^    const unsigned int keyPADADD     = XK_KP_Add;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADSUB	CImg.h	/^    const unsigned int keyPADSUB     = XK_KP_Subtract;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADMUL	CImg.h	/^    const unsigned int keyPADMUL     = XK_KP_Multiply;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADDIV	CImg.h	/^    const unsigned int keyPADDIV     = XK_KP_Divide;$/;"	m	namespace:cimg_library_suffixed::cimg
keyESC	CImg.h	/^    const unsigned int keyESC        = VK_ESCAPE;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF1	CImg.h	/^    const unsigned int keyF1         = VK_F1;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF2	CImg.h	/^    const unsigned int keyF2         = VK_F2;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF3	CImg.h	/^    const unsigned int keyF3         = VK_F3;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF4	CImg.h	/^    const unsigned int keyF4         = VK_F4;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF5	CImg.h	/^    const unsigned int keyF5         = VK_F5;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF6	CImg.h	/^    const unsigned int keyF6         = VK_F6;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF7	CImg.h	/^    const unsigned int keyF7         = VK_F7;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF8	CImg.h	/^    const unsigned int keyF8         = VK_F8;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF9	CImg.h	/^    const unsigned int keyF9         = VK_F9;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF10	CImg.h	/^    const unsigned int keyF10        = VK_F10;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF11	CImg.h	/^    const unsigned int keyF11        = VK_F11;$/;"	m	namespace:cimg_library_suffixed::cimg
keyF12	CImg.h	/^    const unsigned int keyF12        = VK_F12;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAUSE	CImg.h	/^    const unsigned int keyPAUSE      = VK_PAUSE;$/;"	m	namespace:cimg_library_suffixed::cimg
key1	CImg.h	/^    const unsigned int key1          = '1';$/;"	m	namespace:cimg_library_suffixed::cimg
key2	CImg.h	/^    const unsigned int key2          = '2';$/;"	m	namespace:cimg_library_suffixed::cimg
key3	CImg.h	/^    const unsigned int key3          = '3';$/;"	m	namespace:cimg_library_suffixed::cimg
key4	CImg.h	/^    const unsigned int key4          = '4';$/;"	m	namespace:cimg_library_suffixed::cimg
key5	CImg.h	/^    const unsigned int key5          = '5';$/;"	m	namespace:cimg_library_suffixed::cimg
key6	CImg.h	/^    const unsigned int key6          = '6';$/;"	m	namespace:cimg_library_suffixed::cimg
key7	CImg.h	/^    const unsigned int key7          = '7';$/;"	m	namespace:cimg_library_suffixed::cimg
key8	CImg.h	/^    const unsigned int key8          = '8';$/;"	m	namespace:cimg_library_suffixed::cimg
key9	CImg.h	/^    const unsigned int key9          = '9';$/;"	m	namespace:cimg_library_suffixed::cimg
key0	CImg.h	/^    const unsigned int key0          = '0';$/;"	m	namespace:cimg_library_suffixed::cimg
keyBACKSPACE	CImg.h	/^    const unsigned int keyBACKSPACE  = VK_BACK;$/;"	m	namespace:cimg_library_suffixed::cimg
keyINSERT	CImg.h	/^    const unsigned int keyINSERT     = VK_INSERT;$/;"	m	namespace:cimg_library_suffixed::cimg
keyHOME	CImg.h	/^    const unsigned int keyHOME       = VK_HOME;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAGEUP	CImg.h	/^    const unsigned int keyPAGEUP     = VK_PRIOR;$/;"	m	namespace:cimg_library_suffixed::cimg
keyTAB	CImg.h	/^    const unsigned int keyTAB        = VK_TAB;$/;"	m	namespace:cimg_library_suffixed::cimg
keyQ	CImg.h	/^    const unsigned int keyQ          = 'Q';$/;"	m	namespace:cimg_library_suffixed::cimg
keyW	CImg.h	/^    const unsigned int keyW          = 'W';$/;"	m	namespace:cimg_library_suffixed::cimg
keyE	CImg.h	/^    const unsigned int keyE          = 'E';$/;"	m	namespace:cimg_library_suffixed::cimg
keyR	CImg.h	/^    const unsigned int keyR          = 'R';$/;"	m	namespace:cimg_library_suffixed::cimg
keyT	CImg.h	/^    const unsigned int keyT          = 'T';$/;"	m	namespace:cimg_library_suffixed::cimg
keyY	CImg.h	/^    const unsigned int keyY          = 'Y';$/;"	m	namespace:cimg_library_suffixed::cimg
keyU	CImg.h	/^    const unsigned int keyU          = 'U';$/;"	m	namespace:cimg_library_suffixed::cimg
keyI	CImg.h	/^    const unsigned int keyI          = 'I';$/;"	m	namespace:cimg_library_suffixed::cimg
keyO	CImg.h	/^    const unsigned int keyO          = 'O';$/;"	m	namespace:cimg_library_suffixed::cimg
keyP	CImg.h	/^    const unsigned int keyP          = 'P';$/;"	m	namespace:cimg_library_suffixed::cimg
keyDELETE	CImg.h	/^    const unsigned int keyDELETE     = VK_DELETE;$/;"	m	namespace:cimg_library_suffixed::cimg
keyEND	CImg.h	/^    const unsigned int keyEND        = VK_END;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAGEDOWN	CImg.h	/^    const unsigned int keyPAGEDOWN   = VK_NEXT;$/;"	m	namespace:cimg_library_suffixed::cimg
keyCAPSLOCK	CImg.h	/^    const unsigned int keyCAPSLOCK   = VK_CAPITAL;$/;"	m	namespace:cimg_library_suffixed::cimg
keyA	CImg.h	/^    const unsigned int keyA          = 'A';$/;"	m	namespace:cimg_library_suffixed::cimg
keyS	CImg.h	/^    const unsigned int keyS          = 'S';$/;"	m	namespace:cimg_library_suffixed::cimg
keyD	CImg.h	/^    const unsigned int keyD          = 'D';$/;"	m	namespace:cimg_library_suffixed::cimg
keyF	CImg.h	/^    const unsigned int keyF          = 'F';$/;"	m	namespace:cimg_library_suffixed::cimg
keyG	CImg.h	/^    const unsigned int keyG          = 'G';$/;"	m	namespace:cimg_library_suffixed::cimg
keyH	CImg.h	/^    const unsigned int keyH          = 'H';$/;"	m	namespace:cimg_library_suffixed::cimg
keyJ	CImg.h	/^    const unsigned int keyJ          = 'J';$/;"	m	namespace:cimg_library_suffixed::cimg
keyK	CImg.h	/^    const unsigned int keyK          = 'K';$/;"	m	namespace:cimg_library_suffixed::cimg
keyL	CImg.h	/^    const unsigned int keyL          = 'L';$/;"	m	namespace:cimg_library_suffixed::cimg
keyENTER	CImg.h	/^    const unsigned int keyENTER      = VK_RETURN;$/;"	m	namespace:cimg_library_suffixed::cimg
keySHIFTLEFT	CImg.h	/^    const unsigned int keySHIFTLEFT  = VK_SHIFT;$/;"	m	namespace:cimg_library_suffixed::cimg
keyZ	CImg.h	/^    const unsigned int keyZ          = 'Z';$/;"	m	namespace:cimg_library_suffixed::cimg
keyX	CImg.h	/^    const unsigned int keyX          = 'X';$/;"	m	namespace:cimg_library_suffixed::cimg
keyC	CImg.h	/^    const unsigned int keyC          = 'C';$/;"	m	namespace:cimg_library_suffixed::cimg
keyV	CImg.h	/^    const unsigned int keyV          = 'V';$/;"	m	namespace:cimg_library_suffixed::cimg
keyB	CImg.h	/^    const unsigned int keyB          = 'B';$/;"	m	namespace:cimg_library_suffixed::cimg
keyN	CImg.h	/^    const unsigned int keyN          = 'N';$/;"	m	namespace:cimg_library_suffixed::cimg
keyM	CImg.h	/^    const unsigned int keyM          = 'M';$/;"	m	namespace:cimg_library_suffixed::cimg
keySHIFTRIGHT	CImg.h	/^    const unsigned int keySHIFTRIGHT = VK_SHIFT;$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWUP	CImg.h	/^    const unsigned int keyARROWUP    = VK_UP;$/;"	m	namespace:cimg_library_suffixed::cimg
keyCTRLLEFT	CImg.h	/^    const unsigned int keyCTRLLEFT   = VK_CONTROL;$/;"	m	namespace:cimg_library_suffixed::cimg
keyAPPLEFT	CImg.h	/^    const unsigned int keyAPPLEFT    = VK_LWIN;$/;"	m	namespace:cimg_library_suffixed::cimg
keyALT	CImg.h	/^    const unsigned int keyALT        = VK_LMENU;$/;"	m	namespace:cimg_library_suffixed::cimg
keySPACE	CImg.h	/^    const unsigned int keySPACE      = VK_SPACE;$/;"	m	namespace:cimg_library_suffixed::cimg
keyALTGR	CImg.h	/^    const unsigned int keyALTGR      = VK_CONTROL;$/;"	m	namespace:cimg_library_suffixed::cimg
keyAPPRIGHT	CImg.h	/^    const unsigned int keyAPPRIGHT   = VK_RWIN;$/;"	m	namespace:cimg_library_suffixed::cimg
keyMENU	CImg.h	/^    const unsigned int keyMENU       = VK_APPS;$/;"	m	namespace:cimg_library_suffixed::cimg
keyCTRLRIGHT	CImg.h	/^    const unsigned int keyCTRLRIGHT  = VK_CONTROL;$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWLEFT	CImg.h	/^    const unsigned int keyARROWLEFT  = VK_LEFT;$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWDOWN	CImg.h	/^    const unsigned int keyARROWDOWN  = VK_DOWN;$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWRIGHT	CImg.h	/^    const unsigned int keyARROWRIGHT = VK_RIGHT;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD0	CImg.h	/^    const unsigned int keyPAD0       = 0x60;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD1	CImg.h	/^    const unsigned int keyPAD1       = 0x61;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD2	CImg.h	/^    const unsigned int keyPAD2       = 0x62;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD3	CImg.h	/^    const unsigned int keyPAD3       = 0x63;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD4	CImg.h	/^    const unsigned int keyPAD4       = 0x64;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD5	CImg.h	/^    const unsigned int keyPAD5       = 0x65;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD6	CImg.h	/^    const unsigned int keyPAD6       = 0x66;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD7	CImg.h	/^    const unsigned int keyPAD7       = 0x67;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD8	CImg.h	/^    const unsigned int keyPAD8       = 0x68;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD9	CImg.h	/^    const unsigned int keyPAD9       = 0x69;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADADD	CImg.h	/^    const unsigned int keyPADADD     = VK_ADD;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADSUB	CImg.h	/^    const unsigned int keyPADSUB     = VK_SUBTRACT;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADMUL	CImg.h	/^    const unsigned int keyPADMUL     = VK_MULTIPLY;$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADDIV	CImg.h	/^    const unsigned int keyPADDIV     = VK_DIVIDE;$/;"	m	namespace:cimg_library_suffixed::cimg
keyESC	CImg.h	/^    const unsigned int keyESC        = 1U;   \/\/!< Keycode for the \\c ESC key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF1	CImg.h	/^    const unsigned int keyF1         = 2U;   \/\/!< Keycode for the \\c F1 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF2	CImg.h	/^    const unsigned int keyF2         = 3U;   \/\/!< Keycode for the \\c F2 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF3	CImg.h	/^    const unsigned int keyF3         = 4U;   \/\/!< Keycode for the \\c F3 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF4	CImg.h	/^    const unsigned int keyF4         = 5U;   \/\/!< Keycode for the \\c F4 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF5	CImg.h	/^    const unsigned int keyF5         = 6U;   \/\/!< Keycode for the \\c F5 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF6	CImg.h	/^    const unsigned int keyF6         = 7U;   \/\/!< Keycode for the \\c F6 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF7	CImg.h	/^    const unsigned int keyF7         = 8U;   \/\/!< Keycode for the \\c F7 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF8	CImg.h	/^    const unsigned int keyF8         = 9U;   \/\/!< Keycode for the \\c F8 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF9	CImg.h	/^    const unsigned int keyF9         = 10U;  \/\/!< Keycode for the \\c F9 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF10	CImg.h	/^    const unsigned int keyF10        = 11U;  \/\/!< Keycode for the \\c F10 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF11	CImg.h	/^    const unsigned int keyF11        = 12U;  \/\/!< Keycode for the \\c F11 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF12	CImg.h	/^    const unsigned int keyF12        = 13U;  \/\/!< Keycode for the \\c F12 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAUSE	CImg.h	/^    const unsigned int keyPAUSE      = 14U;  \/\/!< Keycode for the \\c PAUSE key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
key1	CImg.h	/^    const unsigned int key1          = 15U;  \/\/!< Keycode for the \\c 1 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
key2	CImg.h	/^    const unsigned int key2          = 16U;  \/\/!< Keycode for the \\c 2 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
key3	CImg.h	/^    const unsigned int key3          = 17U;  \/\/!< Keycode for the \\c 3 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
key4	CImg.h	/^    const unsigned int key4          = 18U;  \/\/!< Keycode for the \\c 4 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
key5	CImg.h	/^    const unsigned int key5          = 19U;  \/\/!< Keycode for the \\c 5 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
key6	CImg.h	/^    const unsigned int key6          = 20U;  \/\/!< Keycode for the \\c 6 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
key7	CImg.h	/^    const unsigned int key7          = 21U;  \/\/!< Keycode for the \\c 7 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
key8	CImg.h	/^    const unsigned int key8          = 22U;  \/\/!< Keycode for the \\c 8 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
key9	CImg.h	/^    const unsigned int key9          = 23U;  \/\/!< Keycode for the \\c 9 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
key0	CImg.h	/^    const unsigned int key0          = 24U;  \/\/!< Keycode for the \\c 0 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyBACKSPACE	CImg.h	/^    const unsigned int keyBACKSPACE  = 25U;  \/\/!< Keycode for the \\c BACKSPACE key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyINSERT	CImg.h	/^    const unsigned int keyINSERT     = 26U;  \/\/!< Keycode for the \\c INSERT key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyHOME	CImg.h	/^    const unsigned int keyHOME       = 27U;  \/\/!< Keycode for the \\c HOME key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAGEUP	CImg.h	/^    const unsigned int keyPAGEUP     = 28U;  \/\/!< Keycode for the \\c PAGEUP key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyTAB	CImg.h	/^    const unsigned int keyTAB        = 29U;  \/\/!< Keycode for the \\c TAB key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyQ	CImg.h	/^    const unsigned int keyQ          = 30U;  \/\/!< Keycode for the \\c Q key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyW	CImg.h	/^    const unsigned int keyW          = 31U;  \/\/!< Keycode for the \\c W key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyE	CImg.h	/^    const unsigned int keyE          = 32U;  \/\/!< Keycode for the \\c E key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyR	CImg.h	/^    const unsigned int keyR          = 33U;  \/\/!< Keycode for the \\c R key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyT	CImg.h	/^    const unsigned int keyT          = 34U;  \/\/!< Keycode for the \\c T key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyY	CImg.h	/^    const unsigned int keyY          = 35U;  \/\/!< Keycode for the \\c Y key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyU	CImg.h	/^    const unsigned int keyU          = 36U;  \/\/!< Keycode for the \\c U key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyI	CImg.h	/^    const unsigned int keyI          = 37U;  \/\/!< Keycode for the \\c I key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyO	CImg.h	/^    const unsigned int keyO          = 38U;  \/\/!< Keycode for the \\c O key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyP	CImg.h	/^    const unsigned int keyP          = 39U;  \/\/!< Keycode for the \\c P key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyDELETE	CImg.h	/^    const unsigned int keyDELETE     = 40U;  \/\/!< Keycode for the \\c DELETE key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyEND	CImg.h	/^    const unsigned int keyEND        = 41U;  \/\/!< Keycode for the \\c END key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAGEDOWN	CImg.h	/^    const unsigned int keyPAGEDOWN   = 42U;  \/\/!< Keycode for the \\c PAGEDOWN key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyCAPSLOCK	CImg.h	/^    const unsigned int keyCAPSLOCK   = 43U;  \/\/!< Keycode for the \\c CAPSLOCK key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyA	CImg.h	/^    const unsigned int keyA          = 44U;  \/\/!< Keycode for the \\c A key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyS	CImg.h	/^    const unsigned int keyS          = 45U;  \/\/!< Keycode for the \\c S key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyD	CImg.h	/^    const unsigned int keyD          = 46U;  \/\/!< Keycode for the \\c D key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyF	CImg.h	/^    const unsigned int keyF          = 47U;  \/\/!< Keycode for the \\c F key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyG	CImg.h	/^    const unsigned int keyG          = 48U;  \/\/!< Keycode for the \\c G key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyH	CImg.h	/^    const unsigned int keyH          = 49U;  \/\/!< Keycode for the \\c H key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyJ	CImg.h	/^    const unsigned int keyJ          = 50U;  \/\/!< Keycode for the \\c J key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyK	CImg.h	/^    const unsigned int keyK          = 51U;  \/\/!< Keycode for the \\c K key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyL	CImg.h	/^    const unsigned int keyL          = 52U;  \/\/!< Keycode for the \\c L key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyENTER	CImg.h	/^    const unsigned int keyENTER      = 53U;  \/\/!< Keycode for the \\c ENTER key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keySHIFTLEFT	CImg.h	/^    const unsigned int keySHIFTLEFT  = 54U;  \/\/!< Keycode for the \\c SHIFTLEFT key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyZ	CImg.h	/^    const unsigned int keyZ          = 55U;  \/\/!< Keycode for the \\c Z key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyX	CImg.h	/^    const unsigned int keyX          = 56U;  \/\/!< Keycode for the \\c X key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyC	CImg.h	/^    const unsigned int keyC          = 57U;  \/\/!< Keycode for the \\c C key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyV	CImg.h	/^    const unsigned int keyV          = 58U;  \/\/!< Keycode for the \\c V key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyB	CImg.h	/^    const unsigned int keyB          = 59U;  \/\/!< Keycode for the \\c B key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyN	CImg.h	/^    const unsigned int keyN          = 60U;  \/\/!< Keycode for the \\c N key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyM	CImg.h	/^    const unsigned int keyM          = 61U;  \/\/!< Keycode for the \\c M key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keySHIFTRIGHT	CImg.h	/^    const unsigned int keySHIFTRIGHT = 62U;  \/\/!< Keycode for the \\c SHIFTRIGHT key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWUP	CImg.h	/^    const unsigned int keyARROWUP    = 63U;  \/\/!< Keycode for the \\c ARROWUP key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyCTRLLEFT	CImg.h	/^    const unsigned int keyCTRLLEFT   = 64U;  \/\/!< Keycode for the \\c CTRLLEFT key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyAPPLEFT	CImg.h	/^    const unsigned int keyAPPLEFT    = 65U;  \/\/!< Keycode for the \\c APPLEFT key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyALT	CImg.h	/^    const unsigned int keyALT        = 66U;  \/\/!< Keycode for the \\c ALT key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keySPACE	CImg.h	/^    const unsigned int keySPACE      = 67U;  \/\/!< Keycode for the \\c SPACE key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyALTGR	CImg.h	/^    const unsigned int keyALTGR      = 68U;  \/\/!< Keycode for the \\c ALTGR key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyAPPRIGHT	CImg.h	/^    const unsigned int keyAPPRIGHT   = 69U;  \/\/!< Keycode for the \\c APPRIGHT key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyMENU	CImg.h	/^    const unsigned int keyMENU       = 70U;  \/\/!< Keycode for the \\c MENU key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyCTRLRIGHT	CImg.h	/^    const unsigned int keyCTRLRIGHT  = 71U;  \/\/!< Keycode for the \\c CTRLRIGHT key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWLEFT	CImg.h	/^    const unsigned int keyARROWLEFT  = 72U;  \/\/!< Keycode for the \\c ARROWLEFT key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWDOWN	CImg.h	/^    const unsigned int keyARROWDOWN  = 73U;  \/\/!< Keycode for the \\c ARROWDOWN key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyARROWRIGHT	CImg.h	/^    const unsigned int keyARROWRIGHT = 74U;  \/\/!< Keycode for the \\c ARROWRIGHT key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD0	CImg.h	/^    const unsigned int keyPAD0       = 75U;  \/\/!< Keycode for the \\c PAD0 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD1	CImg.h	/^    const unsigned int keyPAD1       = 76U;  \/\/!< Keycode for the \\c PAD1 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD2	CImg.h	/^    const unsigned int keyPAD2       = 77U;  \/\/!< Keycode for the \\c PAD2 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD3	CImg.h	/^    const unsigned int keyPAD3       = 78U;  \/\/!< Keycode for the \\c PAD3 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD4	CImg.h	/^    const unsigned int keyPAD4       = 79U;  \/\/!< Keycode for the \\c PAD4 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD5	CImg.h	/^    const unsigned int keyPAD5       = 80U;  \/\/!< Keycode for the \\c PAD5 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD6	CImg.h	/^    const unsigned int keyPAD6       = 81U;  \/\/!< Keycode for the \\c PAD6 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD7	CImg.h	/^    const unsigned int keyPAD7       = 82U;  \/\/!< Keycode for the \\c PAD7 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD8	CImg.h	/^    const unsigned int keyPAD8       = 83U;  \/\/!< Keycode for the \\c PAD8 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPAD9	CImg.h	/^    const unsigned int keyPAD9       = 84U;  \/\/!< Keycode for the \\c PAD9 key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADADD	CImg.h	/^    const unsigned int keyPADADD     = 85U;  \/\/!< Keycode for the \\c PADADD key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADSUB	CImg.h	/^    const unsigned int keyPADSUB     = 86U;  \/\/!< Keycode for the \\c PADSUB key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADMUL	CImg.h	/^    const unsigned int keyPADMUL     = 87U;  \/\/!< Keycode for the \\c PADMUL key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
keyPADDIV	CImg.h	/^    const unsigned int keyPADDIV     = 88U;  \/\/!< Keycode for the \\c PADDDIV key (architecture-dependent).$/;"	m	namespace:cimg_library_suffixed::cimg
PI	CImg.h	/^    const double PI = 3.14159265358979323846;   \/\/!< Value of the mathematical constant PI$/;"	m	namespace:cimg_library_suffixed::cimg
data_font_small	CImg.h	/^    static const char *const data_font_small[] = {$/;"	m	namespace:cimg_library_suffixed::cimg
data_font_normal	CImg.h	/^    static const char *const data_font_normal[] = {$/;"	m	namespace:cimg_library_suffixed::cimg
data_font_large	CImg.h	/^    static const char *const data_font_large[] = {$/;"	m	namespace:cimg_library_suffixed::cimg
data_font_huge	CImg.h	/^    static const char *const data_font_huge[] = {$/;"	m	namespace:cimg_library_suffixed::cimg
logo40x38	CImg.h	/^    static const unsigned char logo40x38[4576] = {$/;"	m	namespace:cimg_library_suffixed::cimg
output	CImg.h	/^    inline std::FILE* output(std::FILE *file) {$/;"	f	namespace:cimg_library_suffixed::cimg
nb_cpus	CImg.h	/^    inline unsigned int nb_cpus() {$/;"	f	namespace:cimg_library_suffixed::cimg
mutex	CImg.h	/^    inline int mutex(const unsigned int n, const int lock_mode) {$/;"	f	namespace:cimg_library_suffixed::cimg
warn	CImg.h	/^    inline void warn(const char *const format, ...) {$/;"	f	namespace:cimg_library_suffixed::cimg
system	CImg.h	/^    inline int system(const char *const command, const char *const module_name=0, const bool is_verbose=false) {$/;"	f	namespace:cimg_library_suffixed::cimg
temporary	CImg.h	/^    inline T& temporary(const T&) {$/;"	f	namespace:cimg_library_suffixed::cimg
swap	CImg.h	/^    inline void swap(T& a, T& b) { T t = a; a = b; b = t; }$/;"	f	namespace:cimg_library_suffixed::cimg
swap	CImg.h	/^    inline void swap(T1& a1, T1& b1, T2& a2, T2& b2) {$/;"	f	namespace:cimg_library_suffixed::cimg
swap	CImg.h	/^    inline void swap(T1& a1, T1& b1, T2& a2, T2& b2, T3& a3, T3& b3) {$/;"	f	namespace:cimg_library_suffixed::cimg
swap	CImg.h	/^    inline void swap(T1& a1, T1& b1, T2& a2, T2& b2, T3& a3, T3& b3, T4& a4, T4& b4) {$/;"	f	namespace:cimg_library_suffixed::cimg
swap	CImg.h	/^    inline void swap(T1& a1, T1& b1, T2& a2, T2& b2, T3& a3, T3& b3, T4& a4, T4& b4, T5& a5, T5& b5) {$/;"	f	namespace:cimg_library_suffixed::cimg
swap	CImg.h	/^    inline void swap(T1& a1, T1& b1, T2& a2, T2& b2, T3& a3, T3& b3, T4& a4, T4& b4, T5& a5, T5& b5, T6& a6, T6& b6) {$/;"	f	namespace:cimg_library_suffixed::cimg
swap	CImg.h	/^    inline void swap(T1& a1, T1& b1, T2& a2, T2& b2, T3& a3, T3& b3, T4& a4, T4& b4, T5& a5, T5& b5, T6& a6, T6& b6,$/;"	f	namespace:cimg_library_suffixed::cimg
swap	CImg.h	/^    inline void swap(T1& a1, T1& b1, T2& a2, T2& b2, T3& a3, T3& b3, T4& a4, T4& b4, T5& a5, T5& b5, T6& a6, T6& b6,$/;"	f	namespace:cimg_library_suffixed::cimg
endianness	CImg.h	/^    inline bool endianness() {$/;"	f	namespace:cimg_library_suffixed::cimg
invert_endianness	CImg.h	/^    inline void invert_endianness(T* const buffer, const cimg_ulong size) {$/;"	f	namespace:cimg_library_suffixed::cimg
invert_endianness	CImg.h	/^    inline T& invert_endianness(T& a) {$/;"	f	namespace:cimg_library_suffixed::cimg
float2uint	CImg.h	/^    inline unsigned int float2uint(const float f) {$/;"	f	namespace:cimg_library_suffixed::cimg
uint2float	CImg.h	/^    inline float uint2float(const unsigned int u) {$/;"	f	namespace:cimg_library_suffixed::cimg
time	CImg.h	/^    inline cimg_ulong time() {$/;"	f	namespace:cimg_library_suffixed::cimg
tictoc	CImg.h	/^    inline cimg_ulong tictoc(const bool is_tic);$/;"	p	namespace:cimg_library_suffixed::cimg
tic	CImg.h	/^    inline cimg_ulong tic() {$/;"	f	namespace:cimg_library_suffixed::cimg
toc	CImg.h	/^    inline cimg_ulong toc() {$/;"	f	namespace:cimg_library_suffixed::cimg
sleep	CImg.h	/^    inline void sleep(const unsigned int milliseconds) {$/;"	f	namespace:cimg_library_suffixed::cimg
_wait	CImg.h	/^    inline unsigned int _wait(const unsigned int milliseconds, cimg_ulong& timer) {$/;"	f	namespace:cimg_library_suffixed::cimg
wait	CImg.h	/^    inline cimg_long wait(const unsigned int milliseconds) {$/;"	f	namespace:cimg_library_suffixed::cimg
_rand	CImg.h	/^    inline unsigned int _rand(const unsigned int seed=0, const bool set_seed=false) {$/;"	f	namespace:cimg_library_suffixed::cimg
srand	CImg.h	/^    inline unsigned int srand() {$/;"	f	namespace:cimg_library_suffixed::cimg
srand	CImg.h	/^    inline unsigned int srand(const unsigned int seed) {$/;"	f	namespace:cimg_library_suffixed::cimg
rand	CImg.h	/^    inline double rand(const double val_min, const double val_max) {$/;"	f	namespace:cimg_library_suffixed::cimg
srand	CImg.h	/^    inline unsigned int srand() {$/;"	f	namespace:cimg_library_suffixed::cimg
srand	CImg.h	/^    inline unsigned int srand(const unsigned int seed) {$/;"	f	namespace:cimg_library_suffixed::cimg
rand	CImg.h	/^    inline double rand(const double val_min, const double val_max) {$/;"	f	namespace:cimg_library_suffixed::cimg
rand	CImg.h	/^    inline double rand(const double val_max=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
grand	CImg.h	/^    inline double grand() {$/;"	f	namespace:cimg_library_suffixed::cimg
prand	CImg.h	/^    inline unsigned int prand(const double z) {$/;"	f	namespace:cimg_library_suffixed::cimg
cut	CImg.h	/^    inline T cut(const T& val, const t& val_min, const t& val_max) {$/;"	f	namespace:cimg_library_suffixed::cimg
rol	CImg.h	/^    inline T rol(const T& a, const unsigned int n=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
rol	CImg.h	/^    inline float rol(const float a, const unsigned int n=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
rol	CImg.h	/^    inline double rol(const double a, const unsigned int n=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
rol	CImg.h	/^    inline double rol(const long double a, const unsigned int n=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
rol	CImg.h	/^    inline half rol(const half a, const unsigned int n=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
ror	CImg.h	/^    inline T ror(const T& a, const unsigned int n=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
ror	CImg.h	/^    inline float ror(const float a, const unsigned int n=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
ror	CImg.h	/^    inline double ror(const double a, const unsigned int n=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
ror	CImg.h	/^    inline double ror(const long double a, const unsigned int n=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
ror	CImg.h	/^    inline half ror(const half a, const unsigned int n=1) {$/;"	f	namespace:cimg_library_suffixed::cimg
abs	CImg.h	/^    inline T abs(const T& a) {$/;"	f	namespace:cimg_library_suffixed::cimg
abs	CImg.h	/^    inline bool abs(const bool a) {$/;"	f	namespace:cimg_library_suffixed::cimg
abs	CImg.h	/^    inline int abs(const unsigned char a) {$/;"	f	namespace:cimg_library_suffixed::cimg
abs	CImg.h	/^    inline int abs(const unsigned short a) {$/;"	f	namespace:cimg_library_suffixed::cimg
abs	CImg.h	/^    inline int abs(const unsigned int a) {$/;"	f	namespace:cimg_library_suffixed::cimg
abs	CImg.h	/^    inline int abs(const int a) {$/;"	f	namespace:cimg_library_suffixed::cimg
abs	CImg.h	/^    inline cimg_int64 abs(const cimg_uint64 a) {$/;"	f	namespace:cimg_library_suffixed::cimg
abs	CImg.h	/^    inline double abs(const double a) {$/;"	f	namespace:cimg_library_suffixed::cimg
abs	CImg.h	/^    inline float abs(const float a) {$/;"	f	namespace:cimg_library_suffixed::cimg
acosh	CImg.h	/^    inline double acosh(const double x) {$/;"	f	namespace:cimg_library_suffixed::cimg
asinh	CImg.h	/^    inline double asinh(const double x) {$/;"	f	namespace:cimg_library_suffixed::cimg
atanh	CImg.h	/^    inline double atanh(const double x) {$/;"	f	namespace:cimg_library_suffixed::cimg
sinc	CImg.h	/^    inline double sinc(const double x) {$/;"	f	namespace:cimg_library_suffixed::cimg
log2	CImg.h	/^    inline double log2(const double x) {$/;"	f	namespace:cimg_library_suffixed::cimg
sqr	CImg.h	/^    inline T sqr(const T& val) {$/;"	f	namespace:cimg_library_suffixed::cimg
cbrt	CImg.h	/^    inline double cbrt(const T& x) {$/;"	f	namespace:cimg_library_suffixed::cimg
min	CImg.h	/^    inline t min(const t& a, const t& b, const t& c) {$/;"	f	namespace:cimg_library_suffixed::cimg
min	CImg.h	/^    inline t min(const t& a, const t& b, const t& c, const t& d) {$/;"	f	namespace:cimg_library_suffixed::cimg
max	CImg.h	/^    inline t max(const t& a, const t& b, const t& c) {$/;"	f	namespace:cimg_library_suffixed::cimg
max	CImg.h	/^    inline t max(const t& a, const t& b, const t& c, const t& d) {$/;"	f	namespace:cimg_library_suffixed::cimg
sign	CImg.h	/^    inline T sign(const T& x) {$/;"	f	namespace:cimg_library_suffixed::cimg
nearest_pow2	CImg.h	/^    inline cimg_ulong nearest_pow2(const T& x) {$/;"	f	namespace:cimg_library_suffixed::cimg
mod	CImg.h	/^    inline T mod(const T& x, const T& m) {$/;"	f	namespace:cimg_library_suffixed::cimg
mod	CImg.h	/^    inline int mod(const bool x, const bool m) {$/;"	f	namespace:cimg_library_suffixed::cimg
mod	CImg.h	/^    inline int mod(const unsigned char x, const unsigned char m) {$/;"	f	namespace:cimg_library_suffixed::cimg
mod	CImg.h	/^    inline int mod(const char x, const char m) {$/;"	f	namespace:cimg_library_suffixed::cimg
mod	CImg.h	/^    inline int mod(const unsigned short x, const unsigned short m) {$/;"	f	namespace:cimg_library_suffixed::cimg
mod	CImg.h	/^    inline int mod(const short x, const short m) {$/;"	f	namespace:cimg_library_suffixed::cimg
mod	CImg.h	/^    inline int mod(const unsigned int x, const unsigned int m) {$/;"	f	namespace:cimg_library_suffixed::cimg
mod	CImg.h	/^    inline int mod(const int x, const int m) {$/;"	f	namespace:cimg_library_suffixed::cimg
mod	CImg.h	/^    inline cimg_int64 mod(const cimg_uint64 x, const cimg_uint64 m) {$/;"	f	namespace:cimg_library_suffixed::cimg
mod	CImg.h	/^    inline cimg_int64 mod(const cimg_int64 x, const cimg_int64 m) {$/;"	f	namespace:cimg_library_suffixed::cimg
minmod	CImg.h	/^    inline T minmod(const T& a, const T& b) {$/;"	f	namespace:cimg_library_suffixed::cimg
round	CImg.h	/^    inline T round(const T& x) {$/;"	f	namespace:cimg_library_suffixed::cimg
round	CImg.h	/^    inline T round(const T& x, const double y, const int rounding_type=0) {$/;"	f	namespace:cimg_library_suffixed::cimg
median	CImg.h	/^    inline T median(T val0, T val1) {$/;"	f	namespace:cimg_library_suffixed::cimg
median	CImg.h	/^    inline T median(T val0, T val1, T val2) {$/;"	f	namespace:cimg_library_suffixed::cimg
median	CImg.h	/^    inline T median(T val0, T val1, T val2, T val3, T val4) {$/;"	f	namespace:cimg_library_suffixed::cimg
median	CImg.h	/^    inline T median(T val0, T val1, T val2, T val3, T val4, T val5, T val6) {$/;"	f	namespace:cimg_library_suffixed::cimg
median	CImg.h	/^    inline T median(T val0, T val1, T val2, T val3, T val4, T val5, T val6, T val7, T val8) {$/;"	f	namespace:cimg_library_suffixed::cimg
median	CImg.h	/^    inline T median(T val0, T val1, T val2, T val3, T val4, T val5, T val6, T val7, T val8, T val9, T val10, T val11,$/;"	f	namespace:cimg_library_suffixed::cimg
median	CImg.h	/^    inline T median(T val0, T val1, T val2, T val3, T val4,$/;"	f	namespace:cimg_library_suffixed::cimg
median	CImg.h	/^    inline T median(T val0, T val1, T val2, T val3, T val4, T val5, T val6,$/;"	f	namespace:cimg_library_suffixed::cimg
hypot	CImg.h	/^    inline T hypot(const T x, const T y) {$/;"	f	namespace:cimg_library_suffixed::cimg
hypot	CImg.h	/^    inline T hypot(const T x, const T y, const T z) {$/;"	f	namespace:cimg_library_suffixed::cimg
_hypot	CImg.h	/^    inline T _hypot(const T x, const T y) { \/\/ Slower but more precise version$/;"	f	namespace:cimg_library_suffixed::cimg
factorial	CImg.h	/^    inline double factorial(const int n) {$/;"	f	namespace:cimg_library_suffixed::cimg
permutations	CImg.h	/^    inline double permutations(const int k, const int n, const bool with_order) {$/;"	f	namespace:cimg_library_suffixed::cimg
_fibonacci	CImg.h	/^    inline double _fibonacci(int exp) {$/;"	f	namespace:cimg_library_suffixed::cimg
fibonacci	CImg.h	/^    inline double fibonacci(const int n) {$/;"	f	namespace:cimg_library_suffixed::cimg
gcd	CImg.h	/^    inline long gcd(long a, long b) {$/;"	f	namespace:cimg_library_suffixed::cimg
lowercase	CImg.h	/^    inline char lowercase(const char x) {$/;"	f	namespace:cimg_library_suffixed::cimg
lowercase	CImg.h	/^    inline double lowercase(const double x) {$/;"	f	namespace:cimg_library_suffixed::cimg
lowercase	CImg.h	/^    inline void lowercase(char *const str) {$/;"	f	namespace:cimg_library_suffixed::cimg
uppercase	CImg.h	/^    inline char uppercase(const char x) {$/;"	f	namespace:cimg_library_suffixed::cimg
uppercase	CImg.h	/^    inline double uppercase(const double x) {$/;"	f	namespace:cimg_library_suffixed::cimg
uppercase	CImg.h	/^    inline void uppercase(char *const str) {$/;"	f	namespace:cimg_library_suffixed::cimg
atof	CImg.h	/^    inline double atof(const char *const str) {$/;"	f	namespace:cimg_library_suffixed::cimg
strncasecmp	CImg.h	/^    inline int strncasecmp(const char *const str1, const char *const str2, const int l) {$/;"	f	namespace:cimg_library_suffixed::cimg
strcasecmp	CImg.h	/^    inline int strcasecmp(const char *const str1, const char *const str2) {$/;"	f	namespace:cimg_library_suffixed::cimg
strellipsize	CImg.h	/^    inline char *strellipsize(char *const str, const unsigned int l=64,$/;"	f	namespace:cimg_library_suffixed::cimg
strellipsize	CImg.h	/^    inline char *strellipsize(const char *const str, char *const res, const unsigned int l=64,$/;"	f	namespace:cimg_library_suffixed::cimg
strpare	CImg.h	/^    inline bool strpare(char *const str, const char delimiter,$/;"	f	namespace:cimg_library_suffixed::cimg
strpare	CImg.h	/^    inline bool strpare(char *const str, const bool is_symmetric, const bool is_iterative) {$/;"	f	namespace:cimg_library_suffixed::cimg
strwindows_reserved	CImg.h	/^    inline void strwindows_reserved(char *const str, const char c='_') {$/;"	f	namespace:cimg_library_suffixed::cimg
strunescape	CImg.h	/^    inline void strunescape(char *const str) {$/;"	f	namespace:cimg_library_suffixed::cimg
cimg_strunescape	CImg.h	6771;"	d
strbuffersize	CImg.h	/^    inline const char *strbuffersize(const cimg_ulong size);$/;"	p	namespace:cimg_library_suffixed::cimg
stros	CImg.h	/^    inline const char *stros() {$/;"	f	namespace:cimg_library_suffixed::cimg
basename	CImg.h	/^    inline const char* basename(const char *const s, const char separator=cimg_file_separator)  {$/;"	f	namespace:cimg_library_suffixed::cimg
filenamerand	CImg.h	/^    inline const char* filenamerand() {$/;"	f	namespace:cimg_library_suffixed::cimg
winformat_string	CImg.h	/^    inline void winformat_string(char *const str) {$/;"	f	namespace:cimg_library_suffixed::cimg
std_fopen	CImg.h	/^    inline std::FILE *std_fopen(const char *const path, const char *const mode);$/;"	p	namespace:cimg_library_suffixed::cimg
fopen	CImg.h	/^    inline std::FILE *fopen(const char *const path, const char *const mode) {$/;"	f	namespace:cimg_library_suffixed::cimg
fclose	CImg.h	/^    inline int fclose(std::FILE *file) {$/;"	f	namespace:cimg_library_suffixed::cimg
fseek	CImg.h	/^    inline int fseek(FILE *stream, cimg_long offset, int origin) {$/;"	f	namespace:cimg_library_suffixed::cimg
ftell	CImg.h	/^    inline cimg_long ftell(FILE *stream) {$/;"	f	namespace:cimg_library_suffixed::cimg
is_directory	CImg.h	/^    inline bool is_directory(const char *const path) {$/;"	f	namespace:cimg_library_suffixed::cimg
is_file	CImg.h	/^    inline bool is_file(const char *const path) {$/;"	f	namespace:cimg_library_suffixed::cimg
fsize	CImg.h	/^    inline cimg_int64 fsize(const char *const filename) {$/;"	f	namespace:cimg_library_suffixed::cimg
fdate	CImg.h	/^    inline int fdate(const char *const path, T *attr, const unsigned int nb_attr) {$/;"	f	namespace:cimg_library_suffixed::cimg
_cimg_fdate_err	CImg.h	6984;"	d
fdate	CImg.h	/^    inline int fdate(const char *const path, unsigned int attr) {$/;"	f	namespace:cimg_library_suffixed::cimg
date	CImg.h	/^    inline int date(T *attr, const unsigned int nb_attr) {$/;"	f	namespace:cimg_library_suffixed::cimg
date	CImg.h	/^    inline int date(unsigned int attr) {$/;"	f	namespace:cimg_library_suffixed::cimg
temporary_path	CImg.h	/^    inline const char* temporary_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
programfiles_path	CImg.h	/^    inline const char* programfiles_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
imagemagick_path	CImg.h	/^    inline const char* imagemagick_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
graphicsmagick_path	CImg.h	/^    inline const char* graphicsmagick_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
medcon_path	CImg.h	/^    inline const char* medcon_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
ffmpeg_path	CImg.h	/^    inline const char *ffmpeg_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
gzip_path	CImg.h	/^    inline const char *gzip_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
gunzip_path	CImg.h	/^    inline const char *gunzip_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
dcraw_path	CImg.h	/^    inline const char *dcraw_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
wget_path	CImg.h	/^    inline const char *wget_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
curl_path	CImg.h	/^    inline const char *curl_path(const char *const user_path=0, const bool reinit_path=false);$/;"	p	namespace:cimg_library_suffixed::cimg
split_filename	CImg.h	/^    inline const char *split_filename(const char *const filename, char *const body=0) {$/;"	f	namespace:cimg_library_suffixed::cimg
number_filename	CImg.h	/^    inline char* number_filename(const char *const filename, const int number,$/;"	f	namespace:cimg_library_suffixed::cimg
fread	CImg.h	/^    inline size_t fread(T *const ptr, const size_t nmemb, std::FILE *stream) {$/;"	f	namespace:cimg_library_suffixed::cimg
fwrite	CImg.h	/^    inline size_t fwrite(const T *ptr, const size_t nmemb, std::FILE *stream) {$/;"	f	namespace:cimg_library_suffixed::cimg
fempty	CImg.h	/^    inline void fempty(std::FILE *const file, const char *const filename) {$/;"	f	namespace:cimg_library_suffixed::cimg
ftype	CImg.h	/^    inline const char *ftype(std::FILE *const file, const char *const filename);$/;"	p	namespace:cimg_library_suffixed::cimg
load_network	CImg.h	/^    inline char *load_network(const char *const url, char *const filename_local,$/;"	p	namespace:cimg_library_suffixed::cimg
option	CImg.h	/^    inline const char* option(const char *const name, const int argc, const char *const *const argv,$/;"	f	namespace:cimg_library_suffixed::cimg
option	CImg.h	/^    inline const char* option(const char *const name, const int argc, const char *const *const argv,$/;"	f	namespace:cimg_library_suffixed::cimg
option	CImg.h	/^    inline bool option(const char *const name, const int argc, const char *const *const argv,$/;"	f	namespace:cimg_library_suffixed::cimg
option	CImg.h	/^    inline int option(const char *const name, const int argc, const char *const *const argv,$/;"	f	namespace:cimg_library_suffixed::cimg
option	CImg.h	/^    inline char option(const char *const name, const int argc, const char *const *const argv,$/;"	f	namespace:cimg_library_suffixed::cimg
option	CImg.h	/^    inline float option(const char *const name, const int argc, const char *const *const argv,$/;"	f	namespace:cimg_library_suffixed::cimg
option	CImg.h	/^    inline double option(const char *const name, const int argc, const char *const *const argv,$/;"	f	namespace:cimg_library_suffixed::cimg
info	CImg.h	/^    inline void info() {$/;"	f	namespace:cimg_library_suffixed::cimg
getrf	CImg.h	/^    inline void getrf(int &N, T *lapA, int *IPIV, int &INFO) {$/;"	f	namespace:cimg_library_suffixed::cimg
getrf	CImg.h	/^    inline void getrf(int &N, float *lapA, int *IPIV, int &INFO) {$/;"	f	namespace:cimg_library_suffixed::cimg
getri	CImg.h	/^    inline void getri(int &N, T *lapA, int *IPIV, T* WORK, int &LWORK, int &INFO) {$/;"	f	namespace:cimg_library_suffixed::cimg
getri	CImg.h	/^    inline void getri(int &N, float *lapA, int *IPIV, float* WORK, int &LWORK, int &INFO) {$/;"	f	namespace:cimg_library_suffixed::cimg
gesvd	CImg.h	/^    inline void gesvd(char &JOB, int &M, int &N, T *lapA, int &MN,$/;"	f	namespace:cimg_library_suffixed::cimg
gesvd	CImg.h	/^    inline void gesvd(char &JOB, int &M, int &N, float *lapA, int &MN,$/;"	f	namespace:cimg_library_suffixed::cimg
getrs	CImg.h	/^    inline void getrs(char &TRANS, int &N, T *lapA, int *IPIV, T *lapB, int &INFO) {$/;"	f	namespace:cimg_library_suffixed::cimg
getrs	CImg.h	/^    inline void getrs(char &TRANS, int &N, float *lapA, int *IPIV, float *lapB, int &INFO) {$/;"	f	namespace:cimg_library_suffixed::cimg
syev	CImg.h	/^    inline void syev(char &JOB, char &UPLO, int &N, T *lapA, T *lapW, T *WORK, int &LWORK, int &INFO) {$/;"	f	namespace:cimg_library_suffixed::cimg
syev	CImg.h	/^    inline void syev(char &JOB, char &UPLO, int &N, float *lapA, float *lapW, float *WORK, int &LWORK, int &INFO) {$/;"	f	namespace:cimg_library_suffixed::cimg
sgels	CImg.h	/^    inline void sgels(char & TRANS, int &M, int &N, int &NRHS, T* lapA, int &LDA,$/;"	f	namespace:cimg_library_suffixed::cimg
sgels	CImg.h	/^    inline void sgels(char & TRANS, int &M, int &N, int &NRHS, float* lapA, int &LDA,$/;"	f	namespace:cimg_library_suffixed::cimg
_cimg_create_ext_operators	CImg.h	7556;"	d
operator +	CImg.h	/^  inline CImg<_cimg_Tfloat> operator+(const char *const expression, const CImg<T>& img) {$/;"	f	namespace:cimg_library_suffixed
operator -	CImg.h	/^  inline CImg<_cimg_Tfloat> operator-(const char *const expression, const CImg<T>& img) {$/;"	f	namespace:cimg_library_suffixed
operator *	CImg.h	/^  inline CImg<_cimg_Tfloat> operator*(const char *const expression, const CImg<T>& img) {$/;"	f	namespace:cimg_library_suffixed
operator /	CImg.h	/^  inline CImg<_cimg_Tfloat> operator\/(const char *const expression, const CImg<T>& img) {$/;"	f	namespace:cimg_library_suffixed
operator &	CImg.h	/^  inline CImg<T> operator&(const char *const expression, const CImg<T>& img) {$/;"	f	namespace:cimg_library_suffixed
operator |	CImg.h	/^  inline CImg<T> operator|(const char *const expression, const CImg<T>& img) {$/;"	f	namespace:cimg_library_suffixed
operator ^	CImg.h	/^  inline CImg<T> operator^(const char *const expression, const CImg<T>& img) {$/;"	f	namespace:cimg_library_suffixed
operator ==	CImg.h	/^  inline bool operator==(const char *const expression, const CImg<T>& img) {$/;"	f	namespace:cimg_library_suffixed
operator !=	CImg.h	/^  inline bool operator!=(const char *const expression, const CImg<T>& img) {$/;"	f	namespace:cimg_library_suffixed
transpose	CImg.h	/^  inline CImg<T> transpose(const CImg<T>& instance) {$/;"	f	namespace:cimg_library_suffixed
invert	CImg.h	/^  inline CImg<_cimg_Tfloat> invert(const CImg<T>& instance) {$/;"	f	namespace:cimg_library_suffixed
pseudoinvert	CImg.h	/^  inline CImg<_cimg_Tfloat> pseudoinvert(const CImg<T>& instance) {$/;"	f	namespace:cimg_library_suffixed
_cimg_create_ext_pointwise_function	CImg.h	7669;"	d
CImgDisplay	CImg.h	/^  struct CImgDisplay {$/;"	s	namespace:cimg_library_suffixed
_timer	CImg.h	/^    cimg_ulong _timer, _fps_frames, _fps_timer;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_fps_frames	CImg.h	/^    cimg_ulong _timer, _fps_frames, _fps_timer;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_fps_timer	CImg.h	/^    cimg_ulong _timer, _fps_frames, _fps_timer;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_width	CImg.h	/^    unsigned int _width, _height, _normalization;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_height	CImg.h	/^    unsigned int _width, _height, _normalization;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_normalization	CImg.h	/^    unsigned int _width, _height, _normalization;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_fps_fps	CImg.h	/^    float _fps_fps, _min, _max;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_min	CImg.h	/^    float _fps_fps, _min, _max;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_max	CImg.h	/^    float _fps_fps, _min, _max;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_fullscreen	CImg.h	/^    bool _is_fullscreen;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_title	CImg.h	/^    char *_title;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_window_width	CImg.h	/^    unsigned int _window_width, _window_height, _button, *_keys, *_released_keys;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_window_height	CImg.h	/^    unsigned int _window_width, _window_height, _button, *_keys, *_released_keys;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_button	CImg.h	/^    unsigned int _window_width, _window_height, _button, *_keys, *_released_keys;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_keys	CImg.h	/^    unsigned int _window_width, _window_height, _button, *_keys, *_released_keys;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_released_keys	CImg.h	/^    unsigned int _window_width, _window_height, _button, *_keys, *_released_keys;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_window_x	CImg.h	/^    int _window_x, _window_y, _mouse_x, _mouse_y, _wheel;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_window_y	CImg.h	/^    int _window_x, _window_y, _mouse_x, _mouse_y, _wheel;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_mouse_x	CImg.h	/^    int _window_x, _window_y, _mouse_x, _mouse_y, _wheel;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_mouse_y	CImg.h	/^    int _window_x, _window_y, _mouse_x, _mouse_y, _wheel;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_wheel	CImg.h	/^    int _window_x, _window_y, _mouse_x, _mouse_y, _wheel;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_closed	CImg.h	/^    bool _is_closed, _is_resized, _is_moved, _is_event,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_resized	CImg.h	/^    bool _is_closed, _is_resized, _is_moved, _is_event,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_moved	CImg.h	/^    bool _is_closed, _is_resized, _is_moved, _is_event,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_event	CImg.h	/^    bool _is_closed, _is_resized, _is_moved, _is_event,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyESC	CImg.h	/^      _is_keyESC, _is_keyF1, _is_keyF2, _is_keyF3, _is_keyF4, _is_keyF5, _is_keyF6, _is_keyF7,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF1	CImg.h	/^      _is_keyESC, _is_keyF1, _is_keyF2, _is_keyF3, _is_keyF4, _is_keyF5, _is_keyF6, _is_keyF7,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF2	CImg.h	/^      _is_keyESC, _is_keyF1, _is_keyF2, _is_keyF3, _is_keyF4, _is_keyF5, _is_keyF6, _is_keyF7,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF3	CImg.h	/^      _is_keyESC, _is_keyF1, _is_keyF2, _is_keyF3, _is_keyF4, _is_keyF5, _is_keyF6, _is_keyF7,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF4	CImg.h	/^      _is_keyESC, _is_keyF1, _is_keyF2, _is_keyF3, _is_keyF4, _is_keyF5, _is_keyF6, _is_keyF7,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF5	CImg.h	/^      _is_keyESC, _is_keyF1, _is_keyF2, _is_keyF3, _is_keyF4, _is_keyF5, _is_keyF6, _is_keyF7,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF6	CImg.h	/^      _is_keyESC, _is_keyF1, _is_keyF2, _is_keyF3, _is_keyF4, _is_keyF5, _is_keyF6, _is_keyF7,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF7	CImg.h	/^      _is_keyESC, _is_keyF1, _is_keyF2, _is_keyF3, _is_keyF4, _is_keyF5, _is_keyF6, _is_keyF7,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF8	CImg.h	/^      _is_keyF8, _is_keyF9, _is_keyF10, _is_keyF11, _is_keyF12, _is_keyPAUSE, _is_key1, _is_key2,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF9	CImg.h	/^      _is_keyF8, _is_keyF9, _is_keyF10, _is_keyF11, _is_keyF12, _is_keyPAUSE, _is_key1, _is_key2,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF10	CImg.h	/^      _is_keyF8, _is_keyF9, _is_keyF10, _is_keyF11, _is_keyF12, _is_keyPAUSE, _is_key1, _is_key2,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF11	CImg.h	/^      _is_keyF8, _is_keyF9, _is_keyF10, _is_keyF11, _is_keyF12, _is_keyPAUSE, _is_key1, _is_key2,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF12	CImg.h	/^      _is_keyF8, _is_keyF9, _is_keyF10, _is_keyF11, _is_keyF12, _is_keyPAUSE, _is_key1, _is_key2,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAUSE	CImg.h	/^      _is_keyF8, _is_keyF9, _is_keyF10, _is_keyF11, _is_keyF12, _is_keyPAUSE, _is_key1, _is_key2,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_key1	CImg.h	/^      _is_keyF8, _is_keyF9, _is_keyF10, _is_keyF11, _is_keyF12, _is_keyPAUSE, _is_key1, _is_key2,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_key2	CImg.h	/^      _is_keyF8, _is_keyF9, _is_keyF10, _is_keyF11, _is_keyF12, _is_keyPAUSE, _is_key1, _is_key2,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_key3	CImg.h	/^      _is_key3, _is_key4, _is_key5, _is_key6, _is_key7, _is_key8, _is_key9, _is_key0,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_key4	CImg.h	/^      _is_key3, _is_key4, _is_key5, _is_key6, _is_key7, _is_key8, _is_key9, _is_key0,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_key5	CImg.h	/^      _is_key3, _is_key4, _is_key5, _is_key6, _is_key7, _is_key8, _is_key9, _is_key0,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_key6	CImg.h	/^      _is_key3, _is_key4, _is_key5, _is_key6, _is_key7, _is_key8, _is_key9, _is_key0,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_key7	CImg.h	/^      _is_key3, _is_key4, _is_key5, _is_key6, _is_key7, _is_key8, _is_key9, _is_key0,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_key8	CImg.h	/^      _is_key3, _is_key4, _is_key5, _is_key6, _is_key7, _is_key8, _is_key9, _is_key0,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_key9	CImg.h	/^      _is_key3, _is_key4, _is_key5, _is_key6, _is_key7, _is_key8, _is_key9, _is_key0,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_key0	CImg.h	/^      _is_key3, _is_key4, _is_key5, _is_key6, _is_key7, _is_key8, _is_key9, _is_key0,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyBACKSPACE	CImg.h	/^      _is_keyBACKSPACE, _is_keyINSERT, _is_keyHOME, _is_keyPAGEUP, _is_keyTAB, _is_keyQ, _is_keyW, _is_keyE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyINSERT	CImg.h	/^      _is_keyBACKSPACE, _is_keyINSERT, _is_keyHOME, _is_keyPAGEUP, _is_keyTAB, _is_keyQ, _is_keyW, _is_keyE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyHOME	CImg.h	/^      _is_keyBACKSPACE, _is_keyINSERT, _is_keyHOME, _is_keyPAGEUP, _is_keyTAB, _is_keyQ, _is_keyW, _is_keyE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAGEUP	CImg.h	/^      _is_keyBACKSPACE, _is_keyINSERT, _is_keyHOME, _is_keyPAGEUP, _is_keyTAB, _is_keyQ, _is_keyW, _is_keyE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyTAB	CImg.h	/^      _is_keyBACKSPACE, _is_keyINSERT, _is_keyHOME, _is_keyPAGEUP, _is_keyTAB, _is_keyQ, _is_keyW, _is_keyE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyQ	CImg.h	/^      _is_keyBACKSPACE, _is_keyINSERT, _is_keyHOME, _is_keyPAGEUP, _is_keyTAB, _is_keyQ, _is_keyW, _is_keyE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyW	CImg.h	/^      _is_keyBACKSPACE, _is_keyINSERT, _is_keyHOME, _is_keyPAGEUP, _is_keyTAB, _is_keyQ, _is_keyW, _is_keyE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyE	CImg.h	/^      _is_keyBACKSPACE, _is_keyINSERT, _is_keyHOME, _is_keyPAGEUP, _is_keyTAB, _is_keyQ, _is_keyW, _is_keyE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyR	CImg.h	/^      _is_keyR, _is_keyT, _is_keyY, _is_keyU, _is_keyI, _is_keyO, _is_keyP, _is_keyDELETE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyT	CImg.h	/^      _is_keyR, _is_keyT, _is_keyY, _is_keyU, _is_keyI, _is_keyO, _is_keyP, _is_keyDELETE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyY	CImg.h	/^      _is_keyR, _is_keyT, _is_keyY, _is_keyU, _is_keyI, _is_keyO, _is_keyP, _is_keyDELETE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyU	CImg.h	/^      _is_keyR, _is_keyT, _is_keyY, _is_keyU, _is_keyI, _is_keyO, _is_keyP, _is_keyDELETE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyI	CImg.h	/^      _is_keyR, _is_keyT, _is_keyY, _is_keyU, _is_keyI, _is_keyO, _is_keyP, _is_keyDELETE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyO	CImg.h	/^      _is_keyR, _is_keyT, _is_keyY, _is_keyU, _is_keyI, _is_keyO, _is_keyP, _is_keyDELETE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyP	CImg.h	/^      _is_keyR, _is_keyT, _is_keyY, _is_keyU, _is_keyI, _is_keyO, _is_keyP, _is_keyDELETE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyDELETE	CImg.h	/^      _is_keyR, _is_keyT, _is_keyY, _is_keyU, _is_keyI, _is_keyO, _is_keyP, _is_keyDELETE,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyEND	CImg.h	/^      _is_keyEND, _is_keyPAGEDOWN, _is_keyCAPSLOCK, _is_keyA, _is_keyS, _is_keyD, _is_keyF, _is_keyG,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAGEDOWN	CImg.h	/^      _is_keyEND, _is_keyPAGEDOWN, _is_keyCAPSLOCK, _is_keyA, _is_keyS, _is_keyD, _is_keyF, _is_keyG,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyCAPSLOCK	CImg.h	/^      _is_keyEND, _is_keyPAGEDOWN, _is_keyCAPSLOCK, _is_keyA, _is_keyS, _is_keyD, _is_keyF, _is_keyG,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyA	CImg.h	/^      _is_keyEND, _is_keyPAGEDOWN, _is_keyCAPSLOCK, _is_keyA, _is_keyS, _is_keyD, _is_keyF, _is_keyG,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyS	CImg.h	/^      _is_keyEND, _is_keyPAGEDOWN, _is_keyCAPSLOCK, _is_keyA, _is_keyS, _is_keyD, _is_keyF, _is_keyG,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyD	CImg.h	/^      _is_keyEND, _is_keyPAGEDOWN, _is_keyCAPSLOCK, _is_keyA, _is_keyS, _is_keyD, _is_keyF, _is_keyG,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyF	CImg.h	/^      _is_keyEND, _is_keyPAGEDOWN, _is_keyCAPSLOCK, _is_keyA, _is_keyS, _is_keyD, _is_keyF, _is_keyG,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyG	CImg.h	/^      _is_keyEND, _is_keyPAGEDOWN, _is_keyCAPSLOCK, _is_keyA, _is_keyS, _is_keyD, _is_keyF, _is_keyG,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyH	CImg.h	/^      _is_keyH, _is_keyJ, _is_keyK, _is_keyL, _is_keyENTER, _is_keySHIFTLEFT, _is_keyZ, _is_keyX,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyJ	CImg.h	/^      _is_keyH, _is_keyJ, _is_keyK, _is_keyL, _is_keyENTER, _is_keySHIFTLEFT, _is_keyZ, _is_keyX,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyK	CImg.h	/^      _is_keyH, _is_keyJ, _is_keyK, _is_keyL, _is_keyENTER, _is_keySHIFTLEFT, _is_keyZ, _is_keyX,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyL	CImg.h	/^      _is_keyH, _is_keyJ, _is_keyK, _is_keyL, _is_keyENTER, _is_keySHIFTLEFT, _is_keyZ, _is_keyX,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyENTER	CImg.h	/^      _is_keyH, _is_keyJ, _is_keyK, _is_keyL, _is_keyENTER, _is_keySHIFTLEFT, _is_keyZ, _is_keyX,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keySHIFTLEFT	CImg.h	/^      _is_keyH, _is_keyJ, _is_keyK, _is_keyL, _is_keyENTER, _is_keySHIFTLEFT, _is_keyZ, _is_keyX,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyZ	CImg.h	/^      _is_keyH, _is_keyJ, _is_keyK, _is_keyL, _is_keyENTER, _is_keySHIFTLEFT, _is_keyZ, _is_keyX,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyX	CImg.h	/^      _is_keyH, _is_keyJ, _is_keyK, _is_keyL, _is_keyENTER, _is_keySHIFTLEFT, _is_keyZ, _is_keyX,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyC	CImg.h	/^      _is_keyC, _is_keyV, _is_keyB, _is_keyN, _is_keyM, _is_keySHIFTRIGHT, _is_keyARROWUP, _is_keyCTRLLEFT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyV	CImg.h	/^      _is_keyC, _is_keyV, _is_keyB, _is_keyN, _is_keyM, _is_keySHIFTRIGHT, _is_keyARROWUP, _is_keyCTRLLEFT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyB	CImg.h	/^      _is_keyC, _is_keyV, _is_keyB, _is_keyN, _is_keyM, _is_keySHIFTRIGHT, _is_keyARROWUP, _is_keyCTRLLEFT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyN	CImg.h	/^      _is_keyC, _is_keyV, _is_keyB, _is_keyN, _is_keyM, _is_keySHIFTRIGHT, _is_keyARROWUP, _is_keyCTRLLEFT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyM	CImg.h	/^      _is_keyC, _is_keyV, _is_keyB, _is_keyN, _is_keyM, _is_keySHIFTRIGHT, _is_keyARROWUP, _is_keyCTRLLEFT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keySHIFTRIGHT	CImg.h	/^      _is_keyC, _is_keyV, _is_keyB, _is_keyN, _is_keyM, _is_keySHIFTRIGHT, _is_keyARROWUP, _is_keyCTRLLEFT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyARROWUP	CImg.h	/^      _is_keyC, _is_keyV, _is_keyB, _is_keyN, _is_keyM, _is_keySHIFTRIGHT, _is_keyARROWUP, _is_keyCTRLLEFT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyCTRLLEFT	CImg.h	/^      _is_keyC, _is_keyV, _is_keyB, _is_keyN, _is_keyM, _is_keySHIFTRIGHT, _is_keyARROWUP, _is_keyCTRLLEFT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyAPPLEFT	CImg.h	/^      _is_keyAPPLEFT, _is_keyALT, _is_keySPACE, _is_keyALTGR, _is_keyAPPRIGHT, _is_keyMENU, _is_keyCTRLRIGHT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyALT	CImg.h	/^      _is_keyAPPLEFT, _is_keyALT, _is_keySPACE, _is_keyALTGR, _is_keyAPPRIGHT, _is_keyMENU, _is_keyCTRLRIGHT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keySPACE	CImg.h	/^      _is_keyAPPLEFT, _is_keyALT, _is_keySPACE, _is_keyALTGR, _is_keyAPPRIGHT, _is_keyMENU, _is_keyCTRLRIGHT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyALTGR	CImg.h	/^      _is_keyAPPLEFT, _is_keyALT, _is_keySPACE, _is_keyALTGR, _is_keyAPPRIGHT, _is_keyMENU, _is_keyCTRLRIGHT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyAPPRIGHT	CImg.h	/^      _is_keyAPPLEFT, _is_keyALT, _is_keySPACE, _is_keyALTGR, _is_keyAPPRIGHT, _is_keyMENU, _is_keyCTRLRIGHT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyMENU	CImg.h	/^      _is_keyAPPLEFT, _is_keyALT, _is_keySPACE, _is_keyALTGR, _is_keyAPPRIGHT, _is_keyMENU, _is_keyCTRLRIGHT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyCTRLRIGHT	CImg.h	/^      _is_keyAPPLEFT, _is_keyALT, _is_keySPACE, _is_keyALTGR, _is_keyAPPRIGHT, _is_keyMENU, _is_keyCTRLRIGHT,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyARROWLEFT	CImg.h	/^      _is_keyARROWLEFT, _is_keyARROWDOWN, _is_keyARROWRIGHT, _is_keyPAD0, _is_keyPAD1, _is_keyPAD2, _is_keyPAD3,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyARROWDOWN	CImg.h	/^      _is_keyARROWLEFT, _is_keyARROWDOWN, _is_keyARROWRIGHT, _is_keyPAD0, _is_keyPAD1, _is_keyPAD2, _is_keyPAD3,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyARROWRIGHT	CImg.h	/^      _is_keyARROWLEFT, _is_keyARROWDOWN, _is_keyARROWRIGHT, _is_keyPAD0, _is_keyPAD1, _is_keyPAD2, _is_keyPAD3,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAD0	CImg.h	/^      _is_keyARROWLEFT, _is_keyARROWDOWN, _is_keyARROWRIGHT, _is_keyPAD0, _is_keyPAD1, _is_keyPAD2, _is_keyPAD3,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAD1	CImg.h	/^      _is_keyARROWLEFT, _is_keyARROWDOWN, _is_keyARROWRIGHT, _is_keyPAD0, _is_keyPAD1, _is_keyPAD2, _is_keyPAD3,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAD2	CImg.h	/^      _is_keyARROWLEFT, _is_keyARROWDOWN, _is_keyARROWRIGHT, _is_keyPAD0, _is_keyPAD1, _is_keyPAD2, _is_keyPAD3,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAD3	CImg.h	/^      _is_keyARROWLEFT, _is_keyARROWDOWN, _is_keyARROWRIGHT, _is_keyPAD0, _is_keyPAD1, _is_keyPAD2, _is_keyPAD3,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAD4	CImg.h	/^      _is_keyPAD4, _is_keyPAD5, _is_keyPAD6, _is_keyPAD7, _is_keyPAD8, _is_keyPAD9, _is_keyPADADD, _is_keyPADSUB,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAD5	CImg.h	/^      _is_keyPAD4, _is_keyPAD5, _is_keyPAD6, _is_keyPAD7, _is_keyPAD8, _is_keyPAD9, _is_keyPADADD, _is_keyPADSUB,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAD6	CImg.h	/^      _is_keyPAD4, _is_keyPAD5, _is_keyPAD6, _is_keyPAD7, _is_keyPAD8, _is_keyPAD9, _is_keyPADADD, _is_keyPADSUB,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAD7	CImg.h	/^      _is_keyPAD4, _is_keyPAD5, _is_keyPAD6, _is_keyPAD7, _is_keyPAD8, _is_keyPAD9, _is_keyPADADD, _is_keyPADSUB,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAD8	CImg.h	/^      _is_keyPAD4, _is_keyPAD5, _is_keyPAD6, _is_keyPAD7, _is_keyPAD8, _is_keyPAD9, _is_keyPADADD, _is_keyPADSUB,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPAD9	CImg.h	/^      _is_keyPAD4, _is_keyPAD5, _is_keyPAD6, _is_keyPAD7, _is_keyPAD8, _is_keyPAD9, _is_keyPADADD, _is_keyPADSUB,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPADADD	CImg.h	/^      _is_keyPAD4, _is_keyPAD5, _is_keyPAD6, _is_keyPAD7, _is_keyPAD8, _is_keyPAD9, _is_keyPADADD, _is_keyPADSUB,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPADSUB	CImg.h	/^      _is_keyPAD4, _is_keyPAD5, _is_keyPAD6, _is_keyPAD7, _is_keyPAD8, _is_keyPAD9, _is_keyPADADD, _is_keyPADSUB,$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPADMUL	CImg.h	/^      _is_keyPADMUL, _is_keyPADDIV;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_keyPADDIV	CImg.h	/^      _is_keyPADMUL, _is_keyPADDIV;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
~CImgDisplay	CImg.h	/^    ~CImgDisplay() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
CImgDisplay	CImg.h	/^    CImgDisplay():$/;"	f	struct:cimg_library_suffixed::CImgDisplay
CImgDisplay	CImg.h	/^    CImgDisplay(const unsigned int width, const unsigned int height,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
CImgDisplay	CImg.h	/^    explicit CImgDisplay(const CImg<T>& img,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
CImgDisplay	CImg.h	/^    explicit CImgDisplay(const CImgList<T>& list,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
CImgDisplay	CImg.h	/^    CImgDisplay(const CImgDisplay& disp):$/;"	f	struct:cimg_library_suffixed::CImgDisplay
screenshot	CImg.h	/^    static void screenshot(CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_no_display_exception	CImg.h	/^    static void _no_display_exception() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const unsigned int width, const unsigned int height,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const CImg<T>& img,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const CImgList<T>& list,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const CImgDisplay &disp) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
empty	CImg.h	/^    static CImgDisplay& empty() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
const_empty	CImg.h	/^    static const CImgDisplay& const_empty() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
cimg_fitscreen	CImg.h	7991;"	d
_fitscreen	CImg.h	/^    static unsigned int _fitscreen(const unsigned int dx, const unsigned int dy, const unsigned int dz,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
operator =	CImg.h	/^    CImgDisplay& operator=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
operator =	CImg.h	/^    CImgDisplay& operator=(const CImgList<t>& list) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
operator =	CImg.h	/^    CImgDisplay& operator=(const CImgDisplay& disp) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
operator bool	CImg.h	/^    operator bool() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
is_empty	CImg.h	/^    bool is_empty() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
is_closed	CImg.h	/^    bool is_closed() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
is_resized	CImg.h	/^    bool is_resized() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
is_moved	CImg.h	/^    bool is_moved() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
is_event	CImg.h	/^    bool is_event() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
is_fullscreen	CImg.h	/^    bool is_fullscreen() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
is_key	CImg.h	/^    bool is_key() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
is_key	CImg.h	/^    bool is_key(const unsigned int keycode) const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_test	CImg.h	8156;"	d
is_key	CImg.h	/^    bool& is_key(const char *const keycode) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_test2	CImg.h	8202;"	d
is_key_sequence	CImg.h	/^    bool is_key_sequence(const unsigned int *const keycodes_sequence, const unsigned int length,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	8270;"	d
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(ESC); _cimg_iskey_def(F1); _cimg_iskey_def(F2); _cimg_iskey_def(F3);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(ESC); _cimg_iskey_def(F1); _cimg_iskey_def(F2); _cimg_iskey_def(F3);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(ESC); _cimg_iskey_def(F1); _cimg_iskey_def(F2); _cimg_iskey_def(F3);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(ESC); _cimg_iskey_def(F1); _cimg_iskey_def(F2); _cimg_iskey_def(F3);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F4); _cimg_iskey_def(F5); _cimg_iskey_def(F6); _cimg_iskey_def(F7);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F4); _cimg_iskey_def(F5); _cimg_iskey_def(F6); _cimg_iskey_def(F7);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F4); _cimg_iskey_def(F5); _cimg_iskey_def(F6); _cimg_iskey_def(F7);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F4); _cimg_iskey_def(F5); _cimg_iskey_def(F6); _cimg_iskey_def(F7);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F8); _cimg_iskey_def(F9); _cimg_iskey_def(F10); _cimg_iskey_def(F11);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F8); _cimg_iskey_def(F9); _cimg_iskey_def(F10); _cimg_iskey_def(F11);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F8); _cimg_iskey_def(F9); _cimg_iskey_def(F10); _cimg_iskey_def(F11);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F8); _cimg_iskey_def(F9); _cimg_iskey_def(F10); _cimg_iskey_def(F11);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F12); _cimg_iskey_def(PAUSE); _cimg_iskey_def(1); _cimg_iskey_def(2);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F12); _cimg_iskey_def(PAUSE); _cimg_iskey_def(1); _cimg_iskey_def(2);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(BACKSPACE); _cimg_iskey_def(INSERT); _cimg_iskey_def(HOME);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(BACKSPACE); _cimg_iskey_def(INSERT); _cimg_iskey_def(HOME);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(BACKSPACE); _cimg_iskey_def(INSERT); _cimg_iskey_def(HOME);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAGEUP); _cimg_iskey_def(TAB); _cimg_iskey_def(Q); _cimg_iskey_def(W);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAGEUP); _cimg_iskey_def(TAB); _cimg_iskey_def(Q); _cimg_iskey_def(W);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAGEUP); _cimg_iskey_def(TAB); _cimg_iskey_def(Q); _cimg_iskey_def(W);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAGEUP); _cimg_iskey_def(TAB); _cimg_iskey_def(Q); _cimg_iskey_def(W);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(E); _cimg_iskey_def(R); _cimg_iskey_def(T); _cimg_iskey_def(Y);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(E); _cimg_iskey_def(R); _cimg_iskey_def(T); _cimg_iskey_def(Y);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(E); _cimg_iskey_def(R); _cimg_iskey_def(T); _cimg_iskey_def(Y);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(E); _cimg_iskey_def(R); _cimg_iskey_def(T); _cimg_iskey_def(Y);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(U); _cimg_iskey_def(I); _cimg_iskey_def(O); _cimg_iskey_def(P);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(U); _cimg_iskey_def(I); _cimg_iskey_def(O); _cimg_iskey_def(P);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(U); _cimg_iskey_def(I); _cimg_iskey_def(O); _cimg_iskey_def(P);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(U); _cimg_iskey_def(I); _cimg_iskey_def(O); _cimg_iskey_def(P);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(DELETE); _cimg_iskey_def(END); _cimg_iskey_def(PAGEDOWN);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(DELETE); _cimg_iskey_def(END); _cimg_iskey_def(PAGEDOWN);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(DELETE); _cimg_iskey_def(END); _cimg_iskey_def(PAGEDOWN);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(CAPSLOCK); _cimg_iskey_def(A); _cimg_iskey_def(S); _cimg_iskey_def(D);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(CAPSLOCK); _cimg_iskey_def(A); _cimg_iskey_def(S); _cimg_iskey_def(D);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(CAPSLOCK); _cimg_iskey_def(A); _cimg_iskey_def(S); _cimg_iskey_def(D);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(CAPSLOCK); _cimg_iskey_def(A); _cimg_iskey_def(S); _cimg_iskey_def(D);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F); _cimg_iskey_def(G); _cimg_iskey_def(H); _cimg_iskey_def(J);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F); _cimg_iskey_def(G); _cimg_iskey_def(H); _cimg_iskey_def(J);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F); _cimg_iskey_def(G); _cimg_iskey_def(H); _cimg_iskey_def(J);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(F); _cimg_iskey_def(G); _cimg_iskey_def(H); _cimg_iskey_def(J);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(K); _cimg_iskey_def(L); _cimg_iskey_def(ENTER);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(K); _cimg_iskey_def(L); _cimg_iskey_def(ENTER);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(K); _cimg_iskey_def(L); _cimg_iskey_def(ENTER);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(SHIFTLEFT); _cimg_iskey_def(Z); _cimg_iskey_def(X); _cimg_iskey_def(C);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(SHIFTLEFT); _cimg_iskey_def(Z); _cimg_iskey_def(X); _cimg_iskey_def(C);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(SHIFTLEFT); _cimg_iskey_def(Z); _cimg_iskey_def(X); _cimg_iskey_def(C);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(SHIFTLEFT); _cimg_iskey_def(Z); _cimg_iskey_def(X); _cimg_iskey_def(C);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(V); _cimg_iskey_def(B); _cimg_iskey_def(N); _cimg_iskey_def(M);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(V); _cimg_iskey_def(B); _cimg_iskey_def(N); _cimg_iskey_def(M);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(V); _cimg_iskey_def(B); _cimg_iskey_def(N); _cimg_iskey_def(M);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(V); _cimg_iskey_def(B); _cimg_iskey_def(N); _cimg_iskey_def(M);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(SHIFTRIGHT); _cimg_iskey_def(ARROWUP); _cimg_iskey_def(CTRLLEFT);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(SHIFTRIGHT); _cimg_iskey_def(ARROWUP); _cimg_iskey_def(CTRLLEFT);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(SHIFTRIGHT); _cimg_iskey_def(ARROWUP); _cimg_iskey_def(CTRLLEFT);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(APPLEFT); _cimg_iskey_def(ALT); _cimg_iskey_def(SPACE); _cimg_iskey_def(ALTGR);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(APPLEFT); _cimg_iskey_def(ALT); _cimg_iskey_def(SPACE); _cimg_iskey_def(ALTGR);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(APPLEFT); _cimg_iskey_def(ALT); _cimg_iskey_def(SPACE); _cimg_iskey_def(ALTGR);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(APPLEFT); _cimg_iskey_def(ALT); _cimg_iskey_def(SPACE); _cimg_iskey_def(ALTGR);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(APPRIGHT); _cimg_iskey_def(MENU); _cimg_iskey_def(CTRLRIGHT);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(APPRIGHT); _cimg_iskey_def(MENU); _cimg_iskey_def(CTRLRIGHT);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(APPRIGHT); _cimg_iskey_def(MENU); _cimg_iskey_def(CTRLRIGHT);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(ARROWLEFT); _cimg_iskey_def(ARROWDOWN); _cimg_iskey_def(ARROWRIGHT);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(ARROWLEFT); _cimg_iskey_def(ARROWDOWN); _cimg_iskey_def(ARROWRIGHT);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(ARROWLEFT); _cimg_iskey_def(ARROWDOWN); _cimg_iskey_def(ARROWRIGHT);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD0); _cimg_iskey_def(PAD1); _cimg_iskey_def(PAD2);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD0); _cimg_iskey_def(PAD1); _cimg_iskey_def(PAD2);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD0); _cimg_iskey_def(PAD1); _cimg_iskey_def(PAD2);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD3); _cimg_iskey_def(PAD4); _cimg_iskey_def(PAD5);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD3); _cimg_iskey_def(PAD4); _cimg_iskey_def(PAD5);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD3); _cimg_iskey_def(PAD4); _cimg_iskey_def(PAD5);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD6); _cimg_iskey_def(PAD7); _cimg_iskey_def(PAD8);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD6); _cimg_iskey_def(PAD7); _cimg_iskey_def(PAD8);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD6); _cimg_iskey_def(PAD7); _cimg_iskey_def(PAD8);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD9); _cimg_iskey_def(PADADD); _cimg_iskey_def(PADSUB);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD9); _cimg_iskey_def(PADADD); _cimg_iskey_def(PADSUB);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PAD9); _cimg_iskey_def(PADADD); _cimg_iskey_def(PADSUB);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PADMUL); _cimg_iskey_def(PADDIV);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
_cimg_iskey_def	CImg.h	/^    _cimg_iskey_def(PADMUL); _cimg_iskey_def(PADDIV);$/;"	p	struct:cimg_library_suffixed::CImgDisplay
screen_width	CImg.h	/^    static int screen_width() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
screen_height	CImg.h	/^    static int screen_height() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
width	CImg.h	/^    int width() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
height	CImg.h	/^    int height() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
normalization	CImg.h	/^    unsigned int normalization() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
title	CImg.h	/^    const char *title() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
window_width	CImg.h	/^    int window_width() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
window_height	CImg.h	/^    int window_height() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
window_x	CImg.h	/^    int window_x() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
window_y	CImg.h	/^    int window_y() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
mouse_x	CImg.h	/^    int mouse_x() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
mouse_y	CImg.h	/^    int mouse_y() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
button	CImg.h	/^    unsigned int button() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wheel	CImg.h	/^    int wheel() const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
key	CImg.h	/^    unsigned int key(const unsigned int pos=0) const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
released_key	CImg.h	/^    unsigned int released_key(const unsigned int pos=0) const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
keycode	CImg.h	/^    static unsigned int keycode(const char *const keycode) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_cimg_keycode	CImg.h	8543;"	d
frames_per_second	CImg.h	/^    float frames_per_second() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
display	CImg.h	/^    CImgDisplay& display(const CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
display	CImg.h	/^    CImgDisplay& display(const CImgList<T>& list, const char axis='x', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
show	CImg.h	/^    CImgDisplay& show() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
close	CImg.h	/^    CImgDisplay& close() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
move	CImg.h	/^    CImgDisplay& move(const int pos_x, const int pos_y) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
resize	CImg.h	/^    CImgDisplay& resize(const bool force_redraw=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
resize	CImg.h	/^    CImgDisplay& resize(const int width, const int height, const bool force_redraw=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
resize	CImg.h	/^    CImgDisplay& resize(const CImg<T>& img, const bool force_redraw=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
resize	CImg.h	/^    CImgDisplay& resize(const CImgDisplay& disp, const bool force_redraw=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_render_resize	CImg.h	/^    static void _render_resize(const T *ptrs, const unsigned int ws, const unsigned int hs,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_normalization	CImg.h	/^    CImgDisplay& set_normalization(const unsigned int normalization) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_title	CImg.h	/^    CImgDisplay& set_title(const char *const format, ...) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_fullscreen	CImg.h	/^    CImgDisplay& set_fullscreen(const bool is_fullscreen, const bool force_redraw=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
toggle_fullscreen	CImg.h	/^    CImgDisplay& toggle_fullscreen(const bool force_redraw=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
show_mouse	CImg.h	/^    CImgDisplay& show_mouse() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
hide_mouse	CImg.h	/^    CImgDisplay& hide_mouse() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_mouse	CImg.h	/^    CImgDisplay& set_mouse(const int pos_x, const int pos_y) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_button	CImg.h	/^    CImgDisplay& set_button() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_button	CImg.h	/^    CImgDisplay& set_button(const unsigned int button, const bool is_pressed=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_wheel	CImg.h	/^    CImgDisplay& set_wheel() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_wheel	CImg.h	/^    CImgDisplay& set_wheel(const int amplitude) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_key	CImg.h	/^    CImgDisplay& set_key() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_key	CImg.h	/^    CImgDisplay& set_key(const unsigned int keycode, const bool is_pressed=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_cimg_set_key	CImg.h	8958;"	d
flush	CImg.h	/^    CImgDisplay& flush() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    CImgDisplay& wait() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    CImgDisplay& wait(const unsigned int milliseconds) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    static void wait(CImgDisplay& disp1) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    static void wait(CImgDisplay& disp1, CImgDisplay& disp2) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    static void wait(CImgDisplay& disp1, CImgDisplay& disp2, CImgDisplay& disp3) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    static void wait(CImgDisplay& disp1, CImgDisplay& disp2, CImgDisplay& disp3, CImgDisplay& disp4) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    static void wait(CImgDisplay& disp1, CImgDisplay& disp2, CImgDisplay& disp3, CImgDisplay& disp4,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    static void wait(CImgDisplay& disp1, CImgDisplay& disp2, CImgDisplay& disp3, CImgDisplay& disp4, CImgDisplay& disp5,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    static void wait(CImgDisplay& disp1, CImgDisplay& disp2, CImgDisplay& disp3, CImgDisplay& disp4, CImgDisplay& disp5,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    static void wait(CImgDisplay& disp1, CImgDisplay& disp2, CImgDisplay& disp3, CImgDisplay& disp4, CImgDisplay& disp5,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    static void wait(CImgDisplay& disp1, CImgDisplay& disp2, CImgDisplay& disp3, CImgDisplay& disp4, CImgDisplay& disp5,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait	CImg.h	/^    static void wait(CImgDisplay& disp1, CImgDisplay& disp2, CImgDisplay& disp3, CImgDisplay& disp4, CImgDisplay& disp5,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait_all	CImg.h	/^    static void wait_all() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
render	CImg.h	/^    CImgDisplay& render(const CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
paint	CImg.h	/^    CImgDisplay& paint() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
screenshot	CImg.h	/^    static void screenshot(const int x0, const int y0, const int x1, const int y1, CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
snapshot	CImg.h	/^    const CImgDisplay& snapshot(CImg<T>& img) const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_wm_window_atom	CImg.h	/^    Atom _wm_window_atom, _wm_protocol_atom;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_wm_protocol_atom	CImg.h	/^    Atom _wm_window_atom, _wm_protocol_atom;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_window	CImg.h	/^    Window _window, _background_window;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_background_window	CImg.h	/^    Window _window, _background_window;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_colormap	CImg.h	/^    Colormap _colormap;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_image	CImg.h	/^    XImage *_image;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_data	CImg.h	/^    void *_data;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_shminfo	CImg.h	/^    XShmSegmentInfo *_shminfo;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
screen_width	CImg.h	/^    static int screen_width() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
screen_height	CImg.h	/^    static int screen_height() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait_all	CImg.h	/^    static void wait_all() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_handle_events	CImg.h	/^    void _handle_events(const XEvent *const pevent) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_events_thread	CImg.h	/^    static void* _events_thread(void *arg) { \/\/ Thread to manage events for all opened display windows.$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_set_colormap	CImg.h	/^    void _set_colormap(Colormap& _colormap, const unsigned int dim) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_map_window	CImg.h	/^    void _map_window() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_paint	CImg.h	/^    void _paint(const bool wait_expose=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_resize	CImg.h	/^    void _resize(T pixel_type, const unsigned int ndimx, const unsigned int ndimy, const bool force_redraw) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_init_fullscreen	CImg.h	/^    void _init_fullscreen() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_desinit_fullscreen	CImg.h	/^    void _desinit_fullscreen() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_assign_xshm	CImg.h	/^    static int _assign_xshm(Display *dpy, XErrorEvent *error) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_assign	CImg.h	/^    void _assign(const unsigned int dimw, const unsigned int dimh, const char *const ptitle=0,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const unsigned int dimw, const unsigned int dimh, const char *const title=0,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const CImg<T>& img, const char *const title=0,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const CImgList<T>& list, const char *const title=0,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const CImgDisplay& disp) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
resize	CImg.h	/^    CImgDisplay& resize(const int nwidth, const int nheight, const bool force_redraw=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
toggle_fullscreen	CImg.h	/^    CImgDisplay& toggle_fullscreen(const bool force_redraw=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
show	CImg.h	/^    CImgDisplay& show() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
close	CImg.h	/^    CImgDisplay& close() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
move	CImg.h	/^    CImgDisplay& move(const int posx, const int posy) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
show_mouse	CImg.h	/^    CImgDisplay& show_mouse() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
hide_mouse	CImg.h	/^    CImgDisplay& hide_mouse() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_mouse	CImg.h	/^    CImgDisplay& set_mouse(const int posx, const int posy) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_title	CImg.h	/^    CImgDisplay& set_title(const char *const format, ...) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
display	CImg.h	/^    CImgDisplay& display(const CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
paint	CImg.h	/^    CImgDisplay& paint(const bool wait_expose=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
render	CImg.h	/^    CImgDisplay& render(const CImg<T>& img, const bool flag8=false) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
screenshot	CImg.h	/^    static void screenshot(const int x0, const int y0, const int x1, const int y1, CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
snapshot	CImg.h	/^    const CImgDisplay& snapshot(CImg<T>& img) const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_is_mouse_tracked	CImg.h	/^    bool _is_mouse_tracked, _is_cursor_visible;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_cursor_visible	CImg.h	/^    bool _is_mouse_tracked, _is_cursor_visible;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_thread	CImg.h	/^    HANDLE _thread, _is_created, _mutex;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_is_created	CImg.h	/^    HANDLE _thread, _is_created, _mutex;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_mutex	CImg.h	/^    HANDLE _thread, _is_created, _mutex;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_window	CImg.h	/^    HWND _window, _background_window;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_background_window	CImg.h	/^    HWND _window, _background_window;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_ccs	CImg.h	/^    CLIENTCREATESTRUCT _ccs;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_data	CImg.h	/^    unsigned int *_data;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_curr_mode	CImg.h	/^    DEVMODE _curr_mode;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_bmi	CImg.h	/^    BITMAPINFO _bmi;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
_hdc	CImg.h	/^    HDC _hdc;$/;"	m	struct:cimg_library_suffixed::CImgDisplay
screen_width	CImg.h	/^    static int screen_width() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
screen_height	CImg.h	/^    static int screen_height() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
wait_all	CImg.h	/^    static void wait_all() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_handle_events	CImg.h	/^    static LRESULT APIENTRY _handle_events(HWND window, UINT msg, WPARAM wParam, LPARAM lParam) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_events_thread	CImg.h	/^    static DWORD WINAPI _events_thread(void* arg) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_update_window_pos	CImg.h	/^    CImgDisplay& _update_window_pos() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_init_fullscreen	CImg.h	/^    void _init_fullscreen() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_desinit_fullscreen	CImg.h	/^    void _desinit_fullscreen() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
_assign	CImg.h	/^    CImgDisplay& _assign(const unsigned int dimw, const unsigned int dimh, const char *const ptitle=0,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const unsigned int dimw, const unsigned int dimh, const char *const title=0,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const CImg<T>& img, const char *const title=0,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const CImgList<T>& list, const char *const title=0,$/;"	f	struct:cimg_library_suffixed::CImgDisplay
assign	CImg.h	/^    CImgDisplay& assign(const CImgDisplay& disp) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
resize	CImg.h	/^    CImgDisplay& resize(const int nwidth, const int nheight, const bool force_redraw=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
toggle_fullscreen	CImg.h	/^    CImgDisplay& toggle_fullscreen(const bool force_redraw=true) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
show	CImg.h	/^    CImgDisplay& show() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
close	CImg.h	/^    CImgDisplay& close() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
move	CImg.h	/^    CImgDisplay& move(const int posx, const int posy) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
show_mouse	CImg.h	/^    CImgDisplay& show_mouse() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
hide_mouse	CImg.h	/^    CImgDisplay& hide_mouse() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_mouse	CImg.h	/^    CImgDisplay& set_mouse(const int posx, const int posy) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
set_title	CImg.h	/^    CImgDisplay& set_title(const char *const format, ...) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
display	CImg.h	/^    CImgDisplay& display(const CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
paint	CImg.h	/^    CImgDisplay& paint() {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
render	CImg.h	/^    CImgDisplay& render(const CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
screenshot	CImg.h	/^    static void screenshot(const int x0, const int y0, const int x1, const int y1, CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
snapshot	CImg.h	/^    const CImgDisplay& snapshot(CImg<T>& img) const {$/;"	f	struct:cimg_library_suffixed::CImgDisplay
CImg	CImg.h	/^  struct CImg {$/;"	s	namespace:cimg_library_suffixed
_width	CImg.h	/^    unsigned int _width, _height, _depth, _spectrum;$/;"	m	struct:cimg_library_suffixed::CImg
_height	CImg.h	/^    unsigned int _width, _height, _depth, _spectrum;$/;"	m	struct:cimg_library_suffixed::CImg
_depth	CImg.h	/^    unsigned int _width, _height, _depth, _spectrum;$/;"	m	struct:cimg_library_suffixed::CImg
_spectrum	CImg.h	/^    unsigned int _width, _height, _depth, _spectrum;$/;"	m	struct:cimg_library_suffixed::CImg
_is_shared	CImg.h	/^    bool _is_shared;$/;"	m	struct:cimg_library_suffixed::CImg
_data	CImg.h	/^    T *_data;$/;"	m	struct:cimg_library_suffixed::CImg
iterator	CImg.h	/^    typedef T* iterator;$/;"	t	struct:cimg_library_suffixed::CImg
const_iterator	CImg.h	/^    typedef const T* const_iterator;$/;"	t	struct:cimg_library_suffixed::CImg
value_type	CImg.h	/^    typedef T value_type;$/;"	t	struct:cimg_library_suffixed::CImg
Tbool	CImg.h	/^    typedef typename cimg::superset<T,bool>::type Tbool;$/;"	t	struct:cimg_library_suffixed::CImg
Tuchar	CImg.h	/^    typedef typename cimg::superset<T,unsigned char>::type Tuchar;$/;"	t	struct:cimg_library_suffixed::CImg
Tchar	CImg.h	/^    typedef typename cimg::superset<T,char>::type Tchar;$/;"	t	struct:cimg_library_suffixed::CImg
Tushort	CImg.h	/^    typedef typename cimg::superset<T,unsigned short>::type Tushort;$/;"	t	struct:cimg_library_suffixed::CImg
Tshort	CImg.h	/^    typedef typename cimg::superset<T,short>::type Tshort;$/;"	t	struct:cimg_library_suffixed::CImg
Tuint	CImg.h	/^    typedef typename cimg::superset<T,unsigned int>::type Tuint;$/;"	t	struct:cimg_library_suffixed::CImg
Tint	CImg.h	/^    typedef typename cimg::superset<T,int>::type Tint;$/;"	t	struct:cimg_library_suffixed::CImg
Tulong	CImg.h	/^    typedef typename cimg::superset<T,cimg_ulong>::type Tulong;$/;"	t	struct:cimg_library_suffixed::CImg
Tlong	CImg.h	/^    typedef typename cimg::superset<T,cimg_long>::type Tlong;$/;"	t	struct:cimg_library_suffixed::CImg
Tfloat	CImg.h	/^    typedef typename cimg::superset<T,float>::type Tfloat;$/;"	t	struct:cimg_library_suffixed::CImg
Tdouble	CImg.h	/^    typedef typename cimg::superset<T,double>::type Tdouble;$/;"	t	struct:cimg_library_suffixed::CImg
boolT	CImg.h	/^    typedef typename cimg::last<T,bool>::type boolT;$/;"	t	struct:cimg_library_suffixed::CImg
ucharT	CImg.h	/^    typedef typename cimg::last<T,unsigned char>::type ucharT;$/;"	t	struct:cimg_library_suffixed::CImg
charT	CImg.h	/^    typedef typename cimg::last<T,char>::type charT;$/;"	t	struct:cimg_library_suffixed::CImg
ushortT	CImg.h	/^    typedef typename cimg::last<T,unsigned short>::type ushortT;$/;"	t	struct:cimg_library_suffixed::CImg
shortT	CImg.h	/^    typedef typename cimg::last<T,short>::type shortT;$/;"	t	struct:cimg_library_suffixed::CImg
uintT	CImg.h	/^    typedef typename cimg::last<T,unsigned int>::type uintT;$/;"	t	struct:cimg_library_suffixed::CImg
intT	CImg.h	/^    typedef typename cimg::last<T,int>::type intT;$/;"	t	struct:cimg_library_suffixed::CImg
ulongT	CImg.h	/^    typedef typename cimg::last<T,cimg_ulong>::type ulongT;$/;"	t	struct:cimg_library_suffixed::CImg
longT	CImg.h	/^    typedef typename cimg::last<T,cimg_long>::type longT;$/;"	t	struct:cimg_library_suffixed::CImg
uint64T	CImg.h	/^    typedef typename cimg::last<T,cimg_uint64>::type uint64T;$/;"	t	struct:cimg_library_suffixed::CImg
int64T	CImg.h	/^    typedef typename cimg::last<T,cimg_int64>::type int64T;$/;"	t	struct:cimg_library_suffixed::CImg
floatT	CImg.h	/^    typedef typename cimg::last<T,float>::type floatT;$/;"	t	struct:cimg_library_suffixed::CImg
doubleT	CImg.h	/^    typedef typename cimg::last<T,double>::type doubleT;$/;"	t	struct:cimg_library_suffixed::CImg
~CImg	CImg.h	/^    ~CImg() {$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg():_width(0),_height(0),_depth(0),_spectrum(0),_is_shared(false),_data(0) {}$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    explicit CImg(const unsigned int size_x, const unsigned int size_y=1,$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const unsigned int size_x, const unsigned int size_y,$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const unsigned int size_x, const unsigned int size_y, const unsigned int size_z, const unsigned int size_c,$/;"	f	struct:cimg_library_suffixed::CImg
_CImg_stdarg	CImg.h	11537;"	d
CImg	CImg.h	/^    CImg(const unsigned int size_x, const unsigned int size_y, const unsigned int size_z, const unsigned int size_c,$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_constructor_cpp11	CImg.h	11586;"	d
CImg	CImg.h	/^    CImg(const unsigned int size_x, const unsigned int size_y, const unsigned int size_z,$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const unsigned int size_x, const unsigned int size_y,$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const unsigned int size_x,$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const std::initializer_list<t> values):$/;"	f	struct:cimg_library_suffixed::CImg
operator =	CImg.h	/^    CImg<T> & operator=(std::initializer_list<t> values) {$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const unsigned int size_x, const unsigned int size_y, const unsigned int size_z, const unsigned int size_c,$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const unsigned int size_x, const unsigned int size_y, const unsigned int size_z, const unsigned int size_c,$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const t *const values, const unsigned int size_x, const unsigned int size_y=1,$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const T *const values, const unsigned int size_x, const unsigned int size_y=1,$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    explicit CImg(const char *const filename):_width(0),_height(0),_depth(0),_spectrum(0),_is_shared(false),_data(0) {$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const CImg<t>& img):_is_shared(false) {$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const CImg<t>& img, const bool is_shared):_is_shared(false) {$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const CImg<T>& img, const bool is_shared) {$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const CImg<t>& img, const char *const dimensions):$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(const CImg<t>& img, const char *const dimensions, const T& value):$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    explicit CImg(const CImgDisplay &disp):_width(0),_height(0),_depth(0),_spectrum(0),_is_shared(false),_data(0) {$/;"	f	struct:cimg_library_suffixed::CImg
CImg	CImg.h	/^    CImg(CImg<T>&& img):_width(0),_height(0),_depth(0),_spectrum(0),_is_shared(false),_data(0) {$/;"	f	struct:cimg_library_suffixed::CImg
operator =	CImg.h	/^    CImg<T>& operator=(CImg<T>&& img) {$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign() {$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const unsigned int size_x, const unsigned int size_y=1,$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const unsigned int size_x, const unsigned int size_y,$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const unsigned int size_x, const unsigned int size_y,$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const unsigned int size_x, const unsigned int size_y,$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const unsigned int size_x, const unsigned int size_y,$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const t *const values, const unsigned int size_x, const unsigned int size_y=1,$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const T *const values, const unsigned int size_x, const unsigned int size_y=1,$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const t *const values, const unsigned int size_x, const unsigned int size_y,$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const T *const values, const unsigned int size_x, const unsigned int size_y,$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const CImg<t>& img, const bool is_shared) {$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const CImg<t>& img, const char *const dimensions) {$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const CImg<t>& img, const char *const dimensions, const T& value) {$/;"	f	struct:cimg_library_suffixed::CImg
assign	CImg.h	/^    CImg<T>& assign(const CImgDisplay &disp) {$/;"	f	struct:cimg_library_suffixed::CImg
clear	CImg.h	/^    CImg<T>& clear() {$/;"	f	struct:cimg_library_suffixed::CImg
move_to	CImg.h	/^    CImg<t>& move_to(CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
move_to	CImg.h	/^    CImg<T>& move_to(CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
move_to	CImg.h	/^    CImgList<t>& move_to(CImgList<t>& list, const unsigned int pos=~0U) {$/;"	f	struct:cimg_library_suffixed::CImg
swap	CImg.h	/^    CImg<T>& swap(CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
empty	CImg.h	/^    static CImg<T>& empty() {$/;"	f	struct:cimg_library_suffixed::CImg
const_empty	CImg.h	/^    static const CImg<T>& const_empty() {$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    T& operator()(const unsigned int x, const unsigned int y=0,$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    const T& operator()(const unsigned int x, const unsigned int y=0,$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    T& operator()(const unsigned int x, const unsigned int y, const unsigned int z, const unsigned int c,$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    const T& operator()(const unsigned int x, const unsigned int y, const unsigned int z, const unsigned int c,$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    T& operator()(const unsigned int x) {$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    const T& operator()(const unsigned int x) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    T& operator()(const unsigned int x, const unsigned int y) {$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    const T& operator()(const unsigned int x, const unsigned int y) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    T& operator()(const unsigned int x, const unsigned int y, const unsigned int z) {$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    const T& operator()(const unsigned int x, const unsigned int y, const unsigned int z) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    T& operator()(const unsigned int x, const unsigned int y, const unsigned int z, const unsigned int c) {$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    const T& operator()(const unsigned int x, const unsigned int y, const unsigned int z, const unsigned int c) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    T& operator()(const unsigned int x, const unsigned int y, const unsigned int z, const unsigned int,$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    const T& operator()(const unsigned int x, const unsigned int y, const unsigned int z, const unsigned int,$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    T& operator()(const unsigned int x, const unsigned int y, const unsigned int z, const unsigned int c,$/;"	f	struct:cimg_library_suffixed::CImg
operator ()	CImg.h	/^    const T& operator()(const unsigned int x, const unsigned int y, const unsigned int z, const unsigned int c,$/;"	f	struct:cimg_library_suffixed::CImg
operator T*	CImg.h	/^    operator T*() {$/;"	f	struct:cimg_library_suffixed::CImg
operator const T*	CImg.h	/^    operator const T*() const {$/;"	f	struct:cimg_library_suffixed::CImg
operator =	CImg.h	/^    CImg<T>& operator=(const T& value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator =	CImg.h	/^    CImg<T>& operator=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator =	CImg.h	/^    CImg<T>& operator=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator =	CImg.h	/^    CImg<T>& operator=(const CImg<T>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator =	CImg.h	/^    CImg<T>& operator=(const CImgDisplay& disp) {$/;"	f	struct:cimg_library_suffixed::CImg
operator +=	CImg.h	/^    CImg<T>& operator+=(const t value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator +=	CImg.h	/^    CImg<T>& operator+=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator +=	CImg.h	/^    CImg<T>& operator+=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator ++	CImg.h	/^    CImg<T>& operator++() {$/;"	f	struct:cimg_library_suffixed::CImg
operator ++	CImg.h	/^    CImg<T> operator++(int) {$/;"	f	struct:cimg_library_suffixed::CImg
operator +	CImg.h	/^    CImg<T> operator+() const {$/;"	f	struct:cimg_library_suffixed::CImg
operator +	CImg.h	/^    CImg<_cimg_Tt> operator+(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator +	CImg.h	/^    CImg<Tfloat> operator+(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator +	CImg.h	/^    CImg<_cimg_Tt> operator+(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator -=	CImg.h	/^    CImg<T>& operator-=(const t value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator -=	CImg.h	/^    CImg<T>& operator-=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator -=	CImg.h	/^    CImg<T>& operator-=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator --	CImg.h	/^    CImg<T>& operator--() {$/;"	f	struct:cimg_library_suffixed::CImg
operator --	CImg.h	/^    CImg<T> operator--(int) {$/;"	f	struct:cimg_library_suffixed::CImg
operator -	CImg.h	/^    CImg<T> operator-() const {$/;"	f	struct:cimg_library_suffixed::CImg
operator -	CImg.h	/^    CImg<_cimg_Tt> operator-(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator -	CImg.h	/^    CImg<Tfloat> operator-(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator -	CImg.h	/^    CImg<_cimg_Tt> operator-(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator *=	CImg.h	/^    CImg<T>& operator*=(const t value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator *=	CImg.h	/^    CImg<T>& operator*=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator *=	CImg.h	/^    CImg<T>& operator*=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator *	CImg.h	/^    CImg<_cimg_Tt> operator*(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator *	CImg.h	/^    CImg<Tfloat> operator*(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator *	CImg.h	/^    CImg<_cimg_Tt> operator*(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator /=	CImg.h	/^    CImg<T>& operator\/=(const t value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator /=	CImg.h	/^    CImg<T>& operator\/=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator /=	CImg.h	/^    CImg<T>& operator\/=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator /	CImg.h	/^    CImg<_cimg_Tt> operator\/(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator /	CImg.h	/^    CImg<Tfloat> operator\/(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator /	CImg.h	/^    CImg<_cimg_Tt> operator\/(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator %=	CImg.h	/^    CImg<T>& operator%=(const t value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator %=	CImg.h	/^    CImg<T>& operator%=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator %=	CImg.h	/^    CImg<T>& operator%=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator %	CImg.h	/^    CImg<_cimg_Tt> operator%(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator %	CImg.h	/^    CImg<Tfloat> operator%(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator %	CImg.h	/^    CImg<_cimg_Tt> operator%(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator &=	CImg.h	/^    CImg<T>& operator&=(const t value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator &=	CImg.h	/^    CImg<T>& operator&=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator &=	CImg.h	/^    CImg<T>& operator&=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator &	CImg.h	/^    CImg<T> operator&(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator &	CImg.h	/^    CImg<T> operator&(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator &	CImg.h	/^    CImg<T> operator&(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator |=	CImg.h	/^    CImg<T>& operator|=(const t value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator |=	CImg.h	/^    CImg<T>& operator|=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator |=	CImg.h	/^    CImg<T>& operator|=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator |	CImg.h	/^    CImg<T> operator|(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator |	CImg.h	/^    CImg<T> operator|(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator |	CImg.h	/^    CImg<T> operator|(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ^=	CImg.h	/^    CImg<T>& operator^=(const t value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator ^=	CImg.h	/^    CImg<T>& operator^=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator ^=	CImg.h	/^    CImg<T>& operator^=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator ^	CImg.h	/^    CImg<T> operator^(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ^	CImg.h	/^    CImg<T> operator^(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ^	CImg.h	/^    CImg<T> operator^(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator <<=	CImg.h	/^    CImg<T>& operator<<=(const t value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator <<=	CImg.h	/^    CImg<T>& operator<<=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator <<=	CImg.h	/^    CImg<T>& operator<<=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator <<	CImg.h	/^    CImg<T> operator<<(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator <<	CImg.h	/^    CImg<T> operator<<(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator <<	CImg.h	/^    CImg<T> operator<<(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator >>=	CImg.h	/^    CImg<T>& operator>>=(const t value) {$/;"	f	struct:cimg_library_suffixed::CImg
operator >>=	CImg.h	/^    CImg<T>& operator>>=(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
operator >>=	CImg.h	/^    CImg<T>& operator>>=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
operator >>	CImg.h	/^    CImg<T> operator>>(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator >>	CImg.h	/^    CImg<T> operator>>(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator >>	CImg.h	/^    CImg<T> operator>>(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ~	CImg.h	/^    CImg<T> operator~() const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ==	CImg.h	/^    bool operator==(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ==	CImg.h	/^    bool operator==(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ==	CImg.h	/^    bool operator==(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator !=	CImg.h	/^    bool operator!=(const t value) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator !=	CImg.h	/^    bool operator!=(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator !=	CImg.h	/^    bool operator!=(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ,	CImg.h	/^    CImgList<_cimg_Tt> operator,(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator ,	CImg.h	/^    CImgList<_cimg_Tt> operator,(const CImgList<t>& list) const {$/;"	f	struct:cimg_library_suffixed::CImg
operator <	CImg.h	/^    CImgList<T> operator<(const char axis) const {$/;"	f	struct:cimg_library_suffixed::CImg
pixel_type	CImg.h	/^    static const char* pixel_type() {$/;"	f	struct:cimg_library_suffixed::CImg
width	CImg.h	/^    int width() const {$/;"	f	struct:cimg_library_suffixed::CImg
height	CImg.h	/^    int height() const {$/;"	f	struct:cimg_library_suffixed::CImg
depth	CImg.h	/^    int depth() const {$/;"	f	struct:cimg_library_suffixed::CImg
spectrum	CImg.h	/^    int spectrum() const {$/;"	f	struct:cimg_library_suffixed::CImg
size	CImg.h	/^    ulongT size() const {$/;"	f	struct:cimg_library_suffixed::CImg
data	CImg.h	/^    T* data() {$/;"	f	struct:cimg_library_suffixed::CImg
data	CImg.h	/^    const T* data() const {$/;"	f	struct:cimg_library_suffixed::CImg
data	CImg.h	/^    T *data(const unsigned int x, const unsigned int y=0, const unsigned int z=0, const unsigned int c=0) {$/;"	f	struct:cimg_library_suffixed::CImg
data	CImg.h	/^    const T* data(const unsigned int x, const unsigned int y=0, const unsigned int z=0, const unsigned int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
data	CImg.h	/^    T* data(const unsigned int x, const unsigned int y=0, const unsigned int z=0, const unsigned int c=0) {$/;"	f	struct:cimg_library_suffixed::CImg
data	CImg.h	/^    const T* data(const unsigned int x, const unsigned int y=0, const unsigned int z=0, const unsigned int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
offset	CImg.h	/^    longT offset(const int x, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
begin	CImg.h	/^    iterator begin() {$/;"	f	struct:cimg_library_suffixed::CImg
begin	CImg.h	/^    const_iterator begin() const {$/;"	f	struct:cimg_library_suffixed::CImg
end	CImg.h	/^    iterator end() {$/;"	f	struct:cimg_library_suffixed::CImg
end	CImg.h	/^    const_iterator end() const {$/;"	f	struct:cimg_library_suffixed::CImg
front	CImg.h	/^    T& front() {$/;"	f	struct:cimg_library_suffixed::CImg
front	CImg.h	/^    const T& front() const {$/;"	f	struct:cimg_library_suffixed::CImg
back	CImg.h	/^    T& back() {$/;"	f	struct:cimg_library_suffixed::CImg
back	CImg.h	/^    const T& back() const {$/;"	f	struct:cimg_library_suffixed::CImg
at	CImg.h	/^    T& at(const int offset, const T& out_value) {$/;"	f	struct:cimg_library_suffixed::CImg
at	CImg.h	/^    T at(const int offset, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
at	CImg.h	/^    T& at(const int offset) {$/;"	f	struct:cimg_library_suffixed::CImg
_at	CImg.h	/^    T& _at(const int offset) {$/;"	f	struct:cimg_library_suffixed::CImg
at	CImg.h	/^    const T& at(const int offset) const {$/;"	f	struct:cimg_library_suffixed::CImg
_at	CImg.h	/^    const T& _at(const int offset) const {$/;"	f	struct:cimg_library_suffixed::CImg
atX	CImg.h	/^    T& atX(const int x, const int y, const int z, const int c, const T& out_value) {$/;"	f	struct:cimg_library_suffixed::CImg
atX	CImg.h	/^    T atX(const int x, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
atX	CImg.h	/^    T& atX(const int x, const int y=0, const int z=0, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImg
_atX	CImg.h	/^    T& _atX(const int x, const int y=0, const int z=0, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImg
atX	CImg.h	/^    const T& atX(const int x, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_atX	CImg.h	/^    const T& _atX(const int x, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
atXY	CImg.h	/^    T& atXY(const int x, const int y, const int z, const int c, const T& out_value) {$/;"	f	struct:cimg_library_suffixed::CImg
atXY	CImg.h	/^    T atXY(const int x, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
atXY	CImg.h	/^    T& atXY(const int x, const int y, const int z=0, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImg
_atXY	CImg.h	/^    T& _atXY(const int x, const int y, const int z=0, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImg
atXY	CImg.h	/^    const T& atXY(const int x, const int y, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_atXY	CImg.h	/^    const T& _atXY(const int x, const int y, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
atXYZ	CImg.h	/^    T& atXYZ(const int x, const int y, const int z, const int c, const T& out_value) {$/;"	f	struct:cimg_library_suffixed::CImg
atXYZ	CImg.h	/^    T atXYZ(const int x, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
atXYZ	CImg.h	/^    T& atXYZ(const int x, const int y, const int z, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImg
_atXYZ	CImg.h	/^    T& _atXYZ(const int x, const int y, const int z, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImg
atXYZ	CImg.h	/^    const T& atXYZ(const int x, const int y, const int z, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_atXYZ	CImg.h	/^    const T& _atXYZ(const int x, const int y, const int z, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
atXYZC	CImg.h	/^    T& atXYZC(const int x, const int y, const int z, const int c, const T& out_value) {$/;"	f	struct:cimg_library_suffixed::CImg
atXYZC	CImg.h	/^    T atXYZC(const int x, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
atXYZC	CImg.h	/^    T& atXYZC(const int x, const int y, const int z, const int c) {$/;"	f	struct:cimg_library_suffixed::CImg
_atXYZC	CImg.h	/^    T& _atXYZC(const int x, const int y, const int z, const int c) {$/;"	f	struct:cimg_library_suffixed::CImg
atXYZC	CImg.h	/^    const T& atXYZC(const int x, const int y, const int z, const int c) const {$/;"	f	struct:cimg_library_suffixed::CImg
_atXYZC	CImg.h	/^    const T& _atXYZC(const int x, const int y, const int z, const int c) const {$/;"	f	struct:cimg_library_suffixed::CImg
linear_atX	CImg.h	/^    Tfloat linear_atX(const float fx, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
linear_atX	CImg.h	/^    Tfloat linear_atX(const float fx, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_linear_atX	CImg.h	/^    Tfloat _linear_atX(const float fx, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
linear_atXY	CImg.h	/^    Tfloat linear_atXY(const float fx, const float fy, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
linear_atXY	CImg.h	/^    Tfloat linear_atXY(const float fx, const float fy, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_linear_atXY	CImg.h	/^    Tfloat _linear_atXY(const float fx, const float fy, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
linear_atXYZ	CImg.h	/^    Tfloat linear_atXYZ(const float fx, const float fy, const float fz, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
linear_atXYZ	CImg.h	/^    Tfloat linear_atXYZ(const float fx, const float fy=0, const float fz=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_linear_atXYZ	CImg.h	/^    Tfloat _linear_atXYZ(const float fx, const float fy=0, const float fz=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
linear_atXYZC	CImg.h	/^    Tfloat linear_atXYZC(const float fx, const float fy, const float fz, const float fc, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
linear_atXYZC	CImg.h	/^    Tfloat linear_atXYZC(const float fx, const float fy=0, const float fz=0, const float fc=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_linear_atXYZC	CImg.h	/^    Tfloat _linear_atXYZC(const float fx, const float fy=0, const float fz=0, const float fc=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_atX	CImg.h	/^    Tfloat cubic_atX(const float fx, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_cut_atX	CImg.h	/^    T cubic_cut_atX(const float fx, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_atX	CImg.h	/^    Tfloat cubic_atX(const float fx, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_cubic_atX	CImg.h	/^    Tfloat _cubic_atX(const float fx, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_cut_atX	CImg.h	/^    T cubic_cut_atX(const float fx, const int y, const int z, const int c) const {$/;"	f	struct:cimg_library_suffixed::CImg
_cubic_cut_atX	CImg.h	/^    T _cubic_cut_atX(const float fx, const int y, const int z, const int c) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_atXY	CImg.h	/^    Tfloat cubic_atXY(const float fx, const float fy, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_cut_atXY	CImg.h	/^    T cubic_cut_atXY(const float fx, const float fy, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_atXY	CImg.h	/^    Tfloat cubic_atXY(const float fx, const float fy, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_cubic_atXY	CImg.h	/^    Tfloat _cubic_atXY(const float fx, const float fy, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_cut_atXY	CImg.h	/^    T cubic_cut_atXY(const float fx, const float fy, const int z, const int c) const {$/;"	f	struct:cimg_library_suffixed::CImg
_cubic_cut_atXY	CImg.h	/^    T _cubic_cut_atXY(const float fx, const float fy, const int z, const int c) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_atXYZ	CImg.h	/^    Tfloat cubic_atXYZ(const float fx, const float fy, const float fz, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_cut_atXYZ	CImg.h	/^    T cubic_cut_atXYZ(const float fx, const float fy, const float fz, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_atXYZ	CImg.h	/^    Tfloat cubic_atXYZ(const float fx, const float fy, const float fz, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_cubic_atXYZ	CImg.h	/^    Tfloat _cubic_atXYZ(const float fx, const float fy, const float fz, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
cubic_cut_atXYZ	CImg.h	/^    T cubic_cut_atXYZ(const float fx, const float fy, const float fz, const int c) const {$/;"	f	struct:cimg_library_suffixed::CImg
_cubic_cut_atXYZ	CImg.h	/^    T _cubic_cut_atXYZ(const float fx, const float fy, const float fz, const int c) const {$/;"	f	struct:cimg_library_suffixed::CImg
set_linear_atX	CImg.h	/^    CImg<T>& set_linear_atX(const T& value, const float fx, const int y=0, const int z=0, const int c=0,$/;"	f	struct:cimg_library_suffixed::CImg
set_linear_atXY	CImg.h	/^    CImg<T>& set_linear_atXY(const T& value, const float fx, const float fy=0, const int z=0, const int c=0,$/;"	f	struct:cimg_library_suffixed::CImg
set_linear_atXYZ	CImg.h	/^    CImg<T>& set_linear_atXYZ(const T& value, const float fx, const float fy=0, const float fz=0, const int c=0,$/;"	f	struct:cimg_library_suffixed::CImg
value_string	CImg.h	/^    CImg<charT> value_string(const char separator=',', const unsigned int max_size=0,$/;"	f	struct:cimg_library_suffixed::CImg
is_shared	CImg.h	/^    bool is_shared() const {$/;"	f	struct:cimg_library_suffixed::CImg
is_empty	CImg.h	/^    bool is_empty() const {$/;"	f	struct:cimg_library_suffixed::CImg
is_inf	CImg.h	/^    bool is_inf() const {$/;"	f	struct:cimg_library_suffixed::CImg
is_nan	CImg.h	/^    bool is_nan() const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameX	CImg.h	/^    bool is_sameX(const unsigned int size_x) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameX	CImg.h	/^    bool is_sameX(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameX	CImg.h	/^    bool is_sameX(const CImgDisplay& disp) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameY	CImg.h	/^    bool is_sameY(const unsigned int size_y) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameY	CImg.h	/^    bool is_sameY(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameY	CImg.h	/^    bool is_sameY(const CImgDisplay& disp) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameZ	CImg.h	/^    bool is_sameZ(const unsigned int size_z) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameZ	CImg.h	/^    bool is_sameZ(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameC	CImg.h	/^    bool is_sameC(const unsigned int size_c) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameC	CImg.h	/^    bool is_sameC(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXY	CImg.h	/^    bool is_sameXY(const unsigned int size_x, const unsigned int size_y) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXY	CImg.h	/^    bool is_sameXY(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXY	CImg.h	/^    bool is_sameXY(const CImgDisplay& disp) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXZ	CImg.h	/^    bool is_sameXZ(const unsigned int size_x, const unsigned int size_z) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXZ	CImg.h	/^    bool is_sameXZ(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXC	CImg.h	/^    bool is_sameXC(const unsigned int size_x, const unsigned int size_c) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXC	CImg.h	/^    bool is_sameXC(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameYZ	CImg.h	/^    bool is_sameYZ(const unsigned int size_y, const unsigned int size_z) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameYZ	CImg.h	/^    bool is_sameYZ(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameYC	CImg.h	/^    bool is_sameYC(const unsigned int size_y, const unsigned int size_c) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameYC	CImg.h	/^    bool is_sameYC(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameZC	CImg.h	/^    bool is_sameZC(const unsigned int size_z, const unsigned int size_c) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameZC	CImg.h	/^    bool is_sameZC(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXYZ	CImg.h	/^    bool is_sameXYZ(const unsigned int size_x, const unsigned int size_y, const unsigned int size_z) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXYZ	CImg.h	/^    bool is_sameXYZ(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXYC	CImg.h	/^    bool is_sameXYC(const unsigned int size_x, const unsigned int size_y, const unsigned int size_c) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXYC	CImg.h	/^    bool is_sameXYC(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXZC	CImg.h	/^    bool is_sameXZC(const unsigned int size_x, const unsigned int size_z, const unsigned int size_c) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXZC	CImg.h	/^    bool is_sameXZC(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameYZC	CImg.h	/^    bool is_sameYZC(const unsigned int size_y, const unsigned int size_z, const unsigned int size_c) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameYZC	CImg.h	/^    bool is_sameYZC(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXYZC	CImg.h	/^    bool is_sameXYZC(const unsigned int size_x, const unsigned int size_y,$/;"	f	struct:cimg_library_suffixed::CImg
is_sameXYZC	CImg.h	/^    bool is_sameXYZC(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
containsXYZC	CImg.h	/^    bool containsXYZC(const int x, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
contains	CImg.h	/^    bool contains(const T& pixel, t& x, t& y, t& z, t& c) const {$/;"	f	struct:cimg_library_suffixed::CImg
contains	CImg.h	/^    bool contains(const T& pixel, t& x, t& y, t& z) const {$/;"	f	struct:cimg_library_suffixed::CImg
contains	CImg.h	/^    bool contains(const T& pixel, t& x, t& y) const {$/;"	f	struct:cimg_library_suffixed::CImg
contains	CImg.h	/^    bool contains(const T& pixel, t& x) const {$/;"	f	struct:cimg_library_suffixed::CImg
contains	CImg.h	/^    bool contains(const T& pixel) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_overlapped	CImg.h	/^    bool is_overlapped(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
is_object3d	CImg.h	/^    bool is_object3d(const CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
is_CImg3d	CImg.h	/^    bool is_CImg3d(const bool full_check=true, char *const error_message=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_is_CImg3d	CImg.h	/^    static bool _is_CImg3d(const T val, const char c) {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_math_parser	CImg.h	/^    struct _cimg_math_parser {$/;"	s	struct:cimg_library_suffixed::CImg
mem	CImg.h	/^      CImg<doubleT> mem;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
memtype	CImg.h	/^      CImg<intT> memtype;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_code	CImg.h	/^      CImgList<ulongT> _code, &code, code_begin, code_end;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
code	CImg.h	/^      CImgList<ulongT> _code, &code, code_begin, code_end;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
code_begin	CImg.h	/^      CImgList<ulongT> _code, &code, code_begin, code_end;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
code_end	CImg.h	/^      CImgList<ulongT> _code, &code, code_begin, code_end;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
opcode	CImg.h	/^      CImg<ulongT> opcode;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
p_code_end	CImg.h	/^      const CImg<ulongT> *p_code_end, *p_code;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
p_code	CImg.h	/^      const CImg<ulongT> *p_code_end, *p_code;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
p_break	CImg.h	/^      const CImg<ulongT> *const p_break;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
expr	CImg.h	/^      CImg<charT> expr, pexpr;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
pexpr	CImg.h	/^      CImg<charT> expr, pexpr;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
imgin	CImg.h	/^      const CImg<T>& imgin;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
listin	CImg.h	/^      const CImgList<T>& listin;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
imgout	CImg.h	/^      CImg<T> &imgout;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
listout	CImg.h	/^      CImgList<T>& listout;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_img_stats	CImg.h	/^      CImg<doubleT> _img_stats, &img_stats, constcache_vals;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
img_stats	CImg.h	/^      CImg<doubleT> _img_stats, &img_stats, constcache_vals;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
constcache_vals	CImg.h	/^      CImg<doubleT> _img_stats, &img_stats, constcache_vals;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_list_stats	CImg.h	/^      CImgList<doubleT> _list_stats, &list_stats, _list_median, &list_median;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
list_stats	CImg.h	/^      CImgList<doubleT> _list_stats, &list_stats, _list_median, &list_median;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_list_median	CImg.h	/^      CImgList<doubleT> _list_stats, &list_stats, _list_median, &list_median;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
list_median	CImg.h	/^      CImgList<doubleT> _list_stats, &list_stats, _list_median, &list_median;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mem_img_stats	CImg.h	/^      CImg<uintT> mem_img_stats, constcache_inds;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
constcache_inds	CImg.h	/^      CImg<uintT> mem_img_stats, constcache_inds;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
level	CImg.h	/^      CImg<uintT> level, variable_pos, reserved_label;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
variable_pos	CImg.h	/^      CImg<uintT> level, variable_pos, reserved_label;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
reserved_label	CImg.h	/^      CImg<uintT> level, variable_pos, reserved_label;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
variable_def	CImg.h	/^      CImgList<charT> variable_def, macro_def, macro_body;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
macro_def	CImg.h	/^      CImgList<charT> variable_def, macro_def, macro_body;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
macro_body	CImg.h	/^      CImgList<charT> variable_def, macro_def, macro_body;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
macro_body_is_string	CImg.h	/^      CImgList<boolT> macro_body_is_string;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
user_macro	CImg.h	/^      char *user_macro;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mempos	CImg.h	/^      unsigned int mempos, mem_img_median, debug_indent, result_dim, break_type, constcache_size;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mem_img_median	CImg.h	/^      unsigned int mempos, mem_img_median, debug_indent, result_dim, break_type, constcache_size;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
debug_indent	CImg.h	/^      unsigned int mempos, mem_img_median, debug_indent, result_dim, break_type, constcache_size;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
result_dim	CImg.h	/^      unsigned int mempos, mem_img_median, debug_indent, result_dim, break_type, constcache_size;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
break_type	CImg.h	/^      unsigned int mempos, mem_img_median, debug_indent, result_dim, break_type, constcache_size;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
constcache_size	CImg.h	/^      unsigned int mempos, mem_img_median, debug_indent, result_dim, break_type, constcache_size;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
is_parallelizable	CImg.h	/^      bool is_parallelizable, is_fill, need_input_copy;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
is_fill	CImg.h	/^      bool is_parallelizable, is_fill, need_input_copy;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
need_input_copy	CImg.h	/^      bool is_parallelizable, is_fill, need_input_copy;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
result	CImg.h	/^      double *result;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
calling_function	CImg.h	/^      const char *const calling_function, *s_op, *ss_op;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
s_op	CImg.h	/^      const char *const calling_function, *s_op, *ss_op;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
ss_op	CImg.h	/^      const char *const calling_function, *s_op, *ss_op;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_func	CImg.h	/^      typedef double (*mp_func)(_cimg_math_parser&);$/;"	t	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_cimg_mp_is_constant	CImg.h	15866;"	d
_cimg_mp_is_scalar	CImg.h	15867;"	d
_cimg_mp_is_comp	CImg.h	15868;"	d
_cimg_mp_is_variable	CImg.h	15869;"	d
_cimg_mp_is_vector	CImg.h	15870;"	d
_cimg_mp_size	CImg.h	15871;"	d
_cimg_mp_calling_function	CImg.h	15872;"	d
_cimg_mp_op	CImg.h	15873;"	d
_cimg_mp_check_type	CImg.h	15874;"	d
_cimg_mp_check_constant	CImg.h	15875;"	d
_cimg_mp_check_matrix_square	CImg.h	15876;"	d
_cimg_mp_check_vector0	CImg.h	15877;"	d
_cimg_mp_check_list	CImg.h	15878;"	d
_cimg_mp_defunc	CImg.h	15879;"	d
_cimg_mp_return	CImg.h	15880;"	d
_cimg_mp_return_nan	CImg.h	15881;"	d
_cimg_mp_constant	CImg.h	15882;"	d
_cimg_mp_scalar0	CImg.h	15883;"	d
_cimg_mp_scalar1	CImg.h	15884;"	d
_cimg_mp_scalar2	CImg.h	15885;"	d
_cimg_mp_scalar3	CImg.h	15886;"	d
_cimg_mp_scalar4	CImg.h	15887;"	d
_cimg_mp_scalar5	CImg.h	15888;"	d
_cimg_mp_scalar6	CImg.h	15889;"	d
_cimg_mp_scalar7	CImg.h	15890;"	d
_cimg_mp_vector1_v	CImg.h	15891;"	d
_cimg_mp_vector2_sv	CImg.h	15892;"	d
_cimg_mp_vector2_vs	CImg.h	15893;"	d
_cimg_mp_vector2_vv	CImg.h	15894;"	d
_cimg_mp_vector3_vss	CImg.h	15895;"	d
_cimg_math_parser	CImg.h	/^      _cimg_math_parser(const char *const expression, const char *const funcname=0,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_cimg_mp_interpolation	CImg.h	15931;"	d
_cimg_mp_boundary	CImg.h	15932;"	d
_cimg_mp_slot_nan	CImg.h	15933;"	d
_cimg_mp_slot_x	CImg.h	15934;"	d
_cimg_mp_slot_y	CImg.h	15935;"	d
_cimg_mp_slot_z	CImg.h	15936;"	d
_cimg_mp_slot_c	CImg.h	15937;"	d
_cimg_math_parser	CImg.h	/^      _cimg_math_parser():$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_cimg_math_parser	CImg.h	/^      _cimg_math_parser(const _cimg_math_parser& mp):$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
get_level	CImg.h	/^      CImg<uintT> get_level(CImg<charT>& expr) const {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
is_inside_string	CImg.h	/^      CImg<boolT> is_inside_string(CImg<charT>& expr) const {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
compile	CImg.h	/^      unsigned int compile(char *ss, char *se, const unsigned int depth, unsigned int *const p_ref,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
operator ()	CImg.h	/^      double operator()(const double x, const double y, const double z, const double c) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
operator ()	CImg.h	/^      void operator()(const double x, const double y, const double z, const double c, t *const output) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
end	CImg.h	/^      void end() {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
s_type	CImg.h	/^      CImg<charT> s_type(const unsigned int arg) const {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
constant	CImg.h	/^      unsigned int constant(const double val) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
scalar	CImg.h	/^      unsigned int scalar() { \/\/ Insert new scalar in memory.$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
scalar0	CImg.h	/^      unsigned int scalar0(const mp_func op) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
scalar1	CImg.h	/^      unsigned int scalar1(const mp_func op, const unsigned int arg1) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
scalar2	CImg.h	/^      unsigned int scalar2(const mp_func op, const unsigned int arg1, const unsigned int arg2) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
scalar3	CImg.h	/^      unsigned int scalar3(const mp_func op,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
scalar4	CImg.h	/^      unsigned int scalar4(const mp_func op,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
scalar5	CImg.h	/^      unsigned int scalar5(const mp_func op,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
scalar6	CImg.h	/^      unsigned int scalar6(const mp_func op,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
scalar7	CImg.h	/^      unsigned int scalar7(const mp_func op,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
calling_function_s	CImg.h	/^      CImg<charT> calling_function_s() const {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
is_varchar	CImg.h	/^      bool is_varchar(const char c) const {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
is_comp_vector	CImg.h	/^      bool is_comp_vector(const unsigned int arg) const {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
set_variable_vector	CImg.h	/^      void set_variable_vector(const unsigned int arg) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
vector	CImg.h	/^      unsigned int vector(const unsigned int siz) { \/\/ Insert new vector of specified size in memory$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
vector	CImg.h	/^      unsigned int vector(const unsigned int siz, const double value) { \/\/ Insert new initialized vector$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
vector_copy	CImg.h	/^      unsigned int vector_copy(const unsigned int arg) { \/\/ Insert new copy of specified vector in memory$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
self_vector_s	CImg.h	/^      void self_vector_s(const unsigned int pos, const mp_func op, const unsigned int arg1) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
self_vector_v	CImg.h	/^      void self_vector_v(const unsigned int pos, const mp_func op, const unsigned int arg1) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
vector1_v	CImg.h	/^      unsigned int vector1_v(const mp_func op, const unsigned int arg1) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
vector2_vv	CImg.h	/^      unsigned int vector2_vv(const mp_func op, const unsigned int arg1, const unsigned int arg2) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
vector2_vs	CImg.h	/^      unsigned int vector2_vs(const mp_func op, const unsigned int arg1, const unsigned int arg2) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
vector2_sv	CImg.h	/^      unsigned int vector2_sv(const mp_func op, const unsigned int arg1, const unsigned int arg2) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
vector3_vss	CImg.h	/^      unsigned int vector3_vss(const mp_func op, const unsigned int arg1, const unsigned int arg2,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
check_constant	CImg.h	/^      void check_constant(const unsigned int arg, const unsigned int n_arg,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
check_matrix_square	CImg.h	/^      void check_matrix_square(const unsigned int arg, const unsigned int n_arg,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
check_type	CImg.h	/^      void check_type(const unsigned int arg, const unsigned int n_arg,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
check_list	CImg.h	/^      void check_list(const bool is_out,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
check_vector0	CImg.h	/^      void check_vector0(const unsigned int dim,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_mp_arg	CImg.h	20940;"	d
_mp_arg	CImg.h	20942;"	d
mp_abs	CImg.h	/^      static double mp_abs(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_add	CImg.h	/^      static double mp_add(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_acos	CImg.h	/^      static double mp_acos(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_acosh	CImg.h	/^      static double mp_acosh(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_asinh	CImg.h	/^      static double mp_asinh(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_atanh	CImg.h	/^      static double mp_atanh(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_arg	CImg.h	/^      static double mp_arg(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_argkth	CImg.h	/^      static double mp_argkth(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_argmin	CImg.h	/^      static double mp_argmin(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_argmax	CImg.h	/^      static double mp_argmax(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_asin	CImg.h	/^      static double mp_asin(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_atan	CImg.h	/^      static double mp_atan(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_atan2	CImg.h	/^      static double mp_atan2(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_avg	CImg.h	/^      static double mp_avg(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_bitwise_and	CImg.h	/^      static double mp_bitwise_and(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_bitwise_left_shift	CImg.h	/^      static double mp_bitwise_left_shift(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_bitwise_not	CImg.h	/^      static double mp_bitwise_not(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_bitwise_or	CImg.h	/^      static double mp_bitwise_or(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_bitwise_right_shift	CImg.h	/^      static double mp_bitwise_right_shift(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_bitwise_xor	CImg.h	/^      static double mp_bitwise_xor(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_bool	CImg.h	/^      static double mp_bool(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_break	CImg.h	/^      static double mp_break(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_breakpoint	CImg.h	/^      static double mp_breakpoint(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_cats	CImg.h	/^      static double mp_cats(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_cbrt	CImg.h	/^      static double mp_cbrt(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_ceil	CImg.h	/^      static double mp_ceil(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_abs	CImg.h	/^      static double mp_complex_abs(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_conj	CImg.h	/^      static double mp_complex_conj(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_div_sv	CImg.h	/^      static double mp_complex_div_sv(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_div_vv	CImg.h	/^      static double mp_complex_div_vv(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_exp	CImg.h	/^      static double mp_complex_exp(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_log	CImg.h	/^      static double mp_complex_log(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_mul	CImg.h	/^      static double mp_complex_mul(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_mp_complex_pow	CImg.h	/^      static void _mp_complex_pow(const double r1, const double i1,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_pow_ss	CImg.h	/^      static double mp_complex_pow_ss(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_pow_sv	CImg.h	/^      static double mp_complex_pow_sv(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_pow_vs	CImg.h	/^      static double mp_complex_pow_vs(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_complex_pow_vv	CImg.h	/^      static double mp_complex_pow_vv(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_continue	CImg.h	/^      static double mp_continue(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_cos	CImg.h	/^      static double mp_cos(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_cosh	CImg.h	/^      static double mp_cosh(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_critical	CImg.h	/^      static double mp_critical(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_crop	CImg.h	/^      static double mp_crop(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_cross	CImg.h	/^      static double mp_cross(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_cut	CImg.h	/^      static double mp_cut(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_date	CImg.h	/^      static double mp_date(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_debug	CImg.h	/^      static double mp_debug(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_decrement	CImg.h	/^      static double mp_decrement(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_det	CImg.h	/^      static double mp_det(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_diag	CImg.h	/^      static double mp_diag(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_display_memory	CImg.h	/^      static double mp_display_memory(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_display	CImg.h	/^      static double mp_display(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_div	CImg.h	/^      static double mp_div(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_dot	CImg.h	/^      static double mp_dot(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_do	CImg.h	/^      static double mp_do(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_draw	CImg.h	/^      static double mp_draw(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_echo	CImg.h	/^      static double mp_echo(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_ellipse	CImg.h	/^      static double mp_ellipse(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_eq	CImg.h	/^      static double mp_eq(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_ext	CImg.h	/^      static double mp_ext(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_exp	CImg.h	/^      static double mp_exp(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_eye	CImg.h	/^      static double mp_eye(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_factorial	CImg.h	/^      static double mp_factorial(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_fibonacci	CImg.h	/^      static double mp_fibonacci(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_find	CImg.h	/^      static double mp_find(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_find_seq	CImg.h	/^      static double mp_find_seq(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_floor	CImg.h	/^      static double mp_floor(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_for	CImg.h	/^      static double mp_for(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_fsize	CImg.h	/^      static double mp_fsize(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_g	CImg.h	/^      static double mp_g(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_gauss	CImg.h	/^      static double mp_gauss(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_gcd	CImg.h	/^      static double mp_gcd(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_gt	CImg.h	/^      static double mp_gt(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_gte	CImg.h	/^      static double mp_gte(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_i	CImg.h	/^      static double mp_i(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_if	CImg.h	/^      static double mp_if(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_d	CImg.h	/^      static double mp_image_d(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_display	CImg.h	/^      static double mp_image_display(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_h	CImg.h	/^      static double mp_image_h(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_median	CImg.h	/^      static double mp_image_median(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_print	CImg.h	/^      static double mp_image_print(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_resize	CImg.h	/^      static double mp_image_resize(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_s	CImg.h	/^      static double mp_image_s(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_sort	CImg.h	/^      static double mp_image_sort(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_stats	CImg.h	/^      static double mp_image_stats(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_w	CImg.h	/^      static double mp_image_w(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_wh	CImg.h	/^      static double mp_image_wh(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_whd	CImg.h	/^      static double mp_image_whd(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_image_whds	CImg.h	/^      static double mp_image_whds(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_increment	CImg.h	/^      static double mp_increment(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_int	CImg.h	/^      static double mp_int(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_ioff	CImg.h	/^      static double mp_ioff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_isbool	CImg.h	/^      static double mp_isbool(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_isin	CImg.h	/^      static double mp_isin(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_isinf	CImg.h	/^      static double mp_isinf(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_isint	CImg.h	/^      static double mp_isint(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_isnan	CImg.h	/^      static double mp_isnan(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_ixyzc	CImg.h	/^      static double mp_ixyzc(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_joff	CImg.h	/^      static double mp_joff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_jxyzc	CImg.h	/^      static double mp_jxyzc(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_kth	CImg.h	/^      static double mp_kth(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_linear_add	CImg.h	/^      static double mp_linear_add(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_linear_sub_left	CImg.h	/^      static double mp_linear_sub_left(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_linear_sub_right	CImg.h	/^      static double mp_linear_sub_right(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_depth	CImg.h	/^      static double mp_list_depth(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_find	CImg.h	/^      static double mp_list_find(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_find_seq	CImg.h	/^      static double mp_list_find_seq(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_height	CImg.h	/^      static double mp_list_height(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_ioff	CImg.h	/^      static double mp_list_ioff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_is_shared	CImg.h	/^      static double mp_list_is_shared(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_ixyzc	CImg.h	/^      static double mp_list_ixyzc(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_joff	CImg.h	/^      static double mp_list_joff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_jxyzc	CImg.h	/^      static double mp_list_jxyzc(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_l	CImg.h	/^      static double mp_list_l(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_median	CImg.h	/^      static double mp_list_median(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_ioff	CImg.h	/^      static double mp_list_set_ioff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_ixyzc	CImg.h	/^      static double mp_list_set_ixyzc(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_joff	CImg.h	/^      static double mp_list_set_joff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_jxyzc	CImg.h	/^      static double mp_list_set_jxyzc(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_Ioff_s	CImg.h	/^      static double mp_list_set_Ioff_s(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_Ioff_v	CImg.h	/^      static double mp_list_set_Ioff_v(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_Ixyz_s	CImg.h	/^      static double mp_list_set_Ixyz_s(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_Ixyz_v	CImg.h	/^      static double mp_list_set_Ixyz_v(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_Joff_s	CImg.h	/^      static double mp_list_set_Joff_s(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_Joff_v	CImg.h	/^      static double mp_list_set_Joff_v(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_Jxyz_s	CImg.h	/^      static double mp_list_set_Jxyz_s(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_set_Jxyz_v	CImg.h	/^      static double mp_list_set_Jxyz_v(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_spectrum	CImg.h	/^      static double mp_list_spectrum(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_stats	CImg.h	/^      static double mp_list_stats(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_wh	CImg.h	/^      static double mp_list_wh(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_whd	CImg.h	/^      static double mp_list_whd(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_whds	CImg.h	/^      static double mp_list_whds(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_width	CImg.h	/^      static double mp_list_width(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_Ioff	CImg.h	/^      static double mp_list_Ioff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_Ixyz	CImg.h	/^      static double mp_list_Ixyz(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_Joff	CImg.h	/^      static double mp_list_Joff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_list_Jxyz	CImg.h	/^      static double mp_list_Jxyz(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_log	CImg.h	/^      static double mp_log(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_log10	CImg.h	/^      static double mp_log10(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_log2	CImg.h	/^      static double mp_log2(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_logical_and	CImg.h	/^      static double mp_logical_and(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_logical_not	CImg.h	/^      static double mp_logical_not(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_logical_or	CImg.h	/^      static double mp_logical_or(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_lowercase	CImg.h	/^      static double mp_lowercase(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_lt	CImg.h	/^      static double mp_lt(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_lte	CImg.h	/^      static double mp_lte(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_matrix_eig	CImg.h	/^      static double mp_matrix_eig(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_matrix_inv	CImg.h	/^      static double mp_matrix_inv(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_matrix_mul	CImg.h	/^      static double mp_matrix_mul(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_matrix_pseudoinv	CImg.h	/^      static double mp_matrix_pseudoinv(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_matrix_svd	CImg.h	/^      static double mp_matrix_svd(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_max	CImg.h	/^      static double mp_max(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_mp_memcopy_double	CImg.h	/^      static double* _mp_memcopy_double(_cimg_math_parser& mp, const unsigned int ind, const ulongT *const p_ref,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_mp_memcopy_float	CImg.h	/^      static float* _mp_memcopy_float(_cimg_math_parser& mp, const ulongT *const p_ref,$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_memcopy	CImg.h	/^      static double mp_memcopy(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_min	CImg.h	/^      static double mp_min(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_minus	CImg.h	/^      static double mp_minus(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_median	CImg.h	/^      static double mp_median(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_modulo	CImg.h	/^      static double mp_modulo(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_mul	CImg.h	/^      static double mp_mul(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_mul2	CImg.h	/^      static double mp_mul2(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_neq	CImg.h	/^      static double mp_neq(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_norm0	CImg.h	/^      static double mp_norm0(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_norm1	CImg.h	/^      static double mp_norm1(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_norm2	CImg.h	/^      static double mp_norm2(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_norminf	CImg.h	/^      static double mp_norminf(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_normp	CImg.h	/^      static double mp_normp(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_permutations	CImg.h	/^      static double mp_permutations(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_polygon	CImg.h	/^      static double mp_polygon(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_pow	CImg.h	/^      static double mp_pow(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_pow0_25	CImg.h	/^      static double mp_pow0_25(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_pow3	CImg.h	/^      static double mp_pow3(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_pow4	CImg.h	/^      static double mp_pow4(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_print	CImg.h	/^      static double mp_print(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_prod	CImg.h	/^      static double mp_prod(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_copy	CImg.h	/^      static double mp_copy(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_rol	CImg.h	/^      static double mp_rol(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_ror	CImg.h	/^      static double mp_ror(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_rot2d	CImg.h	/^      static double mp_rot2d(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_rot3d	CImg.h	/^      static double mp_rot3d(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_round	CImg.h	/^      static double mp_round(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_add	CImg.h	/^      static double mp_self_add(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_bitwise_and	CImg.h	/^      static double mp_self_bitwise_and(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_bitwise_left_shift	CImg.h	/^      static double mp_self_bitwise_left_shift(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_bitwise_or	CImg.h	/^      static double mp_self_bitwise_or(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_bitwise_right_shift	CImg.h	/^      static double mp_self_bitwise_right_shift(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_decrement	CImg.h	/^      static double mp_self_decrement(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_increment	CImg.h	/^      static double mp_self_increment(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_map_vector_s	CImg.h	/^      static double mp_self_map_vector_s(_cimg_math_parser& mp) { \/\/ Vector += scalar$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_map_vector_v	CImg.h	/^      static double mp_self_map_vector_v(_cimg_math_parser& mp) { \/\/ Vector += vector$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_mul	CImg.h	/^      static double mp_self_mul(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_div	CImg.h	/^      static double mp_self_div(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_modulo	CImg.h	/^      static double mp_self_modulo(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_pow	CImg.h	/^      static double mp_self_pow(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_self_sub	CImg.h	/^      static double mp_self_sub(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_ioff	CImg.h	/^      static double mp_set_ioff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_ixyzc	CImg.h	/^      static double mp_set_ixyzc(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_joff	CImg.h	/^      static double mp_set_joff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_jxyzc	CImg.h	/^      static double mp_set_jxyzc(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_Ioff_s	CImg.h	/^      static double mp_set_Ioff_s(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_Ioff_v	CImg.h	/^      static double mp_set_Ioff_v(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_Ixyz_s	CImg.h	/^      static double mp_set_Ixyz_s(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_Ixyz_v	CImg.h	/^      static double mp_set_Ixyz_v(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_Joff_s	CImg.h	/^      static double mp_set_Joff_s(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_Joff_v	CImg.h	/^      static double mp_set_Joff_v(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_Jxyz_s	CImg.h	/^      static double mp_set_Jxyz_s(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_set_Jxyz_v	CImg.h	/^      static double mp_set_Jxyz_v(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_shift	CImg.h	/^      static double mp_shift(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_sign	CImg.h	/^      static double mp_sign(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_sin	CImg.h	/^      static double mp_sin(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_sinc	CImg.h	/^      static double mp_sinc(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_sinh	CImg.h	/^      static double mp_sinh(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_solve	CImg.h	/^      static double mp_solve(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_sort	CImg.h	/^      static double mp_sort(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_sqr	CImg.h	/^      static double mp_sqr(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_sqrt	CImg.h	/^      static double mp_sqrt(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_srand	CImg.h	/^      static double mp_srand(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_srand0	CImg.h	/^      static double mp_srand0(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_std	CImg.h	/^      static double mp_std(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_string_init	CImg.h	/^      static double mp_string_init(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_stov	CImg.h	/^      static double mp_stov(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_sub	CImg.h	/^      static double mp_sub(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_sum	CImg.h	/^      static double mp_sum(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_tan	CImg.h	/^      static double mp_tan(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_tanh	CImg.h	/^      static double mp_tanh(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_trace	CImg.h	/^      static double mp_trace(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_transp	CImg.h	/^      static double mp_transp(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_u	CImg.h	/^      static double mp_u(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_uppercase	CImg.h	/^      static double mp_uppercase(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_var	CImg.h	/^      static double mp_var(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_copy	CImg.h	/^      static double mp_vector_copy(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_crop	CImg.h	/^      static double mp_vector_crop(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_init	CImg.h	/^      static double mp_vector_init(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_eq	CImg.h	/^      static double mp_vector_eq(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_off	CImg.h	/^      static double mp_vector_off(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_map_sv	CImg.h	/^      static double mp_vector_map_sv(_cimg_math_parser& mp) { \/\/ Operator(scalar,vector)$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_map_v	CImg.h	/^      static double mp_vector_map_v(_cimg_math_parser& mp) { \/\/ Operator(vector)$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_map_vs	CImg.h	/^      static double mp_vector_map_vs(_cimg_math_parser& mp) { \/\/ Operator(vector,scalar)$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_map_vss	CImg.h	/^      static double mp_vector_map_vss(_cimg_math_parser& mp) { \/\/ Operator(vector,scalar,scalar)$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_map_vv	CImg.h	/^      static double mp_vector_map_vv(_cimg_math_parser& mp) { \/\/ Operator(vector,vector)$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_neq	CImg.h	/^      static double mp_vector_neq(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_print	CImg.h	/^      static double mp_vector_print(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_resize	CImg.h	/^      static double mp_vector_resize(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_reverse	CImg.h	/^      static double mp_vector_reverse(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vector_set_off	CImg.h	/^      static double mp_vector_set_off(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_vtos	CImg.h	/^      static double mp_vtos(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_while	CImg.h	/^      static double mp_while(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_Ioff	CImg.h	/^      static double mp_Ioff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_Ixyz	CImg.h	/^      static double mp_Ixyz(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_Joff	CImg.h	/^      static double mp_Joff(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
mp_Jxyz	CImg.h	/^      static double mp_Jxyz(_cimg_math_parser& mp) {$/;"	f	struct:cimg_library_suffixed::CImg::_cimg_math_parser
_mp_arg	CImg.h	24249;"	d
_cimg_create_pointwise_functions	CImg.h	24253;"	d
atan2	CImg.h	/^    CImg<T>& atan2(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
get_atan2	CImg.h	/^    CImg<Tfloat> get_atan2(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
mul	CImg.h	/^    CImg<T>& mul(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
get_mul	CImg.h	/^    CImg<_cimg_Tt> get_mul(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
div	CImg.h	/^    CImg<T>& div(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
get_div	CImg.h	/^    CImg<_cimg_Tt> get_div(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
pow	CImg.h	/^    CImg<T>& pow(const double p) {$/;"	f	struct:cimg_library_suffixed::CImg
get_pow	CImg.h	/^    CImg<Tfloat> get_pow(const double p) const {$/;"	f	struct:cimg_library_suffixed::CImg
pow	CImg.h	/^    CImg<T>& pow(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
get_pow	CImg.h	/^    CImg<Tfloat> get_pow(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
pow	CImg.h	/^    CImg<T>& pow(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
get_pow	CImg.h	/^    CImg<Tfloat> get_pow(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
rol	CImg.h	/^    CImg<T>& rol(const unsigned int n=1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_rol	CImg.h	/^    CImg<T> get_rol(const unsigned int n=1) const {$/;"	f	struct:cimg_library_suffixed::CImg
rol	CImg.h	/^    CImg<T>& rol(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
get_rol	CImg.h	/^    CImg<T> get_rol(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
rol	CImg.h	/^    CImg<T>& rol(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
get_rol	CImg.h	/^    CImg<T> get_rol(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
ror	CImg.h	/^    CImg<T>& ror(const unsigned int n=1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_ror	CImg.h	/^    CImg<T> get_ror(const unsigned int n=1) const {$/;"	f	struct:cimg_library_suffixed::CImg
ror	CImg.h	/^    CImg<T>& ror(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
get_ror	CImg.h	/^    CImg<T> get_ror(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
ror	CImg.h	/^    CImg<T>& ror(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
get_ror	CImg.h	/^    CImg<T> get_ror(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
min	CImg.h	/^    CImg<T>& min(const T& val) {$/;"	f	struct:cimg_library_suffixed::CImg
get_min	CImg.h	/^    CImg<T> get_min(const T& val) const {$/;"	f	struct:cimg_library_suffixed::CImg
min	CImg.h	/^    CImg<T>& min(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
get_min	CImg.h	/^    CImg<_cimg_Tt> get_min(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
min	CImg.h	/^    CImg<T>& min(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
get_min	CImg.h	/^    CImg<Tfloat> get_min(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
max	CImg.h	/^    CImg<T>& max(const T& val) {$/;"	f	struct:cimg_library_suffixed::CImg
get_max	CImg.h	/^    CImg<T> get_max(const T& val) const {$/;"	f	struct:cimg_library_suffixed::CImg
max	CImg.h	/^    CImg<T>& max(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
get_max	CImg.h	/^    CImg<_cimg_Tt> get_max(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
max	CImg.h	/^    CImg<T>& max(const char *const expression) {$/;"	f	struct:cimg_library_suffixed::CImg
get_max	CImg.h	/^    CImg<Tfloat> get_max(const char *const expression) const {$/;"	f	struct:cimg_library_suffixed::CImg
min	CImg.h	/^    T& min() {$/;"	f	struct:cimg_library_suffixed::CImg
min	CImg.h	/^    const T& min() const {$/;"	f	struct:cimg_library_suffixed::CImg
max	CImg.h	/^    T& max() {$/;"	f	struct:cimg_library_suffixed::CImg
max	CImg.h	/^    const T& max() const {$/;"	f	struct:cimg_library_suffixed::CImg
min_max	CImg.h	/^    T& min_max(t& max_val) {$/;"	f	struct:cimg_library_suffixed::CImg
min_max	CImg.h	/^    const T& min_max(t& max_val) const {$/;"	f	struct:cimg_library_suffixed::CImg
max_min	CImg.h	/^    T& max_min(t& min_val) {$/;"	f	struct:cimg_library_suffixed::CImg
max_min	CImg.h	/^    const T& max_min(t& min_val) const {$/;"	f	struct:cimg_library_suffixed::CImg
kth_smallest	CImg.h	/^    T kth_smallest(const ulongT k) const {$/;"	f	struct:cimg_library_suffixed::CImg
median	CImg.h	/^    T median() const {$/;"	f	struct:cimg_library_suffixed::CImg
product	CImg.h	/^    double product() const {$/;"	f	struct:cimg_library_suffixed::CImg
sum	CImg.h	/^    double sum() const {$/;"	f	struct:cimg_library_suffixed::CImg
mean	CImg.h	/^    double mean() const {$/;"	f	struct:cimg_library_suffixed::CImg
variance	CImg.h	/^    double variance(const unsigned int variance_method=1) const {$/;"	f	struct:cimg_library_suffixed::CImg
variance_mean	CImg.h	/^    double variance_mean(const unsigned int variance_method, t& mean) const {$/;"	f	struct:cimg_library_suffixed::CImg
variance_noise	CImg.h	/^    double variance_noise(const unsigned int variance_method=2) const {$/;"	f	struct:cimg_library_suffixed::CImg
MSE	CImg.h	/^    double MSE(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
PSNR	CImg.h	/^    double PSNR(const CImg<t>& img, const double max_value=255) const {$/;"	f	struct:cimg_library_suffixed::CImg
eval	CImg.h	/^    double eval(const char *const expression,$/;"	f	struct:cimg_library_suffixed::CImg
eval	CImg.h	/^    double eval(const char *const expression,$/;"	f	struct:cimg_library_suffixed::CImg
_eval	CImg.h	/^    double _eval(CImg<T> *const img_output, const char *const expression,$/;"	f	struct:cimg_library_suffixed::CImg
eval	CImg.h	/^    void eval(CImg<t> &output, const char *const expression,$/;"	f	struct:cimg_library_suffixed::CImg
eval	CImg.h	/^    void eval(CImg<t>& output, const char *const expression,$/;"	f	struct:cimg_library_suffixed::CImg
_eval	CImg.h	/^    void _eval(CImg<t>& output, CImg<T> *const img_output, const char *const expression,$/;"	f	struct:cimg_library_suffixed::CImg
eval	CImg.h	/^    CImg<doubleT> eval(const char *const expression, const CImg<t>& xyzc,$/;"	f	struct:cimg_library_suffixed::CImg
eval	CImg.h	/^    CImg<doubleT> eval(const char *const expression, const CImg<t>& xyzc,$/;"	f	struct:cimg_library_suffixed::CImg
_eval	CImg.h	/^    CImg<doubleT> _eval(CImg<T> *const output, const char *const expression, const CImg<t>& xyzc,$/;"	f	struct:cimg_library_suffixed::CImg
get_stats	CImg.h	/^    CImg<Tdouble> get_stats(const unsigned int variance_method=1) const {$/;"	f	struct:cimg_library_suffixed::CImg
stats	CImg.h	/^    CImg<T>& stats(const unsigned int variance_method=1) {$/;"	f	struct:cimg_library_suffixed::CImg
magnitude	CImg.h	/^    double magnitude(const int magnitude_type=2) const {$/;"	f	struct:cimg_library_suffixed::CImg
trace	CImg.h	/^    double trace() const {$/;"	f	struct:cimg_library_suffixed::CImg
det	CImg.h	/^    double det() const {$/;"	f	struct:cimg_library_suffixed::CImg
dot	CImg.h	/^    double dot(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_vector_at	CImg.h	/^    CImg<T> get_vector_at(const unsigned int x, const unsigned int y=0, const unsigned int z=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_matrix_at	CImg.h	/^    CImg<T> get_matrix_at(const unsigned int x=0, const unsigned int y=0, const unsigned int z=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_tensor_at	CImg.h	/^    CImg<T> get_tensor_at(const unsigned int x, const unsigned int y=0, const unsigned int z=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
set_vector_at	CImg.h	/^    CImg<T>& set_vector_at(const CImg<t>& vec, const unsigned int x, const unsigned int y=0, const unsigned int z=0) {$/;"	f	struct:cimg_library_suffixed::CImg
set_matrix_at	CImg.h	/^    CImg<T>& set_matrix_at(const CImg<t>& mat, const unsigned int x=0, const unsigned int y=0, const unsigned int z=0) {$/;"	f	struct:cimg_library_suffixed::CImg
set_tensor_at	CImg.h	/^    CImg<T>& set_tensor_at(const CImg<t>& ten, const unsigned int x=0, const unsigned int y=0, const unsigned int z=0) {$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    CImg<T>& vector() {$/;"	f	struct:cimg_library_suffixed::CImg
get_vector	CImg.h	/^    CImg<T> get_vector() const {$/;"	f	struct:cimg_library_suffixed::CImg
matrix	CImg.h	/^    CImg<T>& matrix() {$/;"	f	struct:cimg_library_suffixed::CImg
get_matrix	CImg.h	/^    CImg<T> get_matrix() const {$/;"	f	struct:cimg_library_suffixed::CImg
tensor	CImg.h	/^    CImg<T>& tensor() {$/;"	f	struct:cimg_library_suffixed::CImg
get_tensor	CImg.h	/^    CImg<T> get_tensor() const {$/;"	f	struct:cimg_library_suffixed::CImg
diagonal	CImg.h	/^    CImg<T>& diagonal() {$/;"	f	struct:cimg_library_suffixed::CImg
get_diagonal	CImg.h	/^    CImg<T> get_diagonal() const {$/;"	f	struct:cimg_library_suffixed::CImg
identity_matrix	CImg.h	/^    CImg<T>& identity_matrix() {$/;"	f	struct:cimg_library_suffixed::CImg
get_identity_matrix	CImg.h	/^    CImg<T> get_identity_matrix() const {$/;"	f	struct:cimg_library_suffixed::CImg
sequence	CImg.h	/^    CImg<T>& sequence(const T& a0, const T& a1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_sequence	CImg.h	/^    CImg<T> get_sequence(const T& a0, const T& a1) const {$/;"	f	struct:cimg_library_suffixed::CImg
transpose	CImg.h	/^    CImg<T>& transpose() {$/;"	f	struct:cimg_library_suffixed::CImg
get_transpose	CImg.h	/^    CImg<T> get_transpose() const {$/;"	f	struct:cimg_library_suffixed::CImg
cross	CImg.h	/^    CImg<T>& cross(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImg
get_cross	CImg.h	/^    CImg<_cimg_Tt> get_cross(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImg
invert	CImg.h	/^    CImg<T>& invert(const bool use_LU=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_invert	CImg.h	/^    CImg<Tfloat> get_invert(const bool use_LU=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
pseudoinvert	CImg.h	/^    CImg<T>& pseudoinvert() {$/;"	f	struct:cimg_library_suffixed::CImg
get_pseudoinvert	CImg.h	/^    CImg<Tfloat> get_pseudoinvert() const {$/;"	f	struct:cimg_library_suffixed::CImg
solve	CImg.h	/^    CImg<T>& solve(const CImg<t>& A) {$/;"	f	struct:cimg_library_suffixed::CImg
get_solve	CImg.h	/^    CImg<_cimg_Ttfloat> get_solve(const CImg<t>& A) const {$/;"	f	struct:cimg_library_suffixed::CImg
_solve	CImg.h	/^    CImg<T>& _solve(const CImg<t>& A, const CImg<ti>& indx) {$/;"	f	struct:cimg_library_suffixed::CImg
solve_tridiagonal	CImg.h	/^    CImg<T>& solve_tridiagonal(const CImg<t>& A) {$/;"	f	struct:cimg_library_suffixed::CImg
get_solve_tridiagonal	CImg.h	/^    CImg<_cimg_Ttfloat> get_solve_tridiagonal(const CImg<t>& A) const {$/;"	f	struct:cimg_library_suffixed::CImg
eigen	CImg.h	/^    const CImg<T>& eigen(CImg<t>& val, CImg<t> &vec) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_eigen	CImg.h	/^    CImgList<Tfloat> get_eigen() const {$/;"	f	struct:cimg_library_suffixed::CImg
symmetric_eigen	CImg.h	/^    const CImg<T>& symmetric_eigen(CImg<t>& val, CImg<t>& vec) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_symmetric_eigen	CImg.h	/^    CImgList<Tfloat> get_symmetric_eigen() const {$/;"	f	struct:cimg_library_suffixed::CImg
sort	CImg.h	/^    CImg<T>& sort(CImg<t>& permutations, const bool is_increasing=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_sort	CImg.h	/^    CImg<T> get_sort(CImg<t>& permutations, const bool is_increasing=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
sort	CImg.h	/^    CImg<T>& sort(const bool is_increasing=true, const char axis=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_sort	CImg.h	/^    CImg<T> get_sort(const bool is_increasing=true, const char axis=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_quicksort	CImg.h	/^    CImg<T>& _quicksort(const long indm, const long indM, CImg<t>& permutations,$/;"	f	struct:cimg_library_suffixed::CImg
SVD	CImg.h	/^    const CImg<T>& SVD(CImg<t>& U, CImg<t>& S, CImg<t>& V, const bool sorting=true,$/;"	f	struct:cimg_library_suffixed::CImg
get_SVD	CImg.h	/^    CImgList<Tfloat> get_SVD(const bool sorting=true,$/;"	f	struct:cimg_library_suffixed::CImg
_LU	CImg.h	/^    CImg<T>& _LU(CImg<t>& indx, bool& d) {$/;"	f	struct:cimg_library_suffixed::CImg
dijkstra	CImg.h	/^    static CImg<T> dijkstra(const tf& distance, const unsigned int nb_nodes,$/;"	f	struct:cimg_library_suffixed::CImg
dijkstra	CImg.h	/^    static CImg<T> dijkstra(const tf& distance, const unsigned int nb_nodes,$/;"	f	struct:cimg_library_suffixed::CImg
dijkstra	CImg.h	/^    CImg<T>& dijkstra(const unsigned int starting_node, const unsigned int ending_node,$/;"	f	struct:cimg_library_suffixed::CImg
get_dijkstra	CImg.h	/^    CImg<T> get_dijkstra(const unsigned int starting_node, const unsigned int ending_node,$/;"	f	struct:cimg_library_suffixed::CImg
dijkstra	CImg.h	/^    CImg<T>& dijkstra(const unsigned int starting_node, const unsigned int ending_node=~0U) {$/;"	f	struct:cimg_library_suffixed::CImg
get_dijkstra	CImg.h	/^    CImg<Tfloat> get_dijkstra(const unsigned int starting_node, const unsigned int ending_node=~0U) const {$/;"	f	struct:cimg_library_suffixed::CImg
string	CImg.h	/^    static CImg<T> string(const char *const str, const bool is_last_zero=true, const bool is_shared=false) {$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0) {$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1) {$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2) {$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3) {$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3, const T& a4) {$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3, const T& a4, const T& a5) {$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
vector	CImg.h	/^    static CImg<T> vector(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
matrix	CImg.h	/^    static CImg<T> matrix(const T& a0) {$/;"	f	struct:cimg_library_suffixed::CImg
matrix	CImg.h	/^    static CImg<T> matrix(const T& a0, const T& a1,$/;"	f	struct:cimg_library_suffixed::CImg
matrix	CImg.h	/^    static CImg<T> matrix(const T& a0, const T& a1, const T& a2,$/;"	f	struct:cimg_library_suffixed::CImg
matrix	CImg.h	/^    static CImg<T> matrix(const T& a0, const T& a1, const T& a2, const T& a3,$/;"	f	struct:cimg_library_suffixed::CImg
matrix	CImg.h	/^    static CImg<T> matrix(const T& a0, const T& a1, const T& a2, const T& a3, const T& a4,$/;"	f	struct:cimg_library_suffixed::CImg
tensor	CImg.h	/^    static CImg<T> tensor(const T& a0) {$/;"	f	struct:cimg_library_suffixed::CImg
tensor	CImg.h	/^    static CImg<T> tensor(const T& a0, const T& a1, const T& a2) {$/;"	f	struct:cimg_library_suffixed::CImg
tensor	CImg.h	/^    static CImg<T> tensor(const T& a0, const T& a1, const T& a2, const T& a3, const T& a4, const T& a5) {$/;"	f	struct:cimg_library_suffixed::CImg
diagonal	CImg.h	/^    static CImg<T> diagonal(const T& a0) {$/;"	f	struct:cimg_library_suffixed::CImg
diagonal	CImg.h	/^    static CImg<T> diagonal(const T& a0, const T& a1) {$/;"	f	struct:cimg_library_suffixed::CImg
diagonal	CImg.h	/^    static CImg<T> diagonal(const T& a0, const T& a1, const T& a2) {$/;"	f	struct:cimg_library_suffixed::CImg
diagonal	CImg.h	/^    static CImg<T> diagonal(const T& a0, const T& a1, const T& a2, const T& a3) {$/;"	f	struct:cimg_library_suffixed::CImg
diagonal	CImg.h	/^    static CImg<T> diagonal(const T& a0, const T& a1, const T& a2, const T& a3, const T& a4) {$/;"	f	struct:cimg_library_suffixed::CImg
identity_matrix	CImg.h	/^    static CImg<T> identity_matrix(const unsigned int N) {$/;"	f	struct:cimg_library_suffixed::CImg
sequence	CImg.h	/^    static CImg<T> sequence(const unsigned int N, const T& a0, const T& a1) {$/;"	f	struct:cimg_library_suffixed::CImg
rotation_matrix	CImg.h	/^    static CImg<T> rotation_matrix(const float x, const float y, const float z, const float w,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val) {$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val) const {$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1) const {$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2) {$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2) const {$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3) {$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3) const {$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4) {$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4) const {$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5) {$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5) const {$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const T& val0, const T& val1, const T& val2, const T& val3, const T& val4, const T& val5,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const char *const expression, const bool repeat_values, const bool allow_formula=true,$/;"	f	struct:cimg_library_suffixed::CImg
_fill	CImg.h	/^    CImg<T>& _fill(const char *const expression, const bool repeat_values, bool allow_formula,$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const char *const expression, const bool repeat_values, const bool allow_formula=true,$/;"	f	struct:cimg_library_suffixed::CImg
fill	CImg.h	/^    CImg<T>& fill(const CImg<t>& values, const bool repeat_values=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_fill	CImg.h	/^    CImg<T> get_fill(const CImg<t>& values, const bool repeat_values=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
fillX	CImg.h	/^    CImg<T>& fillX(const unsigned int y, const unsigned int z, const unsigned int c, const int a0, ...) {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_fill1	CImg.h	27755;"	d
fillX	CImg.h	/^    CImg<T>& fillX(const unsigned int y, const unsigned int z, const unsigned int c, const double a0, ...) {$/;"	f	struct:cimg_library_suffixed::CImg
fillY	CImg.h	/^    CImg<T>& fillY(const unsigned int x, const unsigned int z, const unsigned int c, const int a0, ...) {$/;"	f	struct:cimg_library_suffixed::CImg
fillY	CImg.h	/^    CImg<T>& fillY(const unsigned int x, const unsigned int z, const unsigned int c, const double a0, ...) {$/;"	f	struct:cimg_library_suffixed::CImg
fillZ	CImg.h	/^    CImg<T>& fillZ(const unsigned int x, const unsigned int y, const unsigned int c, const int a0, ...) {$/;"	f	struct:cimg_library_suffixed::CImg
fillZ	CImg.h	/^    CImg<T>& fillZ(const unsigned int x, const unsigned int y, const unsigned int c, const double a0, ...) {$/;"	f	struct:cimg_library_suffixed::CImg
fillC	CImg.h	/^    CImg<T>& fillC(const unsigned int x, const unsigned int y, const unsigned int z, const int a0, ...) {$/;"	f	struct:cimg_library_suffixed::CImg
fillC	CImg.h	/^    CImg<T>& fillC(const unsigned int x, const unsigned int y, const unsigned int z, const double a0, ...) {$/;"	f	struct:cimg_library_suffixed::CImg
discard	CImg.h	/^    CImg<T>& discard(const CImg<t>& values, const char axis=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_discard	CImg.h	/^    CImg<T> get_discard(const CImg<t>& values, const char axis=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
discard	CImg.h	/^    CImg<T>& discard(const char axis=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_discard	CImg.h	/^    CImg<T> get_discard(const char axis=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
invert_endianness	CImg.h	/^    CImg<T>& invert_endianness() {$/;"	f	struct:cimg_library_suffixed::CImg
get_invert_endianness	CImg.h	/^    CImg<T> get_invert_endianness() const {$/;"	f	struct:cimg_library_suffixed::CImg
rand	CImg.h	/^    CImg<T>& rand(const T& val_min, const T& val_max) {$/;"	f	struct:cimg_library_suffixed::CImg
get_rand	CImg.h	/^    CImg<T> get_rand(const T& val_min, const T& val_max) const {$/;"	f	struct:cimg_library_suffixed::CImg
round	CImg.h	/^    CImg<T>& round(const double y=1, const int rounding_type=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_round	CImg.h	/^    CImg<T> get_round(const double y=1, const unsigned int rounding_type=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
noise	CImg.h	/^    CImg<T>& noise(const double sigma, const unsigned int noise_type=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_noise	CImg.h	/^    CImg<T> get_noise(const double sigma, const unsigned int noise_type=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
normalize	CImg.h	/^    CImg<T>& normalize(const T& min_value, const T& max_value) {$/;"	f	struct:cimg_library_suffixed::CImg
get_normalize	CImg.h	/^    CImg<Tfloat> get_normalize(const T& min_value, const T& max_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
normalize	CImg.h	/^    CImg<T>& normalize() {$/;"	f	struct:cimg_library_suffixed::CImg
get_normalize	CImg.h	/^    CImg<Tfloat> get_normalize() const {$/;"	f	struct:cimg_library_suffixed::CImg
norm	CImg.h	/^    CImg<T>& norm(const int norm_type=2) {$/;"	f	struct:cimg_library_suffixed::CImg
get_norm	CImg.h	/^    CImg<Tfloat> get_norm(const int norm_type=2) const {$/;"	f	struct:cimg_library_suffixed::CImg
cut	CImg.h	/^    CImg<T>& cut(const T& min_value, const T& max_value) {$/;"	f	struct:cimg_library_suffixed::CImg
get_cut	CImg.h	/^    CImg<T> get_cut(const T& min_value, const T& max_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
quantize	CImg.h	/^    CImg<T>& quantize(const unsigned int nb_levels, const bool keep_range=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_quantize	CImg.h	/^    CImg<T> get_quantize(const unsigned int n, const bool keep_range=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
threshold	CImg.h	/^    CImg<T>& threshold(const T& value, const bool soft_threshold=false, const bool strict_threshold=false) {$/;"	f	struct:cimg_library_suffixed::CImg
get_threshold	CImg.h	/^    CImg<T> get_threshold(const T& value, const bool soft_threshold=false, const bool strict_threshold=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
histogram	CImg.h	/^    CImg<T>& histogram(const unsigned int nb_levels, const T& min_value, const T& max_value) {$/;"	f	struct:cimg_library_suffixed::CImg
histogram	CImg.h	/^    CImg<T>& histogram(const unsigned int nb_levels) {$/;"	f	struct:cimg_library_suffixed::CImg
get_histogram	CImg.h	/^    CImg<ulongT> get_histogram(const unsigned int nb_levels, const T& min_value, const T& max_value) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_histogram	CImg.h	/^    CImg<ulongT> get_histogram(const unsigned int nb_levels) const {$/;"	f	struct:cimg_library_suffixed::CImg
equalize	CImg.h	/^    CImg<T>& equalize(const unsigned int nb_levels, const T& min_value, const T& max_value) {$/;"	f	struct:cimg_library_suffixed::CImg
equalize	CImg.h	/^    CImg<T>& equalize(const unsigned int nb_levels) {$/;"	f	struct:cimg_library_suffixed::CImg
get_equalize	CImg.h	/^    CImg<T> get_equalize(const unsigned int nblevels, const T& val_min, const T& val_max) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_equalize	CImg.h	/^    CImg<T> get_equalize(const unsigned int nblevels) const {$/;"	f	struct:cimg_library_suffixed::CImg
index	CImg.h	/^    CImg<T>& index(const CImg<t>& colormap, const float dithering=1, const bool map_indexes=false) {$/;"	f	struct:cimg_library_suffixed::CImg
get_index	CImg.h	/^    get_index(const CImg<t>& colormap, const float dithering=1, const bool map_indexes=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
map	CImg.h	/^    CImg<T>& map(const CImg<t>& colormap, const unsigned int boundary_conditions=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_map	CImg.h	/^    CImg<t> get_map(const CImg<t>& colormap, const unsigned int boundary_conditions=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
label	CImg.h	/^    CImg<T>& label(const bool is_high_connectivity=false, const Tfloat tolerance=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_label	CImg.h	/^    CImg<ulongT> get_label(const bool is_high_connectivity=false,$/;"	f	struct:cimg_library_suffixed::CImg
label	CImg.h	/^    CImg<T>& label(const CImg<t>& connectivity_mask, const Tfloat tolerance=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_label	CImg.h	/^    CImg<ulongT> get_label(const CImg<t>& connectivity_mask,$/;"	f	struct:cimg_library_suffixed::CImg
_label	CImg.h	/^    CImg<ulongT> _label(const unsigned int nb, const int *const dx,$/;"	f	struct:cimg_library_suffixed::CImg
_system_strescape	CImg.h	/^    CImg<T>& _system_strescape() {$/;"	f	struct:cimg_library_suffixed::CImg
cimg_system_strescape	CImg.h	29014;"	d
default_LUT256	CImg.h	/^    static const CImg<Tuchar>& default_LUT256() {$/;"	f	struct:cimg_library_suffixed::CImg
HSV_LUT256	CImg.h	/^    static const CImg<Tuchar>& HSV_LUT256() {$/;"	f	struct:cimg_library_suffixed::CImg
lines_LUT256	CImg.h	/^    static const CImg<Tuchar>& lines_LUT256() {$/;"	f	struct:cimg_library_suffixed::CImg
hot_LUT256	CImg.h	/^    static const CImg<Tuchar>& hot_LUT256() {$/;"	f	struct:cimg_library_suffixed::CImg
cool_LUT256	CImg.h	/^    static const CImg<Tuchar>& cool_LUT256() {$/;"	f	struct:cimg_library_suffixed::CImg
jet_LUT256	CImg.h	/^    static const CImg<Tuchar>& jet_LUT256() {$/;"	f	struct:cimg_library_suffixed::CImg
flag_LUT256	CImg.h	/^    static const CImg<Tuchar>& flag_LUT256() {$/;"	f	struct:cimg_library_suffixed::CImg
cube_LUT256	CImg.h	/^    static const CImg<Tuchar>& cube_LUT256() {$/;"	f	struct:cimg_library_suffixed::CImg
sRGBtoRGB	CImg.h	/^    CImg<T>& sRGBtoRGB() {$/;"	f	struct:cimg_library_suffixed::CImg
get_sRGBtoRGB	CImg.h	/^    CImg<Tfloat> get_sRGBtoRGB() const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtosRGB	CImg.h	/^    CImg<T>& RGBtosRGB() {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtosRGB	CImg.h	/^    CImg<Tfloat> get_RGBtosRGB() const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtoHSI	CImg.h	/^    CImg<T>& RGBtoHSI() {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtoHSI	CImg.h	/^    CImg<Tfloat> get_RGBtoHSI() const {$/;"	f	struct:cimg_library_suffixed::CImg
HSItoRGB	CImg.h	/^    CImg<T>& HSItoRGB() {$/;"	f	struct:cimg_library_suffixed::CImg
get_HSItoRGB	CImg.h	/^    CImg<Tfloat> get_HSItoRGB() const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtoHSL	CImg.h	/^    CImg<T>& RGBtoHSL() {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtoHSL	CImg.h	/^    CImg<Tfloat> get_RGBtoHSL() const {$/;"	f	struct:cimg_library_suffixed::CImg
HSLtoRGB	CImg.h	/^    CImg<T>& HSLtoRGB() {$/;"	f	struct:cimg_library_suffixed::CImg
get_HSLtoRGB	CImg.h	/^    CImg<Tuchar> get_HSLtoRGB() const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtoHSV	CImg.h	/^    CImg<T>& RGBtoHSV() {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtoHSV	CImg.h	/^    CImg<Tfloat> get_RGBtoHSV() const {$/;"	f	struct:cimg_library_suffixed::CImg
HSVtoRGB	CImg.h	/^    CImg<T>& HSVtoRGB() {$/;"	f	struct:cimg_library_suffixed::CImg
get_HSVtoRGB	CImg.h	/^    CImg<Tuchar> get_HSVtoRGB() const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtoYCbCr	CImg.h	/^    CImg<T>& RGBtoYCbCr() {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtoYCbCr	CImg.h	/^    CImg<Tuchar> get_RGBtoYCbCr() const {$/;"	f	struct:cimg_library_suffixed::CImg
YCbCrtoRGB	CImg.h	/^    CImg<T>& YCbCrtoRGB() {$/;"	f	struct:cimg_library_suffixed::CImg
get_YCbCrtoRGB	CImg.h	/^    CImg<Tuchar> get_YCbCrtoRGB() const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtoYUV	CImg.h	/^    CImg<T>& RGBtoYUV() {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtoYUV	CImg.h	/^    CImg<Tfloat> get_RGBtoYUV() const {$/;"	f	struct:cimg_library_suffixed::CImg
YUVtoRGB	CImg.h	/^    CImg<T>& YUVtoRGB() {$/;"	f	struct:cimg_library_suffixed::CImg
get_YUVtoRGB	CImg.h	/^    CImg<Tuchar> get_YUVtoRGB() const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtoCMY	CImg.h	/^    CImg<T>& RGBtoCMY() {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtoCMY	CImg.h	/^    CImg<Tuchar> get_RGBtoCMY() const {$/;"	f	struct:cimg_library_suffixed::CImg
CMYtoRGB	CImg.h	/^    CImg<T>& CMYtoRGB() {$/;"	f	struct:cimg_library_suffixed::CImg
get_CMYtoRGB	CImg.h	/^    CImg<Tuchar> get_CMYtoRGB() const {$/;"	f	struct:cimg_library_suffixed::CImg
CMYtoCMYK	CImg.h	/^    CImg<T>& CMYtoCMYK() {$/;"	f	struct:cimg_library_suffixed::CImg
get_CMYtoCMYK	CImg.h	/^    CImg<Tuchar> get_CMYtoCMYK() const {$/;"	f	struct:cimg_library_suffixed::CImg
CMYKtoCMY	CImg.h	/^    CImg<T>& CMYKtoCMY() {$/;"	f	struct:cimg_library_suffixed::CImg
get_CMYKtoCMY	CImg.h	/^    CImg<Tfloat> get_CMYKtoCMY() const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtoXYZ	CImg.h	/^    CImg<T>& RGBtoXYZ(const bool use_D65=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtoXYZ	CImg.h	/^    CImg<Tfloat> get_RGBtoXYZ(const bool use_D65=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
XYZtoRGB	CImg.h	/^    CImg<T>& XYZtoRGB(const bool use_D65=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_XYZtoRGB	CImg.h	/^    CImg<Tuchar> get_XYZtoRGB(const bool use_D65=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
XYZtoLab	CImg.h	/^    CImg<T>& XYZtoLab(const bool use_D65=true) {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_Labf	CImg.h	29792;"	d
get_XYZtoLab	CImg.h	/^    CImg<Tfloat> get_XYZtoLab(const bool use_D65=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
LabtoXYZ	CImg.h	/^    CImg<T>& LabtoXYZ(const bool use_D65=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_LabtoXYZ	CImg.h	/^    CImg<Tfloat> get_LabtoXYZ(const bool use_D65=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
XYZtoxyY	CImg.h	/^    CImg<T>& XYZtoxyY() {$/;"	f	struct:cimg_library_suffixed::CImg
get_XYZtoxyY	CImg.h	/^    CImg<Tfloat> get_XYZtoxyY() const {$/;"	f	struct:cimg_library_suffixed::CImg
xyYtoXYZ	CImg.h	/^    CImg<T>& xyYtoXYZ() {$/;"	f	struct:cimg_library_suffixed::CImg
get_xyYtoXYZ	CImg.h	/^    CImg<Tfloat> get_xyYtoXYZ() const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtoLab	CImg.h	/^    CImg<T>& RGBtoLab(const bool use_D65=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtoLab	CImg.h	/^    CImg<Tfloat> get_RGBtoLab(const bool use_D65=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
LabtoRGB	CImg.h	/^    CImg<T>& LabtoRGB(const bool use_D65=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_LabtoRGB	CImg.h	/^    CImg<Tuchar> get_LabtoRGB(const bool use_D65=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtoxyY	CImg.h	/^    CImg<T>& RGBtoxyY(const bool use_D65=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtoxyY	CImg.h	/^    CImg<Tfloat> get_RGBtoxyY(const bool use_D65=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
xyYtoRGB	CImg.h	/^    CImg<T>& xyYtoRGB(const bool use_D65=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_xyYtoRGB	CImg.h	/^    CImg<Tuchar> get_xyYtoRGB(const bool use_D65=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
RGBtoCMYK	CImg.h	/^    CImg<T>& RGBtoCMYK() {$/;"	f	struct:cimg_library_suffixed::CImg
get_RGBtoCMYK	CImg.h	/^    CImg<Tfloat> get_RGBtoCMYK() const {$/;"	f	struct:cimg_library_suffixed::CImg
CMYKtoRGB	CImg.h	/^    CImg<T>& CMYKtoRGB() {$/;"	f	struct:cimg_library_suffixed::CImg
get_CMYKtoRGB	CImg.h	/^    CImg<Tuchar> get_CMYKtoRGB() const {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_lanczos	CImg.h	/^    static float _cimg_lanczos(const float x) {$/;"	f	struct:cimg_library_suffixed::CImg
resize	CImg.h	/^    CImg<T>& resize(const int size_x, const int size_y=-100,$/;"	f	struct:cimg_library_suffixed::CImg
get_resize	CImg.h	/^    CImg<T> get_resize(const int size_x, const int size_y = -100,$/;"	f	struct:cimg_library_suffixed::CImg
resize	CImg.h	/^    CImg<T>& resize(const CImg<t>& src,$/;"	f	struct:cimg_library_suffixed::CImg
get_resize	CImg.h	/^    CImg<T> get_resize(const CImg<t>& src,$/;"	f	struct:cimg_library_suffixed::CImg
resize	CImg.h	/^    CImg<T>& resize(const CImgDisplay& disp,$/;"	f	struct:cimg_library_suffixed::CImg
get_resize	CImg.h	/^    CImg<T> get_resize(const CImgDisplay& disp,$/;"	f	struct:cimg_library_suffixed::CImg
resize_halfXY	CImg.h	/^    CImg<T>& resize_halfXY() {$/;"	f	struct:cimg_library_suffixed::CImg
get_resize_halfXY	CImg.h	/^    CImg<T> get_resize_halfXY() const {$/;"	f	struct:cimg_library_suffixed::CImg
resize_doubleXY	CImg.h	/^    CImg<T>& resize_doubleXY() {$/;"	f	struct:cimg_library_suffixed::CImg
get_resize_doubleXY	CImg.h	/^    CImg<T> get_resize_doubleXY() const {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_gs2x_for3	CImg.h	31005;"	d
_cimg_gs2x_for3x3	CImg.h	31011;"	d
resize_tripleXY	CImg.h	/^    CImg<T>& resize_tripleXY() {$/;"	f	struct:cimg_library_suffixed::CImg
get_resize_tripleXY	CImg.h	/^    CImg<T> get_resize_tripleXY() const {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_gs3x_for3	CImg.h	31059;"	d
_cimg_gs3x_for3x3	CImg.h	31065;"	d
mirror	CImg.h	/^    CImg<T>& mirror(const char axis) {$/;"	f	struct:cimg_library_suffixed::CImg
get_mirror	CImg.h	/^    CImg<T> get_mirror(const char axis) const {$/;"	f	struct:cimg_library_suffixed::CImg
mirror	CImg.h	/^    CImg<T>& mirror(const char *const axes) {$/;"	f	struct:cimg_library_suffixed::CImg
get_mirror	CImg.h	/^    CImg<T> get_mirror(const char *const axes) const {$/;"	f	struct:cimg_library_suffixed::CImg
shift	CImg.h	/^    CImg<T>& shift(const int delta_x, const int delta_y=0, const int delta_z=0, const int delta_c=0,$/;"	f	struct:cimg_library_suffixed::CImg
get_shift	CImg.h	/^    CImg<T> get_shift(const int delta_x, const int delta_y=0, const int delta_z=0, const int delta_c=0,$/;"	f	struct:cimg_library_suffixed::CImg
permute_axes	CImg.h	/^    CImg<T>& permute_axes(const char *const order) {$/;"	f	struct:cimg_library_suffixed::CImg
get_permute_axes	CImg.h	/^    CImg<T> get_permute_axes(const char *const order) const {$/;"	f	struct:cimg_library_suffixed::CImg
_permute_axes	CImg.h	/^    CImg<t> _permute_axes(const char *const order, const t&) const {$/;"	f	struct:cimg_library_suffixed::CImg
unroll	CImg.h	/^    CImg<T>& unroll(const char axis) {$/;"	f	struct:cimg_library_suffixed::CImg
get_unroll	CImg.h	/^    CImg<T> get_unroll(const char axis) const {$/;"	f	struct:cimg_library_suffixed::CImg
rotate	CImg.h	/^    CImg<T>& rotate(const float angle, const unsigned int interpolation=1,$/;"	f	struct:cimg_library_suffixed::CImg
get_rotate	CImg.h	/^    CImg<T> get_rotate(const float angle, const unsigned int interpolation=1,$/;"	f	struct:cimg_library_suffixed::CImg
rotate	CImg.h	/^    CImg<T>& rotate(const float angle, const float cx, const float cy,$/;"	f	struct:cimg_library_suffixed::CImg
get_rotate	CImg.h	/^    CImg<T> get_rotate(const float angle, const float cx, const float cy,$/;"	f	struct:cimg_library_suffixed::CImg
_rotate	CImg.h	/^    void _rotate(CImg<T>& res, const float angle,$/;"	f	struct:cimg_library_suffixed::CImg
rotate	CImg.h	/^    CImg<T> rotate(const float u, const float v, const float w, const float angle,$/;"	f	struct:cimg_library_suffixed::CImg
get_rotate	CImg.h	/^    CImg<T> get_rotate(const float u, const float v, const float w, const float angle,$/;"	f	struct:cimg_library_suffixed::CImg
rotate	CImg.h	/^    CImg<T> rotate(const float u, const float v, const float w, const float angle,$/;"	f	struct:cimg_library_suffixed::CImg
get_rotate	CImg.h	/^    CImg<T> get_rotate(const float u, const float v, const float w, const float angle,$/;"	f	struct:cimg_library_suffixed::CImg
_rotate	CImg.h	/^    void _rotate(CImg<T>& res, const CImg<Tfloat>& R,$/;"	f	struct:cimg_library_suffixed::CImg
warp	CImg.h	/^    CImg<T>& warp(const CImg<t>& warp, const unsigned int mode=0,$/;"	f	struct:cimg_library_suffixed::CImg
get_warp	CImg.h	/^    CImg<T> get_warp(const CImg<t>& warp, const unsigned int mode=0,$/;"	f	struct:cimg_library_suffixed::CImg
get_projections2d	CImg.h	/^    CImg<T> get_projections2d(const unsigned int x0, const unsigned int y0, const unsigned int z0) const {$/;"	f	struct:cimg_library_suffixed::CImg
projections2d	CImg.h	/^    CImg<T>& projections2d(const unsigned int x0, const unsigned int y0, const unsigned int z0) {$/;"	f	struct:cimg_library_suffixed::CImg
crop	CImg.h	/^    CImg<T>& crop(const int x0, const int y0, const int z0, const int c0,$/;"	f	struct:cimg_library_suffixed::CImg
get_crop	CImg.h	/^    CImg<T> get_crop(const int x0, const int y0, const int z0, const int c0,$/;"	f	struct:cimg_library_suffixed::CImg
crop	CImg.h	/^    CImg<T>& crop(const int x0, const int y0, const int z0,$/;"	f	struct:cimg_library_suffixed::CImg
get_crop	CImg.h	/^    CImg<T> get_crop(const int x0, const int y0, const int z0,$/;"	f	struct:cimg_library_suffixed::CImg
crop	CImg.h	/^    CImg<T>& crop(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
get_crop	CImg.h	/^    CImg<T> get_crop(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
crop	CImg.h	/^    CImg<T>& crop(const int x0, const int x1, const unsigned int boundary_conditions=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_crop	CImg.h	/^    CImg<T> get_crop(const int x0, const int x1, const unsigned int boundary_conditions=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
autocrop	CImg.h	/^    CImg<T>& autocrop(const T& value, const char *const axes="czyx") {$/;"	f	struct:cimg_library_suffixed::CImg
get_autocrop	CImg.h	/^    CImg<T> get_autocrop(const T& value, const char *const axes="czyx") const {$/;"	f	struct:cimg_library_suffixed::CImg
autocrop	CImg.h	/^    CImg<T>& autocrop(const T *const color=0, const char *const axes="zyx") {$/;"	f	struct:cimg_library_suffixed::CImg
get_autocrop	CImg.h	/^    CImg<T> get_autocrop(const T *const color=0, const char *const axes="zyx") const {$/;"	f	struct:cimg_library_suffixed::CImg
autocrop	CImg.h	/^    template<typename t> CImg<T>& autocrop(const CImg<t>& color, const char *const axes="zyx") {$/;"	f	struct:cimg_library_suffixed::CImg
get_autocrop	CImg.h	/^    template<typename t> CImg<T> get_autocrop(const CImg<t>& color, const char *const axes="zyx") const {$/;"	f	struct:cimg_library_suffixed::CImg
_autocrop	CImg.h	/^    CImg<intT> _autocrop(const T& value, const char axis) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_column	CImg.h	/^    CImg<T> get_column(const int x0) const {$/;"	f	struct:cimg_library_suffixed::CImg
column	CImg.h	/^    CImg<T>& column(const int x0) {$/;"	f	struct:cimg_library_suffixed::CImg
columns	CImg.h	/^    CImg<T>& columns(const int x0, const int x1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_columns	CImg.h	/^    CImg<T> get_columns(const int x0, const int x1) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_row	CImg.h	/^    CImg<T> get_row(const int y0) const {$/;"	f	struct:cimg_library_suffixed::CImg
row	CImg.h	/^    CImg<T>& row(const int y0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_rows	CImg.h	/^    CImg<T> get_rows(const int y0, const int y1) const {$/;"	f	struct:cimg_library_suffixed::CImg
rows	CImg.h	/^    CImg<T>& rows(const int y0, const int y1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_slice	CImg.h	/^    CImg<T> get_slice(const int z0) const {$/;"	f	struct:cimg_library_suffixed::CImg
slice	CImg.h	/^    CImg<T>& slice(const int z0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_slices	CImg.h	/^    CImg<T> get_slices(const int z0, const int z1) const {$/;"	f	struct:cimg_library_suffixed::CImg
slices	CImg.h	/^    CImg<T>& slices(const int z0, const int z1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_channel	CImg.h	/^    CImg<T> get_channel(const int c0) const {$/;"	f	struct:cimg_library_suffixed::CImg
channel	CImg.h	/^    CImg<T>& channel(const int c0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_channels	CImg.h	/^    CImg<T> get_channels(const int c0, const int c1) const {$/;"	f	struct:cimg_library_suffixed::CImg
channels	CImg.h	/^    CImg<T>& channels(const int c0, const int c1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_streamline	CImg.h	/^    CImg<floatT> get_streamline(const float x, const float y, const float z,$/;"	f	struct:cimg_library_suffixed::CImg
streamline	CImg.h	/^    static CImg<floatT> streamline(const tfunc& func,$/;"	f	struct:cimg_library_suffixed::CImg
streamline	CImg.h	/^    static CImg<floatT> streamline(const char *const expression,$/;"	f	struct:cimg_library_suffixed::CImg
_functor4d_streamline2d_directed	CImg.h	/^    struct _functor4d_streamline2d_directed {$/;"	s	struct:cimg_library_suffixed::CImg
ref	CImg.h	/^      const CImg<T>& ref;$/;"	m	struct:cimg_library_suffixed::CImg::_functor4d_streamline2d_directed
_functor4d_streamline2d_directed	CImg.h	/^      _functor4d_streamline2d_directed(const CImg<T>& pref):ref(pref) {}$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline2d_directed
operator ()	CImg.h	/^      float operator()(const float x, const float y, const float z, const unsigned int c) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline2d_directed
_functor4d_streamline3d_directed	CImg.h	/^    struct _functor4d_streamline3d_directed {$/;"	s	struct:cimg_library_suffixed::CImg
ref	CImg.h	/^      const CImg<T>& ref;$/;"	m	struct:cimg_library_suffixed::CImg::_functor4d_streamline3d_directed
_functor4d_streamline3d_directed	CImg.h	/^      _functor4d_streamline3d_directed(const CImg<T>& pref):ref(pref) {}$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline3d_directed
operator ()	CImg.h	/^      float operator()(const float x, const float y, const float z, const unsigned int c) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline3d_directed
_functor4d_streamline2d_oriented	CImg.h	/^    struct _functor4d_streamline2d_oriented {$/;"	s	struct:cimg_library_suffixed::CImg
ref	CImg.h	/^      const CImg<T>& ref;$/;"	m	struct:cimg_library_suffixed::CImg::_functor4d_streamline2d_oriented
pI	CImg.h	/^      CImg<floatT> *pI;$/;"	m	struct:cimg_library_suffixed::CImg::_functor4d_streamline2d_oriented
_functor4d_streamline2d_oriented	CImg.h	/^      _functor4d_streamline2d_oriented(const CImg<T>& pref):ref(pref),pI(0) { pI = new CImg<floatT>(2,2,1,2); }$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline2d_oriented
~_functor4d_streamline2d_oriented	CImg.h	/^      ~_functor4d_streamline2d_oriented() { delete pI; }$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline2d_oriented
operator ()	CImg.h	/^      float operator()(const float x, const float y, const float z, const unsigned int c) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline2d_oriented
_cimg_vecalign2d	CImg.h	33544;"	d
_functor4d_streamline3d_oriented	CImg.h	/^    struct _functor4d_streamline3d_oriented {$/;"	s	struct:cimg_library_suffixed::CImg
ref	CImg.h	/^      const CImg<T>& ref;$/;"	m	struct:cimg_library_suffixed::CImg::_functor4d_streamline3d_oriented
pI	CImg.h	/^      CImg<floatT> *pI;$/;"	m	struct:cimg_library_suffixed::CImg::_functor4d_streamline3d_oriented
_functor4d_streamline3d_oriented	CImg.h	/^      _functor4d_streamline3d_oriented(const CImg<T>& pref):ref(pref),pI(0) { pI = new CImg<floatT>(2,2,2,3); }$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline3d_oriented
~_functor4d_streamline3d_oriented	CImg.h	/^      ~_functor4d_streamline3d_oriented() { delete pI; }$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline3d_oriented
operator ()	CImg.h	/^      float operator()(const float x, const float y, const float z, const unsigned int c) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline3d_oriented
_cimg_vecalign3d	CImg.h	33579;"	d
_functor4d_streamline_expr	CImg.h	/^    struct _functor4d_streamline_expr {$/;"	s	struct:cimg_library_suffixed::CImg
mp	CImg.h	/^      _cimg_math_parser *mp;$/;"	m	struct:cimg_library_suffixed::CImg::_functor4d_streamline_expr
~_functor4d_streamline_expr	CImg.h	/^      ~_functor4d_streamline_expr() { mp->end(); delete mp; }$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline_expr
_functor4d_streamline_expr	CImg.h	/^      _functor4d_streamline_expr(const char *const expr):mp(0) {$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline_expr
operator ()	CImg.h	/^      float operator()(const float x, const float y, const float z, const unsigned int c) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_streamline_expr
get_shared_points	CImg.h	/^    CImg<T> get_shared_points(const unsigned int x0, const unsigned int x1,$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_points	CImg.h	/^    const CImg<T> get_shared_points(const unsigned int x0, const unsigned int x1,$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_rows	CImg.h	/^    CImg<T> get_shared_rows(const unsigned int y0, const unsigned int y1,$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_rows	CImg.h	/^    const CImg<T> get_shared_rows(const unsigned int y0, const unsigned int y1,$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_row	CImg.h	/^    CImg<T> get_shared_row(const unsigned int y0, const unsigned int z0=0, const unsigned int c0=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_row	CImg.h	/^    const CImg<T> get_shared_row(const unsigned int y0, const unsigned int z0=0, const unsigned int c0=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_slices	CImg.h	/^    CImg<T> get_shared_slices(const unsigned int z0, const unsigned int z1, const unsigned int c0=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_slices	CImg.h	/^    const CImg<T> get_shared_slices(const unsigned int z0, const unsigned int z1, const unsigned int c0=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_slice	CImg.h	/^    CImg<T> get_shared_slice(const unsigned int z0, const unsigned int c0=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_slice	CImg.h	/^    const CImg<T> get_shared_slice(const unsigned int z0, const unsigned int c0=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_channels	CImg.h	/^    CImg<T> get_shared_channels(const unsigned int c0, const unsigned int c1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_channels	CImg.h	/^    const CImg<T> get_shared_channels(const unsigned int c0, const unsigned int c1) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_channel	CImg.h	/^    CImg<T> get_shared_channel(const unsigned int c0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared_channel	CImg.h	/^    const CImg<T> get_shared_channel(const unsigned int c0) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared	CImg.h	/^    CImg<T> get_shared() {$/;"	f	struct:cimg_library_suffixed::CImg
get_shared	CImg.h	/^    const CImg<T> get_shared() const {$/;"	f	struct:cimg_library_suffixed::CImg
get_split	CImg.h	/^    CImgList<T> get_split(const char axis, const int nb=-1) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_split	CImg.h	/^    CImgList<T> get_split(const CImg<t>& values, const char axis=0, const bool keep_values=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
append	CImg.h	/^    CImg<T>& append(const CImg<t>& img, const char axis='x', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImg
append	CImg.h	/^    CImg<T>& append(const CImg<T>& img, const char axis='x', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_append	CImg.h	/^    CImg<_cimg_Tt> get_append(const CImg<T>& img, const char axis='x', const float align=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_append	CImg.h	/^    CImg<T> get_append(const CImg<T>& img, const char axis='x', const float align=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
correlate	CImg.h	/^    CImg<T>& correlate(const CImg<t>& kernel, const bool boundary_conditions=true,$/;"	f	struct:cimg_library_suffixed::CImg
get_correlate	CImg.h	/^    CImg<_cimg_Ttfloat> get_correlate(const CImg<t>& kernel, const bool boundary_conditions=true,$/;"	f	struct:cimg_library_suffixed::CImg
_correlate	CImg.h	/^    CImg<_cimg_Ttfloat> _correlate(const CImg<t>& kernel, const bool boundary_conditions,$/;"	f	struct:cimg_library_suffixed::CImg
convolve	CImg.h	/^    CImg<T>& convolve(const CImg<t>& kernel, const bool boundary_conditions=true, const bool is_normalized=false) {$/;"	f	struct:cimg_library_suffixed::CImg
get_convolve	CImg.h	/^    CImg<_cimg_Ttfloat> get_convolve(const CImg<t>& kernel, const bool boundary_conditions=true,$/;"	f	struct:cimg_library_suffixed::CImg
cumulate	CImg.h	/^    CImg<T>& cumulate(const char axis=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_cumulate	CImg.h	/^    CImg<Tlong> get_cumulate(const char axis=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
cumulate	CImg.h	/^    CImg<T>& cumulate(const char *const axes) {$/;"	f	struct:cimg_library_suffixed::CImg
get_cumulate	CImg.h	/^    CImg<Tlong> get_cumulate(const char *const axes) const {$/;"	f	struct:cimg_library_suffixed::CImg
erode	CImg.h	/^    CImg<T>& erode(const CImg<t>& kernel, const bool boundary_conditions=true,$/;"	f	struct:cimg_library_suffixed::CImg
get_erode	CImg.h	/^    CImg<_cimg_Tt> get_erode(const CImg<t>& kernel, const bool boundary_conditions=true,$/;"	f	struct:cimg_library_suffixed::CImg
erode	CImg.h	/^    CImg<T>& erode(const unsigned int sx, const unsigned int sy, const unsigned int sz=1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_erode	CImg.h	/^    CImg<T> get_erode(const unsigned int sx, const unsigned int sy, const unsigned int sz=1) const {$/;"	f	struct:cimg_library_suffixed::CImg
erode	CImg.h	/^    CImg<T>& erode(const unsigned int s) {$/;"	f	struct:cimg_library_suffixed::CImg
get_erode	CImg.h	/^    CImg<T> get_erode(const unsigned int s) const {$/;"	f	struct:cimg_library_suffixed::CImg
dilate	CImg.h	/^    CImg<T>& dilate(const CImg<t>& kernel, const bool boundary_conditions=true,$/;"	f	struct:cimg_library_suffixed::CImg
get_dilate	CImg.h	/^    CImg<_cimg_Tt> get_dilate(const CImg<t>& kernel, const bool boundary_conditions=true,$/;"	f	struct:cimg_library_suffixed::CImg
dilate	CImg.h	/^    CImg<T>& dilate(const unsigned int sx, const unsigned int sy, const unsigned int sz=1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_dilate	CImg.h	/^    CImg<T> get_dilate(const unsigned int sx, const unsigned int sy, const unsigned int sz=1) const {$/;"	f	struct:cimg_library_suffixed::CImg
dilate	CImg.h	/^    CImg<T>& dilate(const unsigned int s) {$/;"	f	struct:cimg_library_suffixed::CImg
get_dilate	CImg.h	/^    CImg<T> get_dilate(const unsigned int s) const {$/;"	f	struct:cimg_library_suffixed::CImg
watershed	CImg.h	/^    CImg<T>& watershed(const CImg<t>& priority, const bool is_high_connectivity=false) {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_watershed_init	CImg.h	35259;"	d
_cimg_watershed_propagate	CImg.h	35262;"	d
get_watershed	CImg.h	/^    CImg<T> get_watershed(const CImg<t>& priority, const bool is_high_connectivity=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
_priority_queue_insert	CImg.h	/^    bool _priority_queue_insert(CImg<tq>& is_queued, unsigned int& siz, const tv value,$/;"	f	struct:cimg_library_suffixed::CImg
_priority_queue_remove	CImg.h	/^    CImg<T>& _priority_queue_remove(unsigned int& siz) {$/;"	f	struct:cimg_library_suffixed::CImg
deriche	CImg.h	/^    CImg<T>& deriche(const float sigma, const unsigned int order=0, const char axis='x',$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_deriche_apply	CImg.h	35465;"	d
get_deriche	CImg.h	/^    CImg<Tfloat> get_deriche(const float sigma, const unsigned int order=0, const char axis='x',$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_recursive_apply	CImg.h	/^    static void _cimg_recursive_apply(T *data, const double filter[], const int N, const ulongT off,$/;"	f	struct:cimg_library_suffixed::CImg
vanvliet	CImg.h	/^    CImg<T>& vanvliet(const float sigma, const unsigned int order, const char axis='x',$/;"	f	struct:cimg_library_suffixed::CImg
get_vanvliet	CImg.h	/^    CImg<Tfloat> get_vanvliet(const float sigma, const unsigned int order, const char axis='x',$/;"	f	struct:cimg_library_suffixed::CImg
blur	CImg.h	/^    CImg<T>& blur(const float sigma_x, const float sigma_y, const float sigma_z,$/;"	f	struct:cimg_library_suffixed::CImg
get_blur	CImg.h	/^    CImg<Tfloat> get_blur(const float sigma_x, const float sigma_y, const float sigma_z,$/;"	f	struct:cimg_library_suffixed::CImg
blur	CImg.h	/^    CImg<T>& blur(const float sigma, const bool boundary_conditions=true, const bool is_gaussian=false) {$/;"	f	struct:cimg_library_suffixed::CImg
get_blur	CImg.h	/^    CImg<Tfloat> get_blur(const float sigma, const bool boundary_conditions=true, const bool is_gaussian=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
blur_anisotropic	CImg.h	/^    CImg<T>& blur_anisotropic(const CImg<t>& G,$/;"	f	struct:cimg_library_suffixed::CImg
get_blur_anisotropic	CImg.h	/^    CImg<Tfloat> get_blur_anisotropic(const CImg<t>& G,$/;"	f	struct:cimg_library_suffixed::CImg
blur_anisotropic	CImg.h	/^    CImg<T>& blur_anisotropic(const float amplitude, const float sharpness=0.7f, const float anisotropy=0.6f,$/;"	f	struct:cimg_library_suffixed::CImg
get_blur_anisotropic	CImg.h	/^    CImg<Tfloat> get_blur_anisotropic(const float amplitude, const float sharpness=0.7f, const float anisotropy=0.6f,$/;"	f	struct:cimg_library_suffixed::CImg
blur_bilateral	CImg.h	/^    CImg<T>& blur_bilateral(const CImg<t>& guide,$/;"	f	struct:cimg_library_suffixed::CImg
get_blur_bilateral	CImg.h	/^    CImg<Tfloat> get_blur_bilateral(const CImg<t>& guide,$/;"	f	struct:cimg_library_suffixed::CImg
blur_bilateral	CImg.h	/^    CImg<T>& blur_bilateral(const CImg<t>& guide,$/;"	f	struct:cimg_library_suffixed::CImg
get_blur_bilateral	CImg.h	/^    CImg<Tfloat> get_blur_bilateral(const CImg<t>& guide,$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_blur_box_apply	CImg.h	/^    static void _cimg_blur_box_apply(T *ptr, const float boxsize, const int N, const ulongT off,$/;"	f	struct:cimg_library_suffixed::CImg
__cimg_blur_box_apply	CImg.h	/^    static T __cimg_blur_box_apply(T *ptr, const int N, const ulongT off,$/;"	f	struct:cimg_library_suffixed::CImg
boxfilter	CImg.h	/^    CImg<T>& boxfilter(const float boxsize, const int order, const char axis='x',$/;"	f	struct:cimg_library_suffixed::CImg
get_boxfilter	CImg.h	/^    CImg<Tfloat> get_boxfilter(const float boxsize, const int order, const char axis='x',$/;"	f	struct:cimg_library_suffixed::CImg
blur_box	CImg.h	/^    CImg<T>& blur_box(const float boxsize_x, const float boxsize_y, const float boxsize_z,$/;"	f	struct:cimg_library_suffixed::CImg
get_blur_box	CImg.h	/^    CImg<Tfloat> get_blur_box(const float boxsize_x, const float boxsize_y, const float boxsize_z,$/;"	f	struct:cimg_library_suffixed::CImg
blur_box	CImg.h	/^    CImg<T>& blur_box(const float boxsize, const bool boundary_conditions=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_blur_box	CImg.h	/^    CImg<Tfloat> get_blur_box(const float boxsize, const bool boundary_conditions=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
blur_guided	CImg.h	/^    CImg<T>& blur_guided(const CImg<t>& guide, const float radius, const float regularization) {$/;"	f	struct:cimg_library_suffixed::CImg
get_blur_guided	CImg.h	/^    CImg<Tfloat> get_blur_guided(const CImg<t>& guide, const float radius, const float regularization) const {$/;"	f	struct:cimg_library_suffixed::CImg
blur_patch	CImg.h	/^    CImg<T>& blur_patch(const float sigma_s, const float sigma_p, const unsigned int patch_size=3,$/;"	f	struct:cimg_library_suffixed::CImg
get_blur_patch	CImg.h	/^    CImg<Tfloat> get_blur_patch(const float sigma_s, const float sigma_p, const unsigned int patch_size=3,$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_blur_patch3d_fast	CImg.h	36556;"	d
_cimg_blur_patch3d	CImg.h	36577;"	d
_cimg_blur_patch2d_fast	CImg.h	36599;"	d
_cimg_blur_patch2d	CImg.h	36619;"	d
blur_median	CImg.h	/^    CImg<T>& blur_median(const unsigned int n, const float threshold=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_blur_median	CImg.h	/^    CImg<T> get_blur_median(const unsigned int n, const float threshold=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
sharpen	CImg.h	/^    CImg<T>& sharpen(const float amplitude, const bool sharpen_type=false, const float edge=1,$/;"	f	struct:cimg_library_suffixed::CImg
get_sharpen	CImg.h	/^    CImg<T> get_sharpen(const float amplitude, const bool sharpen_type=false, const float edge=1,$/;"	f	struct:cimg_library_suffixed::CImg
get_gradient	CImg.h	/^    CImgList<Tfloat> get_gradient(const char *const axes=0, const int scheme=3) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_hessian	CImg.h	/^    CImgList<Tfloat> get_hessian(const char *const axes=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
laplacian	CImg.h	/^    CImg<T>& laplacian() {$/;"	f	struct:cimg_library_suffixed::CImg
get_laplacian	CImg.h	/^    CImg<Tfloat> get_laplacian() const {$/;"	f	struct:cimg_library_suffixed::CImg
structure_tensors	CImg.h	/^    CImg<T>& structure_tensors(const bool is_fwbw_scheme=false) {$/;"	f	struct:cimg_library_suffixed::CImg
get_structure_tensors	CImg.h	/^    CImg<Tfloat> get_structure_tensors(const bool is_fwbw_scheme=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
diffusion_tensors	CImg.h	/^    CImg<T>& diffusion_tensors(const float sharpness=0.7f, const float anisotropy=0.6f,$/;"	f	struct:cimg_library_suffixed::CImg
get_diffusion_tensors	CImg.h	/^    CImg<Tfloat> get_diffusion_tensors(const float sharpness=0.7f, const float anisotropy=0.6f,$/;"	f	struct:cimg_library_suffixed::CImg
displacement	CImg.h	/^    CImg<T>& displacement(const CImg<T>& source, const float smoothness=0.1f, const float precision=5.0f,$/;"	f	struct:cimg_library_suffixed::CImg
get_displacement	CImg.h	/^    CImg<floatT> get_displacement(const CImg<T>& source,$/;"	f	struct:cimg_library_suffixed::CImg
patchmatch	CImg.h	/^    CImg<T>& patchmatch(const CImg<T>& patch_image,$/;"	f	struct:cimg_library_suffixed::CImg
get_patchmatch	CImg.h	/^    CImg<intT> get_patchmatch(const CImg<T>& patch_image,$/;"	f	struct:cimg_library_suffixed::CImg
patchmatch	CImg.h	/^    CImg<T>& patchmatch(const CImg<T>& patch_image,$/;"	f	struct:cimg_library_suffixed::CImg
get_patchmatch	CImg.h	/^    CImg<intT> get_patchmatch(const CImg<T>& patch_image,$/;"	f	struct:cimg_library_suffixed::CImg
patchmatch	CImg.h	/^    CImg<T>& patchmatch(const CImg<T>& patch_image,$/;"	f	struct:cimg_library_suffixed::CImg
get_patchmatch	CImg.h	/^    CImg<intT> get_patchmatch(const CImg<T>& patch_image,$/;"	f	struct:cimg_library_suffixed::CImg
_patchmatch	CImg.h	/^    CImg<intT> _patchmatch(const CImg<T>& patch_image,$/;"	f	struct:cimg_library_suffixed::CImg
_patchmatch	CImg.h	/^    static float _patchmatch(const CImg<T>& img1, const CImg<T>& img2,$/;"	f	struct:cimg_library_suffixed::CImg
_patchmatch	CImg.h	/^    static float _patchmatch(const CImg<T>& img1, const CImg<T>& img2,$/;"	f	struct:cimg_library_suffixed::CImg
distance	CImg.h	/^    CImg<T>& distance(const T& value, const unsigned int metric=2) {$/;"	f	struct:cimg_library_suffixed::CImg
get_distance	CImg.h	/^    CImg<Tfloat> get_distance(const T& value, const unsigned int metric=2) const {$/;"	f	struct:cimg_library_suffixed::CImg
_distance_sep_edt	CImg.h	/^    static longT _distance_sep_edt(const longT i, const longT u, const longT *const g) {$/;"	f	struct:cimg_library_suffixed::CImg
_distance_dist_edt	CImg.h	/^    static longT _distance_dist_edt(const longT x, const longT i, const longT *const g) {$/;"	f	struct:cimg_library_suffixed::CImg
_distance_sep_mdt	CImg.h	/^    static longT _distance_sep_mdt(const longT i, const longT u, const longT *const g) {$/;"	f	struct:cimg_library_suffixed::CImg
_distance_dist_mdt	CImg.h	/^    static longT _distance_dist_mdt(const longT x, const longT i, const longT *const g) {$/;"	f	struct:cimg_library_suffixed::CImg
_distance_sep_cdt	CImg.h	/^    static longT _distance_sep_cdt(const longT i, const longT u, const longT *const g) {$/;"	f	struct:cimg_library_suffixed::CImg
_distance_dist_cdt	CImg.h	/^    static longT _distance_dist_cdt(const longT x, const longT i, const longT *const g) {$/;"	f	struct:cimg_library_suffixed::CImg
_distance_scan	CImg.h	/^    static void _distance_scan(const unsigned int len,$/;"	f	struct:cimg_library_suffixed::CImg
_distance_core	CImg.h	/^    CImg<T>& _distance_core(longT (*const sep)(const longT, const longT, const longT *const),$/;"	f	struct:cimg_library_suffixed::CImg
cimg_is_gcc49x	CImg.h	38350;"	d
distance	CImg.h	/^    CImg<T>& distance(const T& value, const CImg<t>& metric_mask) {$/;"	f	struct:cimg_library_suffixed::CImg
get_distance	CImg.h	/^    CImg<Tfloat> get_distance(const T& value, const CImg<t>& metric_mask) const {$/;"	f	struct:cimg_library_suffixed::CImg
distance_dijkstra	CImg.h	/^    CImg<T>& distance_dijkstra(const T& value, const CImg<t>& metric, const bool is_high_connectivity,$/;"	f	struct:cimg_library_suffixed::CImg
get_distance_dijkstra	CImg.h	/^    get_distance_dijkstra(const T& value, const CImg<t>& metric, const bool is_high_connectivity,$/;"	f	struct:cimg_library_suffixed::CImg
distance_dijkstra	CImg.h	/^    CImg<T>& distance_dijkstra(const T& value, const CImg<t>& metric,$/;"	f	struct:cimg_library_suffixed::CImg
get_distance_dijkstra	CImg.h	/^    CImg<Tfloat> get_distance_dijkstra(const T& value, const CImg<t>& metric,$/;"	f	struct:cimg_library_suffixed::CImg
distance_eikonal	CImg.h	/^    CImg<T>& distance_eikonal(const T& value, const CImg<t>& metric) {$/;"	f	struct:cimg_library_suffixed::CImg
get_distance_eikonal	CImg.h	/^    CImg<Tfloat> get_distance_eikonal(const T& value, const CImg<t>& metric) const {$/;"	f	struct:cimg_library_suffixed::CImg
__distance_eikonal	CImg.h	/^    Tfloat __distance_eikonal(const CImg<Tfloat>& res, const Tfloat P,$/;"	f	struct:cimg_library_suffixed::CImg
___distance_eikonal	CImg.h	/^    static bool ___distance_eikonal(const Tfloat a, const Tfloat b, const Tfloat c, Tfloat &root) {$/;"	f	struct:cimg_library_suffixed::CImg
_eik_priority_queue_insert	CImg.h	/^    void _eik_priority_queue_insert(CImg<charT>& state, unsigned int& siz, const t value,$/;"	f	struct:cimg_library_suffixed::CImg
distance_eikonal	CImg.h	/^    CImg<T>& distance_eikonal(const unsigned int nb_iterations, const float band_size=0, const float time_step=0.5f) {$/;"	f	struct:cimg_library_suffixed::CImg
get_distance_eikonal	CImg.h	/^    CImg<Tfloat> get_distance_eikonal(const unsigned int nb_iterations, const float band_size=0,$/;"	f	struct:cimg_library_suffixed::CImg
haar	CImg.h	/^    CImg<T>& haar(const char axis, const bool invert=false, const unsigned int nb_scales=1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_haar	CImg.h	/^    CImg<Tfloat> get_haar(const char axis, const bool invert=false, const unsigned int nb_scales=1) const {$/;"	f	struct:cimg_library_suffixed::CImg
haar	CImg.h	/^    CImg<T>& haar(const bool invert=false, const unsigned int nb_scales=1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_haar	CImg.h	/^    CImg<Tfloat> get_haar(const bool invert=false, const unsigned int nb_scales=1) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_FFT	CImg.h	/^    CImgList<Tfloat> get_FFT(const char axis, const bool is_invert=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_FFT	CImg.h	/^    CImgList<Tfloat> get_FFT(const bool is_invert=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
FFT	CImg.h	/^    static void FFT(CImg<T>& real, CImg<T>& imag, const char axis, const bool is_invert=false) {$/;"	f	struct:cimg_library_suffixed::CImg
FFT	CImg.h	/^    static void FFT(CImg<T>& real, CImg<T>& imag, const bool is_invert=false, const unsigned int nb_threads=0) {$/;"	f	struct:cimg_library_suffixed::CImg
shift_object3d	CImg.h	/^    CImg<T>& shift_object3d(const float tx, const float ty=0, const float tz=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_shift_object3d	CImg.h	/^    CImg<Tfloat> get_shift_object3d(const float tx, const float ty=0, const float tz=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
shift_object3d	CImg.h	/^    CImg<T>& shift_object3d() {$/;"	f	struct:cimg_library_suffixed::CImg
get_shift_object3d	CImg.h	/^    CImg<Tfloat> get_shift_object3d() const {$/;"	f	struct:cimg_library_suffixed::CImg
resize_object3d	CImg.h	/^    CImg<T>& resize_object3d(const float sx, const float sy=-100, const float sz=-100) {$/;"	f	struct:cimg_library_suffixed::CImg
get_resize_object3d	CImg.h	/^    CImg<Tfloat> get_resize_object3d(const float sx, const float sy=-100, const float sz=-100) const {$/;"	f	struct:cimg_library_suffixed::CImg
resize_object3d	CImg.h	/^    CImg<T> resize_object3d() {$/;"	f	struct:cimg_library_suffixed::CImg
get_resize_object3d	CImg.h	/^    CImg<Tfloat> get_resize_object3d() const {$/;"	f	struct:cimg_library_suffixed::CImg
append_object3d	CImg.h	/^    CImg<T>& append_object3d(CImgList<tf>& primitives, const CImg<tp>& obj_vertices,$/;"	f	struct:cimg_library_suffixed::CImg
texturize_object3d	CImg.h	/^    const CImg<T>& texturize_object3d(CImgList<tp>& primitives, CImgList<tc>& colors,$/;"	f	struct:cimg_library_suffixed::CImg
get_elevation3d	CImg.h	/^    CImg<floatT> get_elevation3d(CImgList<tf>& primitives, CImgList<tc>& colors, const CImg<te>& elevation) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_projections3d	CImg.h	/^    CImg<floatT> get_projections3d(CImgList<tf>& primitives, CImgList<tc>& colors,$/;"	f	struct:cimg_library_suffixed::CImg
get_isoline3d	CImg.h	/^    CImg<floatT> get_isoline3d(CImgList<tf>& primitives, const float isovalue,$/;"	f	struct:cimg_library_suffixed::CImg
get_isosurface3d	CImg.h	/^    CImg<floatT> get_isosurface3d(CImgList<tf>& primitives, const float isovalue,$/;"	f	struct:cimg_library_suffixed::CImg
elevation3d	CImg.h	/^    static CImg<floatT> elevation3d(CImgList<tf>& primitives, const tfunc& func,$/;"	f	struct:cimg_library_suffixed::CImg
elevation3d	CImg.h	/^    static CImg<floatT> elevation3d(CImgList<tf>& primitives, const char *const expression,$/;"	f	struct:cimg_library_suffixed::CImg
isoline3d	CImg.h	/^    static CImg<floatT> isoline3d(CImgList<tf>& primitives, const tfunc& func, const float isovalue,$/;"	f	struct:cimg_library_suffixed::CImg
isoline3d	CImg.h	/^    static CImg<floatT> isoline3d(CImgList<tf>& primitives, const char *const expression, const float isovalue,$/;"	f	struct:cimg_library_suffixed::CImg
_isoline3d_indice	CImg.h	/^    static int _isoline3d_indice(const unsigned int edge, const CImg<t>& indices1, const CImg<t>& indices2,$/;"	f	struct:cimg_library_suffixed::CImg
isosurface3d	CImg.h	/^    static CImg<floatT> isosurface3d(CImgList<tf>& primitives, const tfunc& func, const float isovalue,$/;"	f	struct:cimg_library_suffixed::CImg
isosurface3d	CImg.h	/^    static CImg<floatT> isosurface3d(CImgList<tf>& primitives, const char *const expression, const float isovalue,$/;"	f	struct:cimg_library_suffixed::CImg
_isosurface3d_indice	CImg.h	/^    static int _isosurface3d_indice(const unsigned int edge, const CImg<t>& indices1, const CImg<t>& indices2,$/;"	f	struct:cimg_library_suffixed::CImg
_functor2d_int	CImg.h	/^    struct _functor2d_int {$/;"	s	struct:cimg_library_suffixed::CImg
ref	CImg.h	/^      const CImg<T>& ref;$/;"	m	struct:cimg_library_suffixed::CImg::_functor2d_int
_functor2d_int	CImg.h	/^      _functor2d_int(const CImg<T>& pref):ref(pref) {}$/;"	f	struct:cimg_library_suffixed::CImg::_functor2d_int
operator ()	CImg.h	/^      float operator()(const float x, const float y) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor2d_int
_functor2d_float	CImg.h	/^    struct _functor2d_float {$/;"	s	struct:cimg_library_suffixed::CImg
ref	CImg.h	/^      const CImg<T>& ref;$/;"	m	struct:cimg_library_suffixed::CImg::_functor2d_float
_functor2d_float	CImg.h	/^      _functor2d_float(const CImg<T>& pref):ref(pref) {}$/;"	f	struct:cimg_library_suffixed::CImg::_functor2d_float
operator ()	CImg.h	/^      float operator()(const float x, const float y) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor2d_float
_functor2d_expr	CImg.h	/^    struct _functor2d_expr {$/;"	s	struct:cimg_library_suffixed::CImg
mp	CImg.h	/^      _cimg_math_parser *mp;$/;"	m	struct:cimg_library_suffixed::CImg::_functor2d_expr
~_functor2d_expr	CImg.h	/^      ~_functor2d_expr() { mp->end(); delete mp; }$/;"	f	struct:cimg_library_suffixed::CImg::_functor2d_expr
_functor2d_expr	CImg.h	/^      _functor2d_expr(const char *const expr):mp(0) {$/;"	f	struct:cimg_library_suffixed::CImg::_functor2d_expr
operator ()	CImg.h	/^      float operator()(const float x, const float y) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor2d_expr
_functor3d_int	CImg.h	/^    struct _functor3d_int {$/;"	s	struct:cimg_library_suffixed::CImg
ref	CImg.h	/^      const CImg<T>& ref;$/;"	m	struct:cimg_library_suffixed::CImg::_functor3d_int
_functor3d_int	CImg.h	/^      _functor3d_int(const CImg<T>& pref):ref(pref) {}$/;"	f	struct:cimg_library_suffixed::CImg::_functor3d_int
operator ()	CImg.h	/^      float operator()(const float x, const float y, const float z) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor3d_int
_functor3d_float	CImg.h	/^    struct _functor3d_float {$/;"	s	struct:cimg_library_suffixed::CImg
ref	CImg.h	/^      const CImg<T>& ref;$/;"	m	struct:cimg_library_suffixed::CImg::_functor3d_float
_functor3d_float	CImg.h	/^      _functor3d_float(const CImg<T>& pref):ref(pref) {}$/;"	f	struct:cimg_library_suffixed::CImg::_functor3d_float
operator ()	CImg.h	/^      float operator()(const float x, const float y, const float z) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor3d_float
_functor3d_expr	CImg.h	/^    struct _functor3d_expr {$/;"	s	struct:cimg_library_suffixed::CImg
mp	CImg.h	/^      _cimg_math_parser *mp;$/;"	m	struct:cimg_library_suffixed::CImg::_functor3d_expr
~_functor3d_expr	CImg.h	/^      ~_functor3d_expr() { mp->end(); delete mp; }$/;"	f	struct:cimg_library_suffixed::CImg::_functor3d_expr
_functor3d_expr	CImg.h	/^      _functor3d_expr(const char *const expr):mp(0) {$/;"	f	struct:cimg_library_suffixed::CImg::_functor3d_expr
operator ()	CImg.h	/^      float operator()(const float x, const float y, const float z) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor3d_expr
_functor4d_int	CImg.h	/^    struct _functor4d_int {$/;"	s	struct:cimg_library_suffixed::CImg
ref	CImg.h	/^      const CImg<T>& ref;$/;"	m	struct:cimg_library_suffixed::CImg::_functor4d_int
_functor4d_int	CImg.h	/^      _functor4d_int(const CImg<T>& pref):ref(pref) {}$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_int
operator ()	CImg.h	/^      float operator()(const float x, const float y, const float z, const unsigned int c) const {$/;"	f	struct:cimg_library_suffixed::CImg::_functor4d_int
box3d	CImg.h	/^    static CImg<floatT> box3d(CImgList<tf>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
cone3d	CImg.h	/^    static CImg<floatT> cone3d(CImgList<tf>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
cylinder3d	CImg.h	/^    static CImg<floatT> cylinder3d(CImgList<tf>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
torus3d	CImg.h	/^    static CImg<floatT> torus3d(CImgList<tf>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
plane3d	CImg.h	/^    static CImg<floatT> plane3d(CImgList<tf>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
sphere3d	CImg.h	/^    static CImg<floatT> sphere3d(CImgList<tf>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
ellipsoid3d	CImg.h	/^    static CImg<floatT> ellipsoid3d(CImgList<tf>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
object3dtoCImg3d	CImg.h	/^    CImg<T>& object3dtoCImg3d(const CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
object3dtoCImg3d	CImg.h	/^    CImg<T>& object3dtoCImg3d(const CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
object3dtoCImg3d	CImg.h	/^    CImg<T>& object3dtoCImg3d(const CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
object3dtoCImg3d	CImg.h	/^    CImg<T>& object3dtoCImg3d(const bool full_check=true) {$/;"	f	struct:cimg_library_suffixed::CImg
get_object3dtoCImg3d	CImg.h	/^    CImg<floatT> get_object3dtoCImg3d(const CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
_object3dtoCImg3d	CImg.h	/^    float* _object3dtoCImg3d(const CImgList<to>& opacities, float *ptrd) const {$/;"	f	struct:cimg_library_suffixed::CImg
_object3dtoCImg3d	CImg.h	/^    float* _object3dtoCImg3d(const CImg<to>& opacities, float *ptrd) const {$/;"	f	struct:cimg_library_suffixed::CImg
_size_object3dtoCImg3d	CImg.h	/^    unsigned int _size_object3dtoCImg3d(const CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
_size_object3dtoCImg3d	CImg.h	/^    unsigned int _size_object3dtoCImg3d(const CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
get_object3dtoCImg3d	CImg.h	/^    CImg<floatT> get_object3dtoCImg3d(const CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
get_object3dtoCImg3d	CImg.h	/^    CImg<floatT> get_object3dtoCImg3d(const CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
get_object3dtoCImg3d	CImg.h	/^    CImg<floatT> get_object3dtoCImg3d(const bool full_check=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
CImg3dtoobject3d	CImg.h	/^    CImg<T>& CImg3dtoobject3d(CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
get_CImg3dtoobject3d	CImg.h	/^    CImg<T> get_CImg3dtoobject3d(CImgList<tp>& primitives,$/;"	f	struct:cimg_library_suffixed::CImg
cimg_init_scanline	CImg.h	41125;"	d
cimg_draw_scanline	CImg.h	41129;"	d
_draw_scanline	CImg.h	/^    CImg<T>& _draw_scanline(const int x0, const int x1, const int y,$/;"	f	struct:cimg_library_suffixed::CImg
draw_point	CImg.h	/^    CImg<T>& draw_point(const int x0, const int y0, const int z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_point	CImg.h	/^    CImg<T>& draw_point(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_point	CImg.h	/^    CImg<T>& draw_point(const CImg<t>& points,$/;"	f	struct:cimg_library_suffixed::CImg
draw_line	CImg.h	/^    CImg<T>& draw_line(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_line	CImg.h	/^    CImg<T>& draw_line(CImg<tz>& zbuffer,$/;"	f	struct:cimg_library_suffixed::CImg
draw_line	CImg.h	/^    CImg<T>& draw_line(const int x0, const int y0, const int z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_line	CImg.h	/^    CImg<T>& draw_line(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_line	CImg.h	/^    CImg<T>& draw_line(const int x0, const int y0, const float z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_line	CImg.h	/^    CImg<T>& draw_line(CImg<tz>& zbuffer,$/;"	f	struct:cimg_library_suffixed::CImg
draw_line	CImg.h	/^    CImg<T>& draw_line(const CImg<t>& points,$/;"	f	struct:cimg_library_suffixed::CImg
draw_arrow	CImg.h	/^    CImg<T>& draw_arrow(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_spline	CImg.h	/^    CImg<T>& draw_spline(const int x0, const int y0, const float u0, const float v0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_spline	CImg.h	/^    CImg<T>& draw_spline(const int x0, const int y0, const int z0, const float u0, const float v0, const float w0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_spline	CImg.h	/^    CImg<T>& draw_spline(const int x0, const int y0, const float u0, const float v0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_spline	CImg.h	/^    CImg<T>& draw_spline(const CImg<tp>& points, const CImg<tt>& tangents,$/;"	f	struct:cimg_library_suffixed::CImg
draw_spline	CImg.h	/^    CImg<T>& draw_spline(const CImg<tp>& points,$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_for_triangle1	CImg.h	42424;"	d
_cimg_for_triangle2	CImg.h	42453;"	d
_cimg_for_triangle3	CImg.h	42497;"	d
_cimg_for_triangle4	CImg.h	42556;"	d
_cimg_for_triangle5	CImg.h	42630;"	d
_draw_triangle	CImg.h	/^    CImg<T>& _draw_triangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(CImg<tz>& zbuffer,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(CImg<tz>& zbuffer,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0, const float z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(CImg<tz>& zbuffer,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(CImg<tz>& zbuffer,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0, const float z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(CImg<tz>& zbuffer,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(const int x0, const int y0, const float z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_triangle	CImg.h	/^    CImg<T>& draw_triangle(CImg<tz>& zbuffer,$/;"	f	struct:cimg_library_suffixed::CImg
draw_rectangle	CImg.h	/^    CImg<T>& draw_rectangle(const int x0, const int y0, const int z0, const int c0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_rectangle	CImg.h	/^    CImg<T>& draw_rectangle(const int x0, const int y0, const int z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_rectangle	CImg.h	/^    CImg<T>& draw_rectangle(const int x0, const int y0, const int z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_rectangle	CImg.h	/^    CImg<T>& draw_rectangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_rectangle	CImg.h	/^    CImg<T>& draw_rectangle(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_polygon	CImg.h	/^    CImg<T>& draw_polygon(const CImg<tp>& points,$/;"	f	struct:cimg_library_suffixed::CImg
draw_polygon	CImg.h	/^    CImg<T>& draw_polygon(const CImg<t>& points,$/;"	f	struct:cimg_library_suffixed::CImg
draw_ellipse	CImg.h	/^    CImg<T>& draw_ellipse(const int x0, const int y0, const float r1, const float r2, const float angle,$/;"	f	struct:cimg_library_suffixed::CImg
draw_ellipse	CImg.h	/^    CImg<T>& draw_ellipse(const int x0, const int y0, const CImg<t> &tensor,$/;"	f	struct:cimg_library_suffixed::CImg
draw_ellipse	CImg.h	/^    CImg<T>& draw_ellipse(const int x0, const int y0, const float r1, const float r2, const float angle,$/;"	f	struct:cimg_library_suffixed::CImg
draw_ellipse	CImg.h	/^    CImg<T>& draw_ellipse(const int x0, const int y0, const CImg<t> &tensor,$/;"	f	struct:cimg_library_suffixed::CImg
_draw_ellipse	CImg.h	/^    CImg<T>& _draw_ellipse(const int x0, const int y0, const float r1, const float r2, const float angle,$/;"	f	struct:cimg_library_suffixed::CImg
draw_circle	CImg.h	/^    CImg<T>& draw_circle(const int x0, const int y0, int radius,$/;"	f	struct:cimg_library_suffixed::CImg
draw_circle	CImg.h	/^    CImg<T>& draw_circle(const int x0, const int y0, int radius,$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const int x0, const int y0, const int z0, const int c0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const int x0, const int y0, const int z0, const int c0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const int x0, const int y0, const int z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const int x0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const CImg<t>& sprite, const float opacity=1) {$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const int x0, const int y0, const int z0, const int c0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const int x0, const int y0, const int z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const int x0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_image	CImg.h	/^    CImg<T>& draw_image(const CImg<ti>& sprite, const CImg<tm>& mask, const float opacity=1,$/;"	f	struct:cimg_library_suffixed::CImg
draw_text	CImg.h	/^    CImg<T>& draw_text(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_text	CImg.h	/^    CImg<T>& draw_text(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_text	CImg.h	/^    CImg<T>& draw_text(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_text	CImg.h	/^    CImg<T>& draw_text(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_text	CImg.h	/^    CImg<T>& draw_text(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_text	CImg.h	/^    CImg<T>& draw_text(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
_draw_text	CImg.h	/^    CImg<T>& _draw_text(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_quiver	CImg.h	/^    CImg<T>& draw_quiver(const CImg<t1>& flow,$/;"	f	struct:cimg_library_suffixed::CImg
draw_quiver	CImg.h	/^    CImg<T>& draw_quiver(const CImg<t1>& flow,$/;"	f	struct:cimg_library_suffixed::CImg
draw_axis	CImg.h	/^    CImg<T>& draw_axis(const CImg<t>& values_x, const int y,$/;"	f	struct:cimg_library_suffixed::CImg
draw_axis	CImg.h	/^    CImg<T>& draw_axis(const int x, const CImg<t>& values_y,$/;"	f	struct:cimg_library_suffixed::CImg
draw_axes	CImg.h	/^    CImg<T>& draw_axes(const CImg<tx>& values_x, const CImg<ty>& values_y,$/;"	f	struct:cimg_library_suffixed::CImg
draw_axes	CImg.h	/^    CImg<T>& draw_axes(const float x0, const float x1, const float y0, const float y1,$/;"	f	struct:cimg_library_suffixed::CImg
draw_grid	CImg.h	/^    CImg<T>& draw_grid(const CImg<tx>& values_x, const CImg<ty>& values_y,$/;"	f	struct:cimg_library_suffixed::CImg
draw_grid	CImg.h	/^    CImg<T>& draw_grid(const float delta_x,  const float delta_y,$/;"	f	struct:cimg_library_suffixed::CImg
draw_graph	CImg.h	/^    CImg<T>& draw_graph(const CImg<t>& data,$/;"	f	struct:cimg_library_suffixed::CImg
_draw_fill	CImg.h	/^    bool _draw_fill(const int x, const int y, const int z,$/;"	f	struct:cimg_library_suffixed::CImg
draw_fill	CImg.h	/^    CImg<T>& draw_fill(const int x0, const int y0, const int z0,$/;"	f	struct:cimg_library_suffixed::CImg
_draw_fill_push	CImg.h	45937;"	d
_draw_fill_pop	CImg.h	45939;"	d
_draw_fill_is_inside	CImg.h	45940;"	d
draw_fill	CImg.h	/^    CImg<T>& draw_fill(const int x0, const int y0, const int z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_fill	CImg.h	/^    CImg<T>& draw_fill(const int x0, const int y0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_plasma	CImg.h	/^    CImg<T>& draw_plasma(const float alpha=1, const float beta=0, const unsigned int scale=8) {$/;"	f	struct:cimg_library_suffixed::CImg
draw_mandelbrot	CImg.h	/^    CImg<T>& draw_mandelbrot(const int x0, const int y0, const int x1, const int y1,$/;"	f	struct:cimg_library_suffixed::CImg
draw_mandelbrot	CImg.h	/^    CImg<T>& draw_mandelbrot(const CImg<tc>& colormap, const float opacity=1,$/;"	f	struct:cimg_library_suffixed::CImg
draw_gaussian	CImg.h	/^    CImg<T>& draw_gaussian(const float xc, const float sigma,$/;"	f	struct:cimg_library_suffixed::CImg
draw_gaussian	CImg.h	/^    CImg<T>& draw_gaussian(const float xc, const float yc, const CImg<t>& tensor,$/;"	f	struct:cimg_library_suffixed::CImg
draw_gaussian	CImg.h	/^    CImg<T>& draw_gaussian(const int xc, const int yc, const float r1, const float r2, const float ru, const float rv,$/;"	f	struct:cimg_library_suffixed::CImg
draw_gaussian	CImg.h	/^    CImg<T>& draw_gaussian(const float xc, const float yc, const float sigma,$/;"	f	struct:cimg_library_suffixed::CImg
draw_gaussian	CImg.h	/^    CImg<T>& draw_gaussian(const float xc, const float yc, const float zc, const CImg<t>& tensor,$/;"	f	struct:cimg_library_suffixed::CImg
draw_gaussian	CImg.h	/^    CImg<T>& draw_gaussian(const float xc, const float yc, const float zc, const float sigma,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(const float x0, const float y0, const float z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(const float x0, const float y0, const float z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(LibBoard::Board& board,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(LibBoard::Board& board,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(const float x0, const float y0, const float z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(const float x0, const float y0, const float z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(LibBoard::Board& board,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(LibBoard::Board& board,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(const float x0, const float y0, const float z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(const float x0, const float y0, const float z0,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(LibBoard::Board& board,$/;"	f	struct:cimg_library_suffixed::CImg
draw_object3d	CImg.h	/^    CImg<T>& draw_object3d(LibBoard::Board& board,$/;"	f	struct:cimg_library_suffixed::CImg
__draw_object3d	CImg.h	/^    static float __draw_object3d(const CImgList<t>& opacities, const unsigned int n_primitive, CImg<to>& opacity) {$/;"	f	struct:cimg_library_suffixed::CImg
__draw_object3d	CImg.h	/^    static float __draw_object3d(const CImg<t>& opacities, const unsigned int n_primitive, CImg<to>& opacity) {$/;"	f	struct:cimg_library_suffixed::CImg
___draw_object3d	CImg.h	/^    static float ___draw_object3d(const CImgList<t>& opacities, const unsigned int n_primitive) {$/;"	f	struct:cimg_library_suffixed::CImg
___draw_object3d	CImg.h	/^    static float ___draw_object3d(const CImg<t>& opacities, const unsigned int n_primitive) {$/;"	f	struct:cimg_library_suffixed::CImg
_draw_object3d	CImg.h	/^    CImg<T>& _draw_object3d(void *const pboard, CImg<tz>& zbuffer,$/;"	f	struct:cimg_library_suffixed::CImg
select	CImg.h	/^    CImg<T>& select(CImgDisplay &disp,$/;"	f	struct:cimg_library_suffixed::CImg
select	CImg.h	/^    CImg<T>& select(const char *const title,$/;"	f	struct:cimg_library_suffixed::CImg
get_select	CImg.h	/^    CImg<intT> get_select(CImgDisplay &disp,$/;"	f	struct:cimg_library_suffixed::CImg
get_select	CImg.h	/^    CImg<intT> get_select(const char *const title,$/;"	f	struct:cimg_library_suffixed::CImg
_select	CImg.h	/^    CImg<intT> _select(CImgDisplay &disp, const char *const title,$/;"	f	struct:cimg_library_suffixed::CImg
__get_select	CImg.h	/^    CImg<ucharT> __get_select(const CImgDisplay& disp, const int normalization,$/;"	f	struct:cimg_library_suffixed::CImg
get_select_graph	CImg.h	/^    CImg<intT> get_select_graph(CImgDisplay &disp,$/;"	f	struct:cimg_library_suffixed::CImg
load	CImg.h	/^    CImg<T>& load(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load	CImg.h	/^    static CImg<T> get_load(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_ascii	CImg.h	/^    CImg<T>& load_ascii(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_ascii	CImg.h	/^    static CImg<T> get_load_ascii(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_ascii	CImg.h	/^    CImg<T>& load_ascii(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_ascii	CImg.h	/^    static CImg<T> get_load_ascii(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_ascii	CImg.h	/^    CImg<T>& _load_ascii(std::FILE *const file, const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_dlm	CImg.h	/^    CImg<T>& load_dlm(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_dlm	CImg.h	/^    static CImg<T> get_load_dlm(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_dlm	CImg.h	/^    CImg<T>& load_dlm(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_dlm	CImg.h	/^    static CImg<T> get_load_dlm(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_dlm	CImg.h	/^    CImg<T>& _load_dlm(std::FILE *const file, const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_bmp	CImg.h	/^    CImg<T>& load_bmp(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_bmp	CImg.h	/^    static CImg<T> get_load_bmp(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_bmp	CImg.h	/^    CImg<T>& load_bmp(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_bmp	CImg.h	/^    static CImg<T> get_load_bmp(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_bmp	CImg.h	/^    CImg<T>& _load_bmp(std::FILE *const file, const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_jpeg	CImg.h	/^    CImg<T>& load_jpeg(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_jpeg	CImg.h	/^    static CImg<T> get_load_jpeg(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_jpeg	CImg.h	/^    CImg<T>& load_jpeg(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_jpeg	CImg.h	/^    static CImg<T> get_load_jpeg(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_error_mgr	CImg.h	/^    struct _cimg_error_mgr {$/;"	s	struct:cimg_library_suffixed::CImg
original	CImg.h	/^      struct jpeg_error_mgr original;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_error_mgr	typeref:struct:cimg_library_suffixed::CImg::_cimg_error_mgr::jpeg_error_mgr
setjmp_buffer	CImg.h	/^      jmp_buf setjmp_buffer;$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_error_mgr
message	CImg.h	/^      char message[JMSG_LENGTH_MAX];$/;"	m	struct:cimg_library_suffixed::CImg::_cimg_error_mgr
_cimg_error_ptr	CImg.h	/^    typedef struct _cimg_error_mgr *_cimg_error_ptr;$/;"	t	struct:cimg_library_suffixed::CImg	typeref:struct:cimg_library_suffixed::CImg::_cimg_error_mgr
_cimg_jpeg_error_exit	CImg.h	/^    METHODDEF(void) _cimg_jpeg_error_exit(j_common_ptr cinfo) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_jpeg	CImg.h	/^    CImg<T>& _load_jpeg(std::FILE *const file, const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_magick	CImg.h	/^    CImg<T>& load_magick(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_magick	CImg.h	/^    static CImg<T> get_load_magick(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_png	CImg.h	/^    CImg<T>& load_png(const char *const filename, unsigned int *const bits_per_pixel=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_png	CImg.h	/^    static CImg<T> get_load_png(const char *const filename, unsigned int *const bits_per_pixel=0) {$/;"	f	struct:cimg_library_suffixed::CImg
load_png	CImg.h	/^    CImg<T>& load_png(std::FILE *const file, unsigned int *const bits_per_pixel=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_png	CImg.h	/^    static CImg<T> get_load_png(std::FILE *const file, unsigned int *const bits_per_pixel=0) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_png	CImg.h	/^    CImg<T>& _load_png(std::FILE *const file, const char *const filename, unsigned int *const bits_per_pixel) {$/;"	f	struct:cimg_library_suffixed::CImg
load_pnm	CImg.h	/^    CImg<T>& load_pnm(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_pnm	CImg.h	/^    static CImg<T> get_load_pnm(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_pnm	CImg.h	/^    CImg<T>& load_pnm(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_pnm	CImg.h	/^    static CImg<T> get_load_pnm(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_pnm	CImg.h	/^    CImg<T>& _load_pnm(std::FILE *const file, const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_pfm	CImg.h	/^    CImg<T>& load_pfm(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_pfm	CImg.h	/^    static CImg<T> get_load_pfm(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_pfm	CImg.h	/^    CImg<T>& load_pfm(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_pfm	CImg.h	/^    static CImg<T> get_load_pfm(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_pfm	CImg.h	/^    CImg<T>& _load_pfm(std::FILE *const file, const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_rgb	CImg.h	/^    CImg<T>& load_rgb(const char *const filename, const unsigned int dimw, const unsigned int dimh=1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_rgb	CImg.h	/^    static CImg<T> get_load_rgb(const char *const filename, const unsigned int dimw, const unsigned int dimh=1) {$/;"	f	struct:cimg_library_suffixed::CImg
load_rgb	CImg.h	/^    CImg<T>& load_rgb(std::FILE *const file, const unsigned int dimw, const unsigned int dimh=1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_rgb	CImg.h	/^    static CImg<T> get_load_rgb(std::FILE *const file, const unsigned int dimw, const unsigned int dimh=1) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_rgb	CImg.h	/^    CImg<T>& _load_rgb(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
load_rgba	CImg.h	/^    CImg<T>& load_rgba(const char *const filename, const unsigned int dimw, const unsigned int dimh=1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_rgba	CImg.h	/^    static CImg<T> get_load_rgba(const char *const filename, const unsigned int dimw, const unsigned int dimh=1) {$/;"	f	struct:cimg_library_suffixed::CImg
load_rgba	CImg.h	/^    CImg<T>& load_rgba(std::FILE *const file, const unsigned int dimw, const unsigned int dimh=1) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_rgba	CImg.h	/^    static CImg<T> get_load_rgba(std::FILE *const file, const unsigned int dimw, const unsigned int dimh=1) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_rgba	CImg.h	/^    CImg<T>& _load_rgba(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
load_tiff	CImg.h	/^    CImg<T>& load_tiff(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
get_load_tiff	CImg.h	/^    static CImg<T> get_load_tiff(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
_load_tiff_tiled_contig	CImg.h	/^    void _load_tiff_tiled_contig(TIFF *const tif, const uint16 samplesperpixel,$/;"	f	struct:cimg_library_suffixed::CImg
_load_tiff_tiled_separate	CImg.h	/^    void _load_tiff_tiled_separate(TIFF *const tif, const uint16 samplesperpixel,$/;"	f	struct:cimg_library_suffixed::CImg
_load_tiff_contig	CImg.h	/^    void _load_tiff_contig(TIFF *const tif, const uint16 samplesperpixel, const uint32 nx, const uint32 ny) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_tiff_separate	CImg.h	/^    void _load_tiff_separate(TIFF *const tif, const uint16 samplesperpixel, const uint32 nx, const uint32 ny) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_tiff	CImg.h	/^    CImg<T>& _load_tiff(TIFF *const tif, const unsigned int directory,$/;"	f	struct:cimg_library_suffixed::CImg
load_minc2	CImg.h	/^    CImg<T>& load_minc2(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_minc2	CImg.h	/^    static CImg<T> get_load_minc2(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_analyze	CImg.h	/^    CImg<T>& load_analyze(const char *const filename, float *const voxel_size=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_analyze	CImg.h	/^    static CImg<T> get_load_analyze(const char *const filename, float *const voxel_size=0) {$/;"	f	struct:cimg_library_suffixed::CImg
load_analyze	CImg.h	/^    CImg<T>& load_analyze(std::FILE *const file, float *const voxel_size=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_analyze	CImg.h	/^    static CImg<T> get_load_analyze(std::FILE *const file, float *const voxel_size=0) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_analyze	CImg.h	/^    CImg<T>& _load_analyze(std::FILE *const file, const char *const filename, float *const voxel_size=0) {$/;"	f	struct:cimg_library_suffixed::CImg
load_cimg	CImg.h	/^    CImg<T>& load_cimg(const char *const filename, const char axis='z', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_cimg	CImg.h	/^    static CImg<T> get_load_cimg(const char *const filename, const char axis='z', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImg
load_cimg	CImg.h	/^    CImg<T>& load_cimg(std::FILE *const file, const char axis='z', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_cimg	CImg.h	/^    static CImg<T> get_load_cimg(std::FILE *const file, const char axis='z', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImg
load_cimg	CImg.h	/^    CImg<T>& load_cimg(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
get_load_cimg	CImg.h	/^    static CImg<T> get_load_cimg(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
load_cimg	CImg.h	/^    CImg<T>& load_cimg(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImg
get_load_cimg	CImg.h	/^    static CImg<T> get_load_cimg(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImg
load_inr	CImg.h	/^    CImg<T>& load_inr(const char *const filename, float *const voxel_size=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_inr	CImg.h	/^    static CImg<T> get_load_inr(const char *const filename, float *const voxel_size=0) {$/;"	f	struct:cimg_library_suffixed::CImg
load_inr	CImg.h	/^    CImg<T>& load_inr(std::FILE *const file, float *const voxel_size=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_inr	CImg.h	/^    static CImg<T> get_load_inr(std::FILE *const file, float *voxel_size=0) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_inr_header	CImg.h	/^    static void _load_inr_header(std::FILE *file, int out[8], float *const voxel_size) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_inr	CImg.h	/^    CImg<T>& _load_inr(std::FILE *const file, const char *const filename, float *const voxel_size) {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_load_inr_case	CImg.h	50794;"	d
load_exr	CImg.h	/^    CImg<T>& load_exr(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_exr	CImg.h	/^    static CImg<T> get_load_exr(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_pandore	CImg.h	/^    CImg<T>& load_pandore(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_pandore	CImg.h	/^    static CImg<T> get_load_pandore(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_pandore	CImg.h	/^    CImg<T>& load_pandore(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_pandore	CImg.h	/^    static CImg<T> get_load_pandore(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_pandore	CImg.h	/^    CImg<T>& _load_pandore(std::FILE *const file, const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
__cimg_load_pandore_case	CImg.h	50910;"	d
_cimg_load_pandore_case	CImg.h	50923;"	d
load_parrec	CImg.h	/^    CImg<T>& load_parrec(const char *const filename, const char axis='c', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_parrec	CImg.h	/^    static CImg<T> get_load_parrec(const char *const filename, const char axis='c', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImg
load_raw	CImg.h	/^    CImg<T>& load_raw(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
get_load_raw	CImg.h	/^    static CImg<T> get_load_raw(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
load_raw	CImg.h	/^    CImg<T>& load_raw(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImg
get_load_raw	CImg.h	/^    static CImg<T> get_load_raw(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImg
_load_raw	CImg.h	/^    CImg<T>& _load_raw(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
load_yuv	CImg.h	/^    CImg<T>& load_yuv(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
get_load_yuv	CImg.h	/^    static CImg<T> get_load_yuv(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
load_yuv	CImg.h	/^    CImg<T>& load_yuv(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImg
get_load_yuv	CImg.h	/^    static CImg<T> get_load_yuv(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImg
load_off	CImg.h	/^    CImg<T>& load_off(CImgList<tf>& primitives, CImgList<tc>& colors, const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_off	CImg.h	/^    static CImg<T> get_load_off(CImgList<tf>& primitives, CImgList<tc>& colors, const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_off	CImg.h	/^    CImg<T>& load_off(CImgList<tf>& primitives, CImgList<tc>& colors, std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_off	CImg.h	/^    static CImg<T> get_load_off(CImgList<tf>& primitives, CImgList<tc>& colors, std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImg
_load_off	CImg.h	/^    CImg<T>& _load_off(CImgList<tf>& primitives, CImgList<tc>& colors,$/;"	f	struct:cimg_library_suffixed::CImg
load_video	CImg.h	/^    CImg<T>& load_video(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
get_load_video	CImg.h	/^    static CImg<T> get_load_video(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
load_ffmpeg_external	CImg.h	/^    CImg<T>& load_ffmpeg_external(const char *const filename, const char axis='z', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_ffmpeg_external	CImg.h	/^    static CImg<T> get_load_ffmpeg_external(const char *const filename, const char axis='z', const float align=0) {$/;"	f	struct:cimg_library_suffixed::CImg
load_gif_external	CImg.h	/^    CImg<T>& load_gif_external(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
get_load_gif_external	CImg.h	/^    static CImg<T> get_load_gif_external(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
load_graphicsmagick_external	CImg.h	/^    CImg<T>& load_graphicsmagick_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_graphicsmagick_external	CImg.h	/^    static CImg<T> get_load_graphicsmagick_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_gzip_external	CImg.h	/^    CImg<T>& load_gzip_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_gzip_external	CImg.h	/^    static CImg<T> get_load_gzip_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_imagemagick_external	CImg.h	/^    CImg<T>& load_imagemagick_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_imagemagick_external	CImg.h	/^    static CImg<T> get_load_imagemagick_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_medcon_external	CImg.h	/^    CImg<T>& load_medcon_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_medcon_external	CImg.h	/^    static CImg<T> get_load_medcon_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_dcraw_external	CImg.h	/^    CImg<T>& load_dcraw_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_dcraw_external	CImg.h	/^    static CImg<T> get_load_dcraw_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
load_camera	CImg.h	/^    CImg<T>& load_camera(const unsigned int camera_index=0, const unsigned int skip_frames=0,$/;"	f	struct:cimg_library_suffixed::CImg
get_load_camera	CImg.h	/^    static CImg<T> get_load_camera(const unsigned int camera_index=0, const unsigned int skip_frames=0,$/;"	f	struct:cimg_library_suffixed::CImg
load_other	CImg.h	/^    CImg<T>& load_other(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
get_load_other	CImg.h	/^    static CImg<T> get_load_other(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImg
print	CImg.h	/^    const CImg<T>& print(const char *const title=0, const bool display_stats=true) const {$/;"	f	struct:cimg_library_suffixed::CImg
display	CImg.h	/^    const CImg<T>& display(CImgDisplay& disp) const {$/;"	f	struct:cimg_library_suffixed::CImg
display	CImg.h	/^    const CImg<T>& display(CImgDisplay &disp, const bool display_info, unsigned int *const XYZ=0,$/;"	f	struct:cimg_library_suffixed::CImg
display	CImg.h	/^    const CImg<T>& display(const char *const title=0, const bool display_info=true, unsigned int *const XYZ=0,$/;"	f	struct:cimg_library_suffixed::CImg
_display	CImg.h	/^    const CImg<T>& _display(CImgDisplay &disp, const char *const title, const bool display_info,$/;"	f	struct:cimg_library_suffixed::CImg
display_object3d	CImg.h	/^    const CImg<T>& display_object3d(CImgDisplay& disp,$/;"	f	struct:cimg_library_suffixed::CImg
display_object3d	CImg.h	/^    const CImg<T>& display_object3d(const char *const title,$/;"	f	struct:cimg_library_suffixed::CImg
display_object3d	CImg.h	/^    const CImg<T>& display_object3d(CImgDisplay &disp,$/;"	f	struct:cimg_library_suffixed::CImg
display_object3d	CImg.h	/^    const CImg<T>& display_object3d(const char *const title,$/;"	f	struct:cimg_library_suffixed::CImg
display_object3d	CImg.h	/^    const CImg<T>& display_object3d(CImgDisplay &disp,$/;"	f	struct:cimg_library_suffixed::CImg
display_object3d	CImg.h	/^    const CImg<T>& display_object3d(const char *const title,$/;"	f	struct:cimg_library_suffixed::CImg
display_object3d	CImg.h	/^    const CImg<T>& display_object3d(CImgDisplay &disp,$/;"	f	struct:cimg_library_suffixed::CImg
display_object3d	CImg.h	/^    const CImg<T>& display_object3d(const char *const title,$/;"	f	struct:cimg_library_suffixed::CImg
_display_object3d	CImg.h	/^    const CImg<T>& _display_object3d(CImgDisplay& disp, const char *const title,$/;"	f	struct:cimg_library_suffixed::CImg
display_graph	CImg.h	/^    const CImg<T>& display_graph(CImgDisplay &disp,$/;"	f	struct:cimg_library_suffixed::CImg
display_graph	CImg.h	/^    const CImg<T>& display_graph(const char *const title=0,$/;"	f	struct:cimg_library_suffixed::CImg
_display_graph	CImg.h	/^    const CImg<T>& _display_graph(CImgDisplay &disp, const char *const title=0,$/;"	f	struct:cimg_library_suffixed::CImg
save	CImg.h	/^    const CImg<T>& save(const char *const filename, const int number=-1, const unsigned int digits=6) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_ascii	CImg.h	/^    const CImg<T>& save_ascii(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_ascii	CImg.h	/^    const CImg<T>& save_ascii(std::FILE *const file) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_ascii	CImg.h	/^    const CImg<T>& _save_ascii(std::FILE *const file, const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_cpp	CImg.h	/^    const CImg<T>& save_cpp(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_cpp	CImg.h	/^    const CImg<T>& save_cpp(std::FILE *const file) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_cpp	CImg.h	/^    const CImg<T>& _save_cpp(std::FILE *const file, const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_dlm	CImg.h	/^    const CImg<T>& save_dlm(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_dlm	CImg.h	/^    const CImg<T>& save_dlm(std::FILE *const file) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_dlm	CImg.h	/^    const CImg<T>& _save_dlm(std::FILE *const file, const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_bmp	CImg.h	/^    const CImg<T>& save_bmp(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_bmp	CImg.h	/^    const CImg<T>& save_bmp(std::FILE *const file) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_bmp	CImg.h	/^    const CImg<T>& _save_bmp(std::FILE *const file, const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_jpeg	CImg.h	/^    const CImg<T>& save_jpeg(const char *const filename, const unsigned int quality=100) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_jpeg	CImg.h	/^    const CImg<T>& save_jpeg(std::FILE *const file, const unsigned int quality=100) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_jpeg	CImg.h	/^    const CImg<T>& _save_jpeg(std::FILE *const file, const char *const filename, const unsigned int quality) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_magick	CImg.h	/^    const CImg<T>& save_magick(const char *const filename, const unsigned int bytes_per_pixel=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_png	CImg.h	/^    const CImg<T>& save_png(const char *const filename, const unsigned int bytes_per_pixel=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_png	CImg.h	/^    const CImg<T>& save_png(std::FILE *const file, const unsigned int bytes_per_pixel=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_png	CImg.h	/^    const CImg<T>& _save_png(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
save_pnm	CImg.h	/^    const CImg<T>& save_pnm(const char *const filename, const unsigned int bytes_per_pixel=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_pnm	CImg.h	/^    const CImg<T>& save_pnm(std::FILE *const file, const unsigned int bytes_per_pixel=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_pnm	CImg.h	/^    const CImg<T>& _save_pnm(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
save_pnk	CImg.h	/^    const CImg<T>& save_pnk(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_pnk	CImg.h	/^    const CImg<T>& save_pnk(std::FILE *const file) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_pnk	CImg.h	/^    const CImg<T>& _save_pnk(std::FILE *const file, const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_pfm	CImg.h	/^    const CImg<T>& save_pfm(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_pfm	CImg.h	/^    const CImg<T>& save_pfm(std::FILE *const file) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_pfm	CImg.h	/^    const CImg<T>& _save_pfm(std::FILE *const file, const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_rgb	CImg.h	/^    const CImg<T>& save_rgb(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_rgb	CImg.h	/^    const CImg<T>& save_rgb(std::FILE *const file) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_rgb	CImg.h	/^    const CImg<T>& _save_rgb(std::FILE *const file, const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_rgba	CImg.h	/^    const CImg<T>& save_rgba(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_rgba	CImg.h	/^    const CImg<T>& save_rgba(std::FILE *const file) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_rgba	CImg.h	/^    const CImg<T>& _save_rgba(std::FILE *const file, const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_tiff	CImg.h	/^    const CImg<T>& save_tiff(const char *const filename, const unsigned int compression_type=0,$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_save_tiff	CImg.h	54272;"	d
_save_tiff	CImg.h	/^    const CImg<T>& _save_tiff(TIFF *tif, const unsigned int directory, const unsigned int z, const t& pixel_t,$/;"	f	struct:cimg_library_suffixed::CImg
_save_tiff	CImg.h	/^    const CImg<T>& _save_tiff(TIFF *tif, const unsigned int directory, const unsigned int z,$/;"	f	struct:cimg_library_suffixed::CImg
save_minc2	CImg.h	/^    const CImg<T>& save_minc2(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
save_analyze	CImg.h	/^    const CImg<T>& save_analyze(const char *const filename, const float *const voxel_size=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_cimg	CImg.h	/^    const CImg<T>& save_cimg(const char *const filename, const bool is_compressed=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_cimg	CImg.h	/^    const CImg<T>& save_cimg(std::FILE *const file, const bool is_compressed=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_cimg	CImg.h	/^    const CImg<T>& save_cimg(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
save_cimg	CImg.h	/^    const CImg<T>& save_cimg(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImg
save_empty_cimg	CImg.h	/^    static void save_empty_cimg(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
save_empty_cimg	CImg.h	/^    static void save_empty_cimg(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImg
save_inr	CImg.h	/^    const CImg<T>& save_inr(const char *const filename, const float *const voxel_size=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_inr	CImg.h	/^    const CImg<T>& save_inr(std::FILE *const file, const float *const voxel_size=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_inr	CImg.h	/^    const CImg<T>& _save_inr(std::FILE *const file, const char *const filename, const float *const voxel_size) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_exr	CImg.h	/^    const CImg<T>& save_exr(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_pandore	CImg.h	/^    const CImg<T>& save_pandore(const char *const filename, const unsigned int colorspace=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_pandore	CImg.h	/^    const CImg<T>& save_pandore(std::FILE *const file, const unsigned int colorspace=0) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_pandore_header_length	CImg.h	/^    unsigned int _save_pandore_header_length(unsigned int id, unsigned int *dims, const unsigned int colorspace) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_pandore	CImg.h	/^    const CImg<T>& _save_pandore(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
__cimg_save_pandore_case	CImg.h	54744;"	d
_cimg_save_pandore_case	CImg.h	54752;"	d
save_raw	CImg.h	/^    const CImg<T>& save_raw(const char *const filename, const bool is_multiplexed=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_raw	CImg.h	/^    const CImg<T>& save_raw(std::FILE *const file, const bool is_multiplexed=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
_save_raw	CImg.h	/^    const CImg<T>& _save_raw(std::FILE *const file, const char *const filename, const bool is_multiplexed) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_yuv	CImg.h	/^    const CImg<T>& save_yuv(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImg
save_yuv	CImg.h	/^    const CImg<T>& save_yuv(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImg
save_off	CImg.h	/^    const CImg<T>& save_off(const CImgList<tf>& primitives, const CImgList<tc>& colors,$/;"	f	struct:cimg_library_suffixed::CImg
save_off	CImg.h	/^    const CImg<T>& save_off(const CImgList<tf>& primitives, const CImgList<tc>& colors,$/;"	f	struct:cimg_library_suffixed::CImg
_save_off	CImg.h	/^    const CImg<T>& _save_off(const CImgList<tf>& primitives, const CImgList<tc>& colors,$/;"	f	struct:cimg_library_suffixed::CImg
save_video	CImg.h	/^    const CImg<T>& save_video(const char *const filename, const unsigned int fps=25,$/;"	f	struct:cimg_library_suffixed::CImg
save_ffmpeg_external	CImg.h	/^    const CImg<T>& save_ffmpeg_external(const char *const filename, const unsigned int fps=25,$/;"	f	struct:cimg_library_suffixed::CImg
save_gzip_external	CImg.h	/^    const CImg<T>& save_gzip_external(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_graphicsmagick_external	CImg.h	/^    const CImg<T>& save_graphicsmagick_external(const char *const filename, const unsigned int quality=100) const {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_sge_ext1	CImg.h	55182;"	d
_cimg_sge_ext2	CImg.h	55183;"	d
save_imagemagick_external	CImg.h	/^    const CImg<T>& save_imagemagick_external(const char *const filename, const unsigned int quality=100) const {$/;"	f	struct:cimg_library_suffixed::CImg
_cimg_sie_ext1	CImg.h	55238;"	d
_cimg_sie_ext2	CImg.h	55239;"	d
save_medcon_external	CImg.h	/^    const CImg<T>& save_medcon_external(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImg
save_other	CImg.h	/^    const CImg<T>& save_other(const char *const filename, const unsigned int quality=100) const {$/;"	f	struct:cimg_library_suffixed::CImg
get_serialize	CImg.h	/^    CImg<ucharT> get_serialize(const bool is_compressed=false) const {$/;"	f	struct:cimg_library_suffixed::CImg
_logo40x38	CImg.h	/^    static CImg<T> _logo40x38() {$/;"	f	struct:cimg_library_suffixed::CImg
CImgList	CImg.h	/^  struct CImgList {$/;"	s	namespace:cimg_library_suffixed
_width	CImg.h	/^    unsigned int _width, _allocated_width;$/;"	m	struct:cimg_library_suffixed::CImgList
_allocated_width	CImg.h	/^    unsigned int _width, _allocated_width;$/;"	m	struct:cimg_library_suffixed::CImgList
_data	CImg.h	/^    CImg<T> *_data;$/;"	m	struct:cimg_library_suffixed::CImgList
iterator	CImg.h	/^    typedef CImg<T>* iterator;$/;"	t	struct:cimg_library_suffixed::CImgList
const_iterator	CImg.h	/^    typedef const CImg<T>* const_iterator;$/;"	t	struct:cimg_library_suffixed::CImgList
value_type	CImg.h	/^    typedef T value_type;$/;"	t	struct:cimg_library_suffixed::CImgList
Tbool	CImg.h	/^    typedef typename cimg::superset<T,bool>::type Tbool;$/;"	t	struct:cimg_library_suffixed::CImgList
Tuchar	CImg.h	/^    typedef typename cimg::superset<T,unsigned char>::type Tuchar;$/;"	t	struct:cimg_library_suffixed::CImgList
Tchar	CImg.h	/^    typedef typename cimg::superset<T,char>::type Tchar;$/;"	t	struct:cimg_library_suffixed::CImgList
Tushort	CImg.h	/^    typedef typename cimg::superset<T,unsigned short>::type Tushort;$/;"	t	struct:cimg_library_suffixed::CImgList
Tshort	CImg.h	/^    typedef typename cimg::superset<T,short>::type Tshort;$/;"	t	struct:cimg_library_suffixed::CImgList
Tuint	CImg.h	/^    typedef typename cimg::superset<T,unsigned int>::type Tuint;$/;"	t	struct:cimg_library_suffixed::CImgList
Tint	CImg.h	/^    typedef typename cimg::superset<T,int>::type Tint;$/;"	t	struct:cimg_library_suffixed::CImgList
Tulong	CImg.h	/^    typedef typename cimg::superset<T,cimg_ulong>::type Tulong;$/;"	t	struct:cimg_library_suffixed::CImgList
Tlong	CImg.h	/^    typedef typename cimg::superset<T,cimg_long>::type Tlong;$/;"	t	struct:cimg_library_suffixed::CImgList
Tfloat	CImg.h	/^    typedef typename cimg::superset<T,float>::type Tfloat;$/;"	t	struct:cimg_library_suffixed::CImgList
Tdouble	CImg.h	/^    typedef typename cimg::superset<T,double>::type Tdouble;$/;"	t	struct:cimg_library_suffixed::CImgList
boolT	CImg.h	/^    typedef typename cimg::last<T,bool>::type boolT;$/;"	t	struct:cimg_library_suffixed::CImgList
ucharT	CImg.h	/^    typedef typename cimg::last<T,unsigned char>::type ucharT;$/;"	t	struct:cimg_library_suffixed::CImgList
charT	CImg.h	/^    typedef typename cimg::last<T,char>::type charT;$/;"	t	struct:cimg_library_suffixed::CImgList
ushortT	CImg.h	/^    typedef typename cimg::last<T,unsigned short>::type ushortT;$/;"	t	struct:cimg_library_suffixed::CImgList
shortT	CImg.h	/^    typedef typename cimg::last<T,short>::type shortT;$/;"	t	struct:cimg_library_suffixed::CImgList
uintT	CImg.h	/^    typedef typename cimg::last<T,unsigned int>::type uintT;$/;"	t	struct:cimg_library_suffixed::CImgList
intT	CImg.h	/^    typedef typename cimg::last<T,int>::type intT;$/;"	t	struct:cimg_library_suffixed::CImgList
ulongT	CImg.h	/^    typedef typename cimg::last<T,cimg_ulong>::type ulongT;$/;"	t	struct:cimg_library_suffixed::CImgList
longT	CImg.h	/^    typedef typename cimg::last<T,cimg_long>::type longT;$/;"	t	struct:cimg_library_suffixed::CImgList
uint64T	CImg.h	/^    typedef typename cimg::last<T,cimg_uint64>::type uint64T;$/;"	t	struct:cimg_library_suffixed::CImgList
int64T	CImg.h	/^    typedef typename cimg::last<T,cimg_int64>::type int64T;$/;"	t	struct:cimg_library_suffixed::CImgList
floatT	CImg.h	/^    typedef typename cimg::last<T,float>::type floatT;$/;"	t	struct:cimg_library_suffixed::CImgList
doubleT	CImg.h	/^    typedef typename cimg::last<T,double>::type doubleT;$/;"	t	struct:cimg_library_suffixed::CImgList
~CImgList	CImg.h	/^    ~CImgList() {$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList():$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    explicit CImgList(const unsigned int n):_width(n) {$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const unsigned int n, const unsigned int width, const unsigned int height=1,$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const unsigned int n, const unsigned int width, const unsigned int height,$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const unsigned int n, const unsigned int width, const unsigned int height,$/;"	f	struct:cimg_library_suffixed::CImgList
_CImgList_stdarg	CImg.h	55595;"	d
CImgList	CImg.h	/^    CImgList(const unsigned int n, const unsigned int width, const unsigned int height,$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const unsigned int n, const CImg<t>& img, const bool is_shared=false):$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    explicit CImgList(const CImg<t>& img, const bool is_shared=false):$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const CImg<t1>& img1, const CImg<t2>& img2, const bool is_shared=false):$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const bool is_shared=false):$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const CImg<t4>& img4,$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const CImg<t4>& img4,$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const CImg<t4>& img4,$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const CImg<t4>& img4,$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const CImg<t4>& img4,$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const CImgList<t>& list):_width(0),_allocated_width(0),_data(0) {$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const CImgList<T>& list):_width(0),_allocated_width(0),_data(0) {$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    CImgList(const CImgList<t>& list, const bool is_shared):_width(0),_allocated_width(0),_data(0) {$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    explicit CImgList(const char *const filename):_width(0),_allocated_width(0),_data(0) {$/;"	f	struct:cimg_library_suffixed::CImgList
CImgList	CImg.h	/^    explicit CImgList(const CImgDisplay& disp):_width(0),_allocated_width(0),_data(0) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_shared	CImg.h	/^    CImgList<T> get_shared() {$/;"	f	struct:cimg_library_suffixed::CImgList
get_shared	CImg.h	/^    const CImgList<T> get_shared() const {$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign() {$/;"	f	struct:cimg_library_suffixed::CImgList
clear	CImg.h	/^    CImgList<T>& clear() {$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const unsigned int n) {$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const unsigned int n, const unsigned int width, const unsigned int height=1,$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const unsigned int n, const unsigned int width, const unsigned int height,$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const unsigned int n, const unsigned int width, const unsigned int height,$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const unsigned int n, const unsigned int width, const unsigned int height,$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const unsigned int n, const CImg<t>& img, const bool is_shared=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImg<t>& img, const bool is_shared=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImg<t1>& img1, const CImg<t2>& img2, const bool is_shared=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const bool is_shared=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const CImg<t4>& img4,$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const CImg<t4>& img4,$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const CImg<t4>& img4,$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const CImg<t4>& img4,$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImg<t1>& img1, const CImg<t2>& img2, const CImg<t3>& img3, const CImg<t4>& img4,$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImgList<t>& list, const bool is_shared=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImgList<T>& list, const bool is_shared=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
assign	CImg.h	/^    CImgList<T>& assign(const CImgDisplay &disp) {$/;"	f	struct:cimg_library_suffixed::CImgList
move_to	CImg.h	/^    CImgList<t>& move_to(CImgList<t>& list) {$/;"	f	struct:cimg_library_suffixed::CImgList
move_to	CImg.h	/^    CImgList<t>& move_to(CImgList<t>& list, const unsigned int pos) {$/;"	f	struct:cimg_library_suffixed::CImgList
swap	CImg.h	/^    CImgList<T>& swap(CImgList<T>& list) {$/;"	f	struct:cimg_library_suffixed::CImgList
empty	CImg.h	/^    static CImgList<T>& empty() {$/;"	f	struct:cimg_library_suffixed::CImgList
const_empty	CImg.h	/^    static const CImgList<T>& const_empty() {$/;"	f	struct:cimg_library_suffixed::CImgList
operator ()	CImg.h	/^    CImg<T>& operator()(const unsigned int pos) {$/;"	f	struct:cimg_library_suffixed::CImgList
operator ()	CImg.h	/^    const CImg<T>& operator()(const unsigned int pos) const {$/;"	f	struct:cimg_library_suffixed::CImgList
operator ()	CImg.h	/^    T& operator()(const unsigned int pos, const unsigned int x, const unsigned int y=0,$/;"	f	struct:cimg_library_suffixed::CImgList
operator ()	CImg.h	/^    const T& operator()(const unsigned int pos, const unsigned int x, const unsigned int y=0,$/;"	f	struct:cimg_library_suffixed::CImgList
operator CImg<T>*	CImg.h	/^    operator CImg<T>*() {$/;"	f	struct:cimg_library_suffixed::CImgList
operator const CImg<T>*	CImg.h	/^    operator const CImg<T>*() const {$/;"	f	struct:cimg_library_suffixed::CImgList
operator =	CImg.h	/^    CImgList<T>& operator=(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImgList
operator =	CImg.h	/^    CImgList<T>& operator=(const CImgList<t>& list) {$/;"	f	struct:cimg_library_suffixed::CImgList
operator =	CImg.h	/^    CImgList<T>& operator=(const CImgList<T>& list) {$/;"	f	struct:cimg_library_suffixed::CImgList
operator =	CImg.h	/^    CImgList<T>& operator=(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
operator =	CImg.h	/^    CImgList<T>& operator=(const CImgDisplay& disp) {$/;"	f	struct:cimg_library_suffixed::CImgList
operator +	CImg.h	/^    CImgList<T> operator+() const {$/;"	f	struct:cimg_library_suffixed::CImgList
operator ,	CImg.h	/^    CImgList<T>& operator,(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImgList
operator ,	CImg.h	/^    CImgList<T> operator,(const CImg<t>& img) const {$/;"	f	struct:cimg_library_suffixed::CImgList
operator ,	CImg.h	/^    CImgList<T>& operator,(const CImgList<t>& list) {$/;"	f	struct:cimg_library_suffixed::CImgList
operator ,	CImg.h	/^    CImgList<T>& operator,(const CImgList<t>& list) const {$/;"	f	struct:cimg_library_suffixed::CImgList
operator >	CImg.h	/^    CImg<T> operator>(const char axis) const {$/;"	f	struct:cimg_library_suffixed::CImgList
operator <	CImg.h	/^    CImgList<T> operator<(const char axis) const {$/;"	f	struct:cimg_library_suffixed::CImgList
pixel_type	CImg.h	/^    static const char* pixel_type() {$/;"	f	struct:cimg_library_suffixed::CImgList
width	CImg.h	/^    int width() const {$/;"	f	struct:cimg_library_suffixed::CImgList
size	CImg.h	/^    unsigned int size() const {$/;"	f	struct:cimg_library_suffixed::CImgList
data	CImg.h	/^    CImg<T> *data() {$/;"	f	struct:cimg_library_suffixed::CImgList
data	CImg.h	/^    const CImg<T> *data() const {$/;"	f	struct:cimg_library_suffixed::CImgList
data	CImg.h	/^    CImg<T> *data(const unsigned int pos) {$/;"	f	struct:cimg_library_suffixed::CImgList
data	CImg.h	/^    const CImg<T> *data(const unsigned int l) const {$/;"	f	struct:cimg_library_suffixed::CImgList
data	CImg.h	/^    CImg<T> *data(const unsigned int l) {$/;"	f	struct:cimg_library_suffixed::CImgList
data	CImg.h	/^    const CImg<T> *data(const unsigned int l) const {$/;"	f	struct:cimg_library_suffixed::CImgList
begin	CImg.h	/^    iterator begin() {$/;"	f	struct:cimg_library_suffixed::CImgList
begin	CImg.h	/^    const_iterator begin() const {$/;"	f	struct:cimg_library_suffixed::CImgList
end	CImg.h	/^    iterator end() {$/;"	f	struct:cimg_library_suffixed::CImgList
end	CImg.h	/^    const_iterator end() const {$/;"	f	struct:cimg_library_suffixed::CImgList
front	CImg.h	/^    CImg<T>& front() {$/;"	f	struct:cimg_library_suffixed::CImgList
front	CImg.h	/^    const CImg<T>& front() const {$/;"	f	struct:cimg_library_suffixed::CImgList
back	CImg.h	/^    const CImg<T>& back() const {$/;"	f	struct:cimg_library_suffixed::CImgList
back	CImg.h	/^    CImg<T>& back() {$/;"	f	struct:cimg_library_suffixed::CImgList
at	CImg.h	/^    CImg<T>& at(const int pos) {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXYZC	CImg.h	/^    T& atNXYZC(const int pos, const int x, const int y, const int z, const int c, const T& out_value) {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXYZC	CImg.h	/^    T atNXYZC(const int pos, const int x, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXYZC	CImg.h	/^    T& atNXYZC(const int pos, const int x, const int y, const int z, const int c) {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXYZC	CImg.h	/^    T atNXYZC(const int pos, const int x, const int y, const int z, const int c) const {$/;"	f	struct:cimg_library_suffixed::CImgList
_atNXYZC	CImg.h	/^    T& _atNXYZC(const int pos, const int x, const int y, const int z, const int c) {$/;"	f	struct:cimg_library_suffixed::CImgList
_atNXYZC	CImg.h	/^    T _atNXYZC(const int pos, const int x, const int y, const int z, const int c) const {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXYZ	CImg.h	/^    T& atNXYZ(const int pos, const int x, const int y, const int z, const int c, const T& out_value) {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXYZ	CImg.h	/^    T atNXYZ(const int pos, const int x, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXYZ	CImg.h	/^   T& atNXYZ(const int pos, const int x, const int y, const int z, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXYZ	CImg.h	/^    T atNXYZ(const int pos, const int x, const int y, const int z, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
_atNXYZ	CImg.h	/^    T& _atNXYZ(const int pos, const int x, const int y, const int z, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImgList
_atNXYZ	CImg.h	/^    T _atNXYZ(const int pos, const int x, const int y, const int z, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXY	CImg.h	/^    T& atNXY(const int pos, const int x, const int y, const int z, const int c, const T& out_value) {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXY	CImg.h	/^    T atNXY(const int pos, const int x, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXY	CImg.h	/^    T& atNXY(const int pos, const int x, const int y, const int z=0, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImgList
atNXY	CImg.h	/^    T atNXY(const int pos, const int x, const int y, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
_atNXY	CImg.h	/^    T& _atNXY(const int pos, const int x, const int y, const int z=0, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImgList
_atNXY	CImg.h	/^    T _atNXY(const int pos, const int x, const int y, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
atNX	CImg.h	/^    T& atNX(const int pos, const int x, const int y, const int z, const int c, const T& out_value) {$/;"	f	struct:cimg_library_suffixed::CImgList
atNX	CImg.h	/^    T atNX(const int pos, const int x, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImgList
atNX	CImg.h	/^    T& atNX(const int pos, const int x, const int y=0, const int z=0, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImgList
atNX	CImg.h	/^    T atNX(const int pos, const int x, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
_atNX	CImg.h	/^    T& _atNX(const int pos, const int x, const int y=0, const int z=0, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImgList
_atNX	CImg.h	/^    T _atNX(const int pos, const int x, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
atN	CImg.h	/^    T& atN(const int pos, const int x, const int y, const int z, const int c, const T& out_value) {$/;"	f	struct:cimg_library_suffixed::CImgList
atN	CImg.h	/^    T atN(const int pos, const int x, const int y, const int z, const int c, const T& out_value) const {$/;"	f	struct:cimg_library_suffixed::CImgList
atN	CImg.h	/^    T& atN(const int pos, const int x=0, const int y=0, const int z=0, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImgList
atN	CImg.h	/^    T atN(const int pos, const int x=0, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
_atN	CImg.h	/^    T& _atN(const int pos, const int x=0, const int y=0, const int z=0, const int c=0) {$/;"	f	struct:cimg_library_suffixed::CImgList
_atN	CImg.h	/^    T _atN(const int pos, const int x=0, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
is_empty	CImg.h	/^    bool is_empty() const {$/;"	f	struct:cimg_library_suffixed::CImgList
is_sameN	CImg.h	/^    bool is_sameN(const unsigned int size_n) const {$/;"	f	struct:cimg_library_suffixed::CImgList
is_sameN	CImg.h	/^    bool is_sameN(const CImgList<t>& list) const {$/;"	f	struct:cimg_library_suffixed::CImgList
_cimglist_def_is_same1	CImg.h	56743;"	d
_cimglist_def_is_same2	CImg.h	56752;"	d
_cimglist_def_is_same3	CImg.h	56761;"	d
_cimglist_def_is_same	CImg.h	56773;"	d
is_sameXYZC	CImg.h	/^    bool is_sameXYZC(const unsigned int dx, const unsigned int dy,$/;"	f	struct:cimg_library_suffixed::CImgList
is_sameNXYZC	CImg.h	/^    bool is_sameNXYZC(const unsigned int n,$/;"	f	struct:cimg_library_suffixed::CImgList
containsNXYZC	CImg.h	/^    bool containsNXYZC(const int n, const int x=0, const int y=0, const int z=0, const int c=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
containsN	CImg.h	/^    bool containsN(const int n) const {$/;"	f	struct:cimg_library_suffixed::CImgList
contains	CImg.h	/^    bool contains(const T& pixel, t& n, t& x, t&y, t& z, t& c) const {$/;"	f	struct:cimg_library_suffixed::CImgList
contains	CImg.h	/^    bool contains(const T& pixel, t& n, t& x, t&y, t& z) const {$/;"	f	struct:cimg_library_suffixed::CImgList
contains	CImg.h	/^    bool contains(const T& pixel, t& n, t& x, t&y) const {$/;"	f	struct:cimg_library_suffixed::CImgList
contains	CImg.h	/^    bool contains(const T& pixel, t& n, t& x) const {$/;"	f	struct:cimg_library_suffixed::CImgList
contains	CImg.h	/^    bool contains(const T& pixel, t& n) const {$/;"	f	struct:cimg_library_suffixed::CImgList
contains	CImg.h	/^    bool contains(const T& pixel) const {$/;"	f	struct:cimg_library_suffixed::CImgList
contains	CImg.h	/^    bool contains(const CImg<T>& img, t& n) const {$/;"	f	struct:cimg_library_suffixed::CImgList
contains	CImg.h	/^    bool contains(const CImg<T>& img) const {$/;"	f	struct:cimg_library_suffixed::CImgList
min	CImg.h	/^    T& min() {$/;"	f	struct:cimg_library_suffixed::CImgList
min	CImg.h	/^    const T& min() const {$/;"	f	struct:cimg_library_suffixed::CImgList
max	CImg.h	/^    T& max() {$/;"	f	struct:cimg_library_suffixed::CImgList
max	CImg.h	/^    const T& max() const {$/;"	f	struct:cimg_library_suffixed::CImgList
min_max	CImg.h	/^    T& min_max(t& max_val) {$/;"	f	struct:cimg_library_suffixed::CImgList
min_max	CImg.h	/^    const T& min_max(t& max_val) const {$/;"	f	struct:cimg_library_suffixed::CImgList
max_min	CImg.h	/^    T& max_min(t& min_val) {$/;"	f	struct:cimg_library_suffixed::CImgList
max_min	CImg.h	/^    const T& max_min(t& min_val) const {$/;"	f	struct:cimg_library_suffixed::CImgList
insert	CImg.h	/^    CImgList<T>& insert(const CImg<t>& img, const unsigned int pos=~0U, const bool is_shared=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
insert	CImg.h	/^    CImgList<T>& insert(const CImg<T>& img, const unsigned int pos=~0U, const bool is_shared=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_insert	CImg.h	/^    CImgList<T> get_insert(const CImg<t>& img, const unsigned int pos=~0U, const bool is_shared=false) const {$/;"	f	struct:cimg_library_suffixed::CImgList
insert	CImg.h	/^    CImgList<T>& insert(const unsigned int n, const unsigned int pos=~0U) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_insert	CImg.h	/^    CImgList<T> get_insert(const unsigned int n, const unsigned int pos=~0U) const {$/;"	f	struct:cimg_library_suffixed::CImgList
insert	CImg.h	/^    CImgList<T>& insert(const unsigned int n, const CImg<t>& img, const unsigned int pos=~0U,$/;"	f	struct:cimg_library_suffixed::CImgList
get_insert	CImg.h	/^    CImgList<T> get_insert(const unsigned int n, const CImg<t>& img, const unsigned int pos=~0U,$/;"	f	struct:cimg_library_suffixed::CImgList
insert	CImg.h	/^    CImgList<T>& insert(const CImgList<t>& list, const unsigned int pos=~0U, const bool is_shared=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_insert	CImg.h	/^    CImgList<T> get_insert(const CImgList<t>& list, const unsigned int pos=~0U, const bool is_shared=false) const {$/;"	f	struct:cimg_library_suffixed::CImgList
insert	CImg.h	/^    CImgList<T>& insert(const unsigned int n, const CImgList<t>& list, const unsigned int pos=~0U,$/;"	f	struct:cimg_library_suffixed::CImgList
get_insert	CImg.h	/^    CImgList<T> get_insert(const unsigned int n, const CImgList<t>& list, const unsigned int pos=~0U,$/;"	f	struct:cimg_library_suffixed::CImgList
remove	CImg.h	/^    CImgList<T>& remove(const unsigned int pos1, const unsigned int pos2) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_remove	CImg.h	/^    CImgList<T> get_remove(const unsigned int pos1, const unsigned int pos2) const {$/;"	f	struct:cimg_library_suffixed::CImgList
remove	CImg.h	/^    CImgList<T>& remove(const unsigned int pos) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_remove	CImg.h	/^    CImgList<T> get_remove(const unsigned int pos) const {$/;"	f	struct:cimg_library_suffixed::CImgList
remove	CImg.h	/^    CImgList<T>& remove() {$/;"	f	struct:cimg_library_suffixed::CImgList
get_remove	CImg.h	/^    CImgList<T> get_remove() const {$/;"	f	struct:cimg_library_suffixed::CImgList
reverse	CImg.h	/^    CImgList<T>& reverse() {$/;"	f	struct:cimg_library_suffixed::CImgList
get_reverse	CImg.h	/^    CImgList<T> get_reverse() const {$/;"	f	struct:cimg_library_suffixed::CImgList
images	CImg.h	/^    CImgList<T>& images(const unsigned int pos0, const unsigned int pos1) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_images	CImg.h	/^    CImgList<T> get_images(const unsigned int pos0, const unsigned int pos1) const {$/;"	f	struct:cimg_library_suffixed::CImgList
get_shared_images	CImg.h	/^    CImgList<T> get_shared_images(const unsigned int pos0, const unsigned int pos1) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_shared_images	CImg.h	/^    const CImgList<T> get_shared_images(const unsigned int pos0, const unsigned int pos1) const {$/;"	f	struct:cimg_library_suffixed::CImgList
get_append	CImg.h	/^    CImg<T> get_append(const char axis, const float align=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
split	CImg.h	/^    CImgList<T>& split(const char axis, const int nb=-1) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_split	CImg.h	/^    CImgList<T> get_split(const char axis, const int nb=-1) const {$/;"	f	struct:cimg_library_suffixed::CImgList
push_back	CImg.h	/^    CImgList<T>& push_back(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImgList
push_front	CImg.h	/^    CImgList<T>& push_front(const CImg<t>& img) {$/;"	f	struct:cimg_library_suffixed::CImgList
push_back	CImg.h	/^    CImgList<T>& push_back(const CImgList<t>& list) {$/;"	f	struct:cimg_library_suffixed::CImgList
push_front	CImg.h	/^    CImgList<T>& push_front(const CImgList<t>& list) {$/;"	f	struct:cimg_library_suffixed::CImgList
pop_back	CImg.h	/^    CImgList<T>& pop_back() {$/;"	f	struct:cimg_library_suffixed::CImgList
pop_front	CImg.h	/^    CImgList<T>& pop_front() {$/;"	f	struct:cimg_library_suffixed::CImgList
erase	CImg.h	/^    CImgList<T>& erase(const iterator iter) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_select	CImg.h	/^    CImg<intT> get_select(CImgDisplay &disp, const bool feature_type=true,$/;"	f	struct:cimg_library_suffixed::CImgList
get_select	CImg.h	/^    CImg<intT> get_select(const char *const title, const bool feature_type=true,$/;"	f	struct:cimg_library_suffixed::CImgList
_select	CImg.h	/^    CImg<intT> _select(CImgDisplay &disp, const char *const title, const bool feature_type,$/;"	f	struct:cimg_library_suffixed::CImgList
load	CImg.h	/^    CImgList<T>& load(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_load	CImg.h	/^    static CImgList<T> get_load(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
load_cimg	CImg.h	/^    CImgList<T>& load_cimg(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_cimg	CImg.h	/^    static CImgList<T> get_load_cimg(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
load_cimg	CImg.h	/^    CImgList<T>& load_cimg(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_cimg	CImg.h	/^    static CImgList<T> get_load_cimg(std::FILE *const file) {$/;"	f	struct:cimg_library_suffixed::CImgList
_load_cimg	CImg.h	/^    CImgList<T>& _load_cimg(std::FILE *const file, const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
_cimgz_load_cimg_case	CImg.h	58131;"	d
_cimg_load_cimg_case	CImg.h	58149;"	d
load_cimg	CImg.h	/^    CImgList<T>& load_cimg(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_cimg	CImg.h	/^    static CImgList<T> get_load_cimg(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
load_cimg	CImg.h	/^    CImgList<T>& load_cimg(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_cimg	CImg.h	/^    static CImgList<T> get_load_cimg(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImgList
_load_cimg	CImg.h	/^    CImgList<T>& _load_cimg(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
_cimg_load_cimg_case2	CImg.h	58297;"	d
load_parrec	CImg.h	/^    CImgList<T>& load_parrec(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_parrec	CImg.h	/^    static CImgList<T> get_load_parrec(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
load_yuv	CImg.h	/^    CImgList<T>& load_yuv(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_yuv	CImg.h	/^    static CImgList<T> get_load_yuv(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
load_yuv	CImg.h	/^    CImgList<T>& load_yuv(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_yuv	CImg.h	/^    static CImgList<T> get_load_yuv(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImgList
_load_yuv	CImg.h	/^    CImgList<T>& _load_yuv(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
load_video	CImg.h	/^    CImgList<T>& load_video(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_video	CImg.h	/^    static CImgList<T> get_load_video(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
load_ffmpeg_external	CImg.h	/^    CImgList<T>& load_ffmpeg_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_ffmpeg_external	CImg.h	/^    static CImgList<T> get_load_ffmpeg_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
load_gif_external	CImg.h	/^    CImgList<T>& load_gif_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
_load_gif_external	CImg.h	/^    CImgList<T>& _load_gif_external(const char *const filename, const bool use_graphicsmagick=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_gif_external	CImg.h	/^    static CImgList<T> get_load_gif_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
load_gzip_external	CImg.h	/^    CImgList<T>& load_gzip_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_gzip_external	CImg.h	/^    static CImgList<T> get_load_gzip_external(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
load_off	CImg.h	/^    CImgList<T>& load_off(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_off	CImg.h	/^      static CImgList<T> get_load_off(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
load_tiff	CImg.h	/^    CImgList<T>& load_tiff(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
get_load_tiff	CImg.h	/^    static CImgList<T> get_load_tiff(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
print	CImg.h	/^    const CImgList<T>& print(const char *const title=0, const bool display_stats=true) const {$/;"	f	struct:cimg_library_suffixed::CImgList
display	CImg.h	/^    const CImgList<T>& display(CImgDisplay &disp, const char axis='x', const float align=0) const {$/;"	f	struct:cimg_library_suffixed::CImgList
display	CImg.h	/^    const CImgList<T>& display(CImgDisplay &disp, const bool display_info,$/;"	f	struct:cimg_library_suffixed::CImgList
display	CImg.h	/^    const CImgList<T>& display(const char *const title=0, const bool display_info=true,$/;"	f	struct:cimg_library_suffixed::CImgList
_display	CImg.h	/^    const CImgList<T>& _display(CImgDisplay &disp, const char *const title, const CImgList<charT> *const titles,$/;"	f	struct:cimg_library_suffixed::CImgList
__display	CImg.h	/^    CImg<charT> __display() const {$/;"	f	struct:cimg_library_suffixed::CImgList
save	CImg.h	/^    const CImgList<T>& save(const char *const filename, const int number=-1, const unsigned int digits=6) const {$/;"	f	struct:cimg_library_suffixed::CImgList
is_saveable	CImg.h	/^    static bool is_saveable(const char *const filename) {$/;"	f	struct:cimg_library_suffixed::CImgList
save_gif_external	CImg.h	/^    const CImgList<T>& save_gif_external(const char *const filename, const float fps=25,$/;"	f	struct:cimg_library_suffixed::CImgList
_cimg_save_gif_ext	CImg.h	59457;"	d
save_yuv	CImg.h	/^    const CImgList<T>& save_yuv(const char *const filename=0,$/;"	f	struct:cimg_library_suffixed::CImgList
save_yuv	CImg.h	/^    const CImgList<T>& save_yuv(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImgList
_save_yuv	CImg.h	/^    const CImgList<T>& _save_yuv(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
save_cimg	CImg.h	/^    const CImgList<T>& save_cimg(const char *const filename, const bool is_compressed=false) const {$/;"	f	struct:cimg_library_suffixed::CImgList
_save_cimg	CImg.h	/^    const CImgList<T>& _save_cimg(std::FILE *const file, const char *const filename, const bool is_compressed) const {$/;"	f	struct:cimg_library_suffixed::CImgList
save_cimg	CImg.h	/^    const CImgList<T>& save_cimg(std::FILE *file, const bool is_compressed=false) const {$/;"	f	struct:cimg_library_suffixed::CImgList
_save_cimg	CImg.h	/^    const CImgList<T>& _save_cimg(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
_cimg_save_cimg_case	CImg.h	59641;"	d
save_cimg	CImg.h	/^    const CImgList<T>& save_cimg(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
save_cimg	CImg.h	/^    const CImgList<T>& save_cimg(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImgList
_save_empty_cimg	CImg.h	/^    static void _save_empty_cimg(std::FILE *const file, const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
save_empty_cimg	CImg.h	/^    static void save_empty_cimg(const char *const filename,$/;"	f	struct:cimg_library_suffixed::CImgList
save_empty_cimg	CImg.h	/^    static void save_empty_cimg(std::FILE *const file,$/;"	f	struct:cimg_library_suffixed::CImgList
save_tiff	CImg.h	/^    const CImgList<T>& save_tiff(const char *const filename, const unsigned int compression_type=0,$/;"	f	struct:cimg_library_suffixed::CImgList
save_gzip_external	CImg.h	/^    const CImgList<T>& save_gzip_external(const char *const filename) const {$/;"	f	struct:cimg_library_suffixed::CImgList
save_video	CImg.h	/^    const CImgList<T>& save_video(const char *const filename, const unsigned int fps=25,$/;"	f	struct:cimg_library_suffixed::CImgList
save_ffmpeg_external	CImg.h	/^    const CImgList<T>& save_ffmpeg_external(const char *const filename, const unsigned int fps=25,$/;"	f	struct:cimg_library_suffixed::CImgList
get_serialize	CImg.h	/^    CImg<ucharT> get_serialize(const bool is_compressed=false) const {$/;"	f	struct:cimg_library_suffixed::CImgList
get_unserialize	CImg.h	/^    static CImgList<T> get_unserialize(const CImg<t>& buffer) {$/;"	f	struct:cimg_library_suffixed::CImgList
_cimgz_unserialize_case	CImg.h	60174;"	d
_cimg_unserialize_case	CImg.h	60193;"	d
font	CImg.h	/^    static const CImgList<ucharT>& font(const unsigned int requested_height, const bool is_variable_width=true) {$/;"	f	struct:cimg_library_suffixed::CImgList
FFT	CImg.h	/^    CImgList<T>& FFT(const char axis, const bool invert=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_FFT	CImg.h	/^    CImgList<Tfloat> get_FFT(const char axis, const bool invert=false) const {$/;"	f	struct:cimg_library_suffixed::CImgList
FFT	CImg.h	/^    CImgList<T>& FFT(const bool invert=false) {$/;"	f	struct:cimg_library_suffixed::CImgList
get_FFT	CImg.h	/^    CImgList<Tfloat> get_FFT(const bool invert=false) const {$/;"	f	struct:cimg_library_suffixed::CImgList
reverse_object3d	CImg.h	/^    CImgList<T>& reverse_object3d() {$/;"	f	struct:cimg_library_suffixed::CImgList
get_reverse_object3d	CImg.h	/^    CImgList<T> get_reverse_object3d() const {$/;"	f	struct:cimg_library_suffixed::CImgList
cimg	CImg.h	/^namespace cimg {$/;"	n	namespace:cimg_library_suffixed
_stdin	CImg.h	/^  inline FILE* _stdin(const bool throw_exception) {$/;"	f	namespace:cimg_library_suffixed::cimg
_stdout	CImg.h	/^  inline FILE* _stdout(const bool throw_exception) {$/;"	f	namespace:cimg_library_suffixed::cimg
_stderr	CImg.h	/^  inline FILE* _stderr(const bool throw_exception) {$/;"	f	namespace:cimg_library_suffixed::cimg
std_fopen	CImg.h	/^  inline std::FILE *std_fopen(const char *const path, const char *const mode) {$/;"	f	namespace:cimg_library_suffixed::cimg
temporary_path	CImg.h	/^  inline const char* temporary_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
_cimg_test_temporary_path	CImg.h	60553;"	d
programfiles_path	CImg.h	/^  inline const char* programfiles_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
imagemagick_path	CImg.h	/^  inline const char* imagemagick_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
graphicsmagick_path	CImg.h	/^  inline const char* graphicsmagick_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
medcon_path	CImg.h	/^  inline const char* medcon_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
ffmpeg_path	CImg.h	/^  inline const char *ffmpeg_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
gzip_path	CImg.h	/^  inline const char *gzip_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
gunzip_path	CImg.h	/^  inline const char *gunzip_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
dcraw_path	CImg.h	/^  inline const char *dcraw_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
wget_path	CImg.h	/^  inline const char *wget_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
curl_path	CImg.h	/^  inline const char *curl_path(const char *const user_path, const bool reinit_path) {$/;"	f	namespace:cimg_library_suffixed::cimg
_sort_files	CImg.h	/^  inline int _sort_files(const void* a, const void* b) {$/;"	f	namespace:cimg_library_suffixed::cimg
files	CImg.h	/^  inline CImgList<char> files(const char *const path, const bool is_pattern=false,$/;"	f	namespace:cimg_library_suffixed::cimg
ftype	CImg.h	/^  inline const char *ftype(std::FILE *const file, const char *const filename) {$/;"	f	namespace:cimg_library_suffixed::cimg
load_network	CImg.h	/^  inline char *load_network(const char *const url, char *const filename_local,$/;"	f	namespace:cimg_library_suffixed::cimg
tictoc	CImg.h	/^  inline cimg_ulong tictoc(const bool is_tic) {$/;"	f	namespace:cimg_library_suffixed::cimg
strbuffersize	CImg.h	/^  inline const char *strbuffersize(const cimg_ulong size) {$/;"	f	namespace:cimg_library_suffixed::cimg
dialog	CImg.h	/^  inline int dialog(const char *const title, const char *const msg,$/;"	f	namespace:cimg_library_suffixed::cimg
dialog	CImg.h	/^  inline int dialog(const char *const title, const char *const msg,$/;"	f	namespace:cimg_library_suffixed::cimg
eval	CImg.h	/^  inline double eval(const char *const expression, const double x, const double y, const double z, const double c) {$/;"	f	namespace:cimg_library_suffixed::cimg
eval	CImg.h	/^  inline CImg<typename cimg::superset<double,t>::type> eval(const char *const expression, const CImg<t>& xyzc) {$/;"	f	namespace:cimg_library_suffixed::cimg
cil	CImg.h	/^namespace cil = cimg_library_suffixed;$/;"	x
False	CImg.h	61718;"	d
True	CImg.h	61721;"	d
min	CImg.h	61724;"	d
max	CImg.h	61727;"	d
PI	CImg.h	61730;"	d
DX	pro.cpp	/^CImg<float>  DX(CImg<float> & I)$/;"	f
DY	pro.cpp	/^CImg<float>  DY(CImg<float> & I)$/;"	f
Gradiente	pro.cpp	/^CImg<float>  Gradiente(CImg<float> & dx,CImg<float> & dy)$/;"	f
main	pro.cpp	/^int main()$/;"	f
